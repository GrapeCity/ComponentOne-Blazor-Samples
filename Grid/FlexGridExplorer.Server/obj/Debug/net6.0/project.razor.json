{"SerializedFilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\obj\\Debug\\net6.0\\project.razor.json","FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\FlexGridExplorer.Server.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"6.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":383878381,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.OnDemand","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OnDemand"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.OnDemand"}},{"HashCode":-603380579,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.OnDemand","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.OnDemand"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.OnDemand","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":176843380,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.NewRow","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NewRow"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.NewRow"}},{"HashCode":-1317092676,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.NewRow","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.NewRow"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.NewRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1608216758,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomSortIcon","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomSortIcon"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomSortIcon"}},{"HashCode":1229212506,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomSortIcon","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CustomSortIcon"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomSortIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-735511561,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CellFreezing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellFreezing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CellFreezing"}},{"HashCode":306271261,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CellFreezing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CellFreezing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CellFreezing","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1002471126,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.YouTubeSearchBehavior","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"YouTubeSearchBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SearchText","TypeName":"System.String","Metadata":{"Common.PropertyName":"SearchText"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.YouTubeSearchBehavior"}},{"HashCode":1538873125,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.YouTubeSearchBehavior","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.YouTubeSearchBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SearchText","TypeName":"System.String","Metadata":{"Common.PropertyName":"SearchText"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.YouTubeSearchBehavior","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":689234141,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Paging","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Paging"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Paging"}},{"HashCode":-474011464,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Paging","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.Paging"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Paging","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1953789151,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomAppearance","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomAppearance"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomAppearance"}},{"HashCode":2043854862,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomAppearance","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CustomAppearance"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomAppearance","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1389422199,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.SelectionModes","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SelectionModes"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.SelectionModes"}},{"HashCode":1130084168,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.SelectionModes","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.SelectionModes"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.SelectionModes","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-99595283,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomColumns","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomColumns"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomColumns"}},{"HashCode":-1757314464,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CustomColumns","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CustomColumns"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CustomColumns","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-757135690,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ConditionalFormatting","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ConditionalFormatting"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ConditionalFormatting"}},{"HashCode":1335606464,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ConditionalFormatting","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.ConditionalFormatting"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ConditionalFormatting","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1954249966,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.FullTextFilter","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FullTextFilter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.FullTextFilter"}},{"HashCode":-5015023,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.FullTextFilter","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.FullTextFilter"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.FullTextFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":739040584,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ExcelExport","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExcelExport"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ExcelExport"}},{"HashCode":-1207287501,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ExcelExport","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.ExcelExport"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ExcelExport","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1840174886,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CellMerging","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellMerging"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CellMerging"}},{"HashCode":1312419021,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CellMerging","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CellMerging"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CellMerging","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":114969712,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ColumnDefinitions","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColumnDefinitions"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ColumnDefinitions"}},{"HashCode":-340239529,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ColumnDefinitions","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.ColumnDefinitions"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ColumnDefinitions","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1613703121,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ResponsiveSizing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ResponsiveSizing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ResponsiveSizing"}},{"HashCode":1132721856,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.ResponsiveSizing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.ResponsiveSizing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.ResponsiveSizing","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-85275029,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.EditConfirmation","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditConfirmation"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.EditConfirmation"}},{"HashCode":-1973175842,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.EditConfirmation","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.EditConfirmation"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.EditConfirmation","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1809144028,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.VirtualMode","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"VirtualMode"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.VirtualMode"}},{"HashCode":2103583014,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.VirtualMode","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.VirtualMode"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.VirtualMode","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-976324969,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Index","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Index"}},{"HashCode":-1879719057,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Index","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Index","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2121375361,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Grouping","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Grouping"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Grouping"}},{"HashCode":-7580523,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Grouping","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.Grouping"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Grouping","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-766437091,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.RowDetails","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RowDetails"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.RowDetails"}},{"HashCode":601229718,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.RowDetails","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.RowDetails"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.RowDetails","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1294874454,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.FilterRow","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterRow"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.FilterRow"}},{"HashCode":1428233692,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.FilterRow","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.FilterRow"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.FilterRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1124646617,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Unbound","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Unbound"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Unbound"}},{"HashCode":83968707,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Unbound","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.Unbound"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Unbound","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":226935735,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Export","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Export"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Export"}},{"HashCode":-1298115918,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.Export","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.Export"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.Export","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":165139545,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CheckList","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckList"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CheckList"}},{"HashCode":1689796936,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.CheckList","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.CheckList"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.CheckList","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1733372323,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.PopupEditing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupEditing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.PopupEditing"}},{"HashCode":495622311,"Kind":"Components.Component","Name":"FlexGridExplorer.Pages.PopupEditing","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Pages.PopupEditing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Pages.PopupEditing","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":8380784,"Kind":"Components.Component","Name":"FlexGridExplorer.Shared.MainLayout","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Shared.MainLayout"}},{"HashCode":-1432874072,"Kind":"Components.Component","Name":"FlexGridExplorer.Shared.MainLayout","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Shared.MainLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1660496317,"Kind":"Components.ChildContent","Name":"FlexGridExplorer.Shared.MainLayout.Body","AssemblyName":"FlexGridExplorer","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"FlexGridExplorer.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1248906630,"Kind":"Components.ChildContent","Name":"FlexGridExplorer.Shared.MainLayout.Body","AssemblyName":"FlexGridExplorer","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"FlexGridExplorer.Shared.MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"FlexGridExplorer.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1161420026,"Kind":"Components.Component","Name":"FlexGridExplorer.Shared.NavMenu","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Shared.NavMenu"}},{"HashCode":75587973,"Kind":"Components.Component","Name":"FlexGridExplorer.Shared.NavMenu","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.Shared.NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.Shared.NavMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2070534580,"Kind":"Components.Component","Name":"FlexGridExplorer.App","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.App"}},{"HashCode":2089587515,"Kind":"Components.Component","Name":"FlexGridExplorer.App","AssemblyName":"FlexGridExplorer","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridExplorer.App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"FlexGridExplorer.App","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-939804279,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm"}},{"HashCode":707216181,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-408043690,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1704917829,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1420558410,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":-1650507943,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":704578197,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True"}},{"HashCode":1915447523,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":328771901,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile"}},{"HashCode":-177543775,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":935534115,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True"}},{"HashCode":31892784,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":532414311,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1975191459,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1239896056,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True"}},{"HashCode":1248723515,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-5688087,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-647344956,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-978423627,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True"}},{"HashCode":1777691999,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1130157769,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-662414230,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-400466067,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":-624435841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1526645893,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":1278722841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":49922468,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True"}},{"HashCode":1343924420,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1355226858,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}},{"HashCode":-1802879813,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1281797782,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}},{"HashCode":-1640124240,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1462781705,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink"}},{"HashCode":1481322604,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-386477367,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":720148254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1120317366,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent"}},{"HashCode":-764133860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1567531839,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1208072112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1593959033,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}},{"HashCode":-34130624,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1765254677,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle"}},{"HashCode":1265492983,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":206629272,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2057572728,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1524847289,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}},{"HashCode":-1295008868,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1991737880,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1669670115,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1533554184,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-941639418,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2100606566,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True"}},{"HashCode":-349097859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1013193740,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1003924632,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":153524432,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1557674147,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1302905679,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":945222623,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1871990747,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}},{"HashCode":1269318827,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1371580223,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-942676909,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":254469406,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":933735593,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1561818538,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}},{"HashCode":338228678,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1411478404,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-624178974,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2050760822,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1941271305,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1142720739,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1301732458,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-209287632,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":650326898,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":514566703,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}},{"HashCode":-273549252,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-766584723,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":292603590,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1570376398,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}},{"HashCode":-1317134907,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":100075476,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True"}},{"HashCode":2058523097,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":909141050,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-700243708,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1980174088,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent"}},{"HashCode":-1268363715,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":47192083,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView"}},{"HashCode":171641290,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1879651112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1403492109,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1044827811,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView"}},{"HashCode":-1365215869,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":646472149,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router"}},{"HashCode":-701282789,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-806325141,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1984749400,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":377068835,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-879377312,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1895447004,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2136429748,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1998552650,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateRangeFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateRangeFilterPresenter\">\r\n    <summary>\r\n    DateRangeFilter that represents for Date filter model.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateRangeFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.Filter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"From","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.From\">\r\n    <summary>\r\n    Label for Lower editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"From"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.To\">\r\n    <summary>\r\n    Label for upper editor\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"To"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateRangeFilterPresenter"}},{"HashCode":821974896,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateRangeFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateRangeFilterPresenter\">\r\n    <summary>\r\n    DateRangeFilter that represents for Date filter model.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.DateRangeFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.Filter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"From","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.From\">\r\n    <summary>\r\n    Label for Lower editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"From"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.To\">\r\n    <summary>\r\n    Label for upper editor\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"To"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateRangeFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1982937335,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.FullTextFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.FullTextFilterPresenter\">\r\n    <summary>\r\n    Presenter for FullTextFilter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FullTextFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.FullTextFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.Text\">\r\n    <summary>\r\n    Gets or sets the text of search box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.MatchCase\">\r\n    <summary>\r\n    Gets or sets value of MatchCase checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets value of MatchWholeWord checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.FullTextFilterPresenter"}},{"HashCode":-1529626437,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.FullTextFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.FullTextFilterPresenter\">\r\n    <summary>\r\n    Presenter for FullTextFilter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.FullTextFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.FullTextFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.Text\">\r\n    <summary>\r\n    Gets or sets the text of search box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.MatchCase\">\r\n    <summary>\r\n    Gets or sets value of MatchCase checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilterPresenter.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets value of MatchWholeWord checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.FullTextFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":875219325,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.TextFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.TextFilter\">\r\n    <summary>\r\n    Conditional filter for text data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.TextFilter"}},{"HashCode":721567207,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.TextFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.TextFilter\">\r\n    <summary>\r\n    Conditional filter for text data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.TextFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.TextFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1473310294,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericFilter\">\r\n    <summary>\r\n    Conditional filter for numeric data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Format\">\r\n    <summary>\r\n    Gets or sets the format of numeric text box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Increment\">\r\n    <summary>\r\n    Gets or set the the amount to increment/decrement when the user clicks up/down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericFilter"}},{"HashCode":-864797579,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericFilter\">\r\n    <summary>\r\n    Conditional filter for numeric data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.NumericFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Format\">\r\n    <summary>\r\n    Gets or sets the format of numeric text box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Increment\">\r\n    <summary>\r\n    Gets or set the the amount to increment/decrement when the user clicks up/down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.NumericFilter.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-696420911,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateFilter\">\r\n    <summary>\r\n    Conditional filter for date data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateFilter.Format\">\r\n    <summary>\r\n    Gets or sets a custom date format.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateFilter"}},{"HashCode":1077966903,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateFilter\">\r\n    <summary>\r\n    Conditional filter for date data type.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.DateFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateFilter.Format\">\r\n    <summary>\r\n    Gets or sets a custom date format.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1726718557,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ConditionalFilterItemPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ConditionalFilterItemPresenter\">\r\n    <summary>\r\n    Conditional filter item presenter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ConditionalFilterItemPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterItemPresenter"}},{"HashCode":-2084457228,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ConditionalFilterItemPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ConditionalFilterItemPresenter\">\r\n    <summary>\r\n    Conditional filter item presenter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.ConditionalFilterItemPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterItemPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1586801541,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.TextFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.TextFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TextFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.TextFilterPresenter"}},{"HashCode":-567415168,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.TextFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.TextFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.TextFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.TextFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1846321263,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateFilterPresenter"}},{"HashCode":-642408266,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.DateFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1191590017,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericFilterPresenter"}},{"HashCode":2084585200,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericFilterPresenter\">\r\n    <inheritdoc/>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.NumericFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ConditionalFilter","TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Metadata":{"Common.PropertyName":"ConditionalFilter"}},{"Kind":"Components.Component","Name":"Expression","TypeName":"C1.Blazor.DataFilter.CombinationExpression","Metadata":{"Common.PropertyName":"Expression"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2048652015,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.C1DataFilter\">\r\n    <summary>\r\n    The <see cref=\"T:C1.Blazor.DataFilter.C1DataFilter\"/> lets users filter data based on criteria's. It can be bound to any data-aware control and multiple conditional filtering could be applied.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DataFilters","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.DataFilters\">\r\n    <summary>\r\n    Filter collection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataFilters","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterValueChanged","TypeName":"System.EventHandler<C1.Blazor.DataFilter.FilterChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterValueChanged\">\r\n    <summary>\r\n    Occurs when a value of the filter changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterAutoGenerating","TypeName":"System.EventHandler<C1.Blazor.DataFilter.FilterAutoGeneratingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterAutoGenerating\">\r\n    <summary>\r\n    Occurs before the filter is added to the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.Filters\"/>. Allows to cancel the change.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterAutoGenerating","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterChanging","TypeName":"System.EventHandler<System.ComponentModel.CancelEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterChanging\">\r\n    <summary>\r\n    Occurs before the filter is changed. Allows to cancel the change.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterChanged\">\r\n    <summary>\r\n    Occurs when the filter changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"AutoGenerateFilters","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFilters\">\r\n    <summary>\r\n    Gets or sets a value indicating whether to generate filters automatically.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateFilters"}},{"Kind":"Components.Component","Name":"AutoGenerateFiltersChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFiltersChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFilters\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateFiltersChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AutoApply","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApply\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the filter should be automatically applied to the DataSource after the filter value is changed or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoApply"}},{"Kind":"Components.Component","Name":"AutoApplyChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApplyChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApply\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoApplyChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChecklistEmptyFilterBehavior","TypeName":"C1.Blazor.DataFilter.EmptyFilterBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.ChecklistEmptyFilterBehavior\">\r\n    <summary>\r\n    Gets or sets the behavior when CheckListFilter is assigned an empty expression.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChecklistEmptyFilterBehavior"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.Accordion.ExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandMode\">\r\n    <summary>\r\n    Gets or sets the expanding behavior which determines how many items can be expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter"}},{"HashCode":-124883067,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.C1DataFilter\">\r\n    <summary>\r\n    The <see cref=\"T:C1.Blazor.DataFilter.C1DataFilter\"/> lets users filter data based on criteria's. It can be bound to any data-aware control and multiple conditional filtering could be applied.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DataFilters","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.DataFilters\">\r\n    <summary>\r\n    Filter collection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataFilters","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterValueChanged","TypeName":"System.EventHandler<C1.Blazor.DataFilter.FilterChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterValueChanged\">\r\n    <summary>\r\n    Occurs when a value of the filter changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterAutoGenerating","TypeName":"System.EventHandler<C1.Blazor.DataFilter.FilterAutoGeneratingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterAutoGenerating\">\r\n    <summary>\r\n    Occurs before the filter is added to the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.Filters\"/>. Allows to cancel the change.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterAutoGenerating","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterChanging","TypeName":"System.EventHandler<System.ComponentModel.CancelEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterChanging\">\r\n    <summary>\r\n    Occurs before the filter is changed. Allows to cancel the change.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"FilterChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.FilterChanged\">\r\n    <summary>\r\n    Occurs when the filter changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"AutoGenerateFilters","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFilters\">\r\n    <summary>\r\n    Gets or sets a value indicating whether to generate filters automatically.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateFilters"}},{"Kind":"Components.Component","Name":"AutoGenerateFiltersChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFiltersChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoGenerateFilters\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateFiltersChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AutoApply","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApply\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the filter should be automatically applied to the DataSource after the filter value is changed or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoApply"}},{"Kind":"Components.Component","Name":"AutoApplyChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApplyChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.DataFilter.C1DataFilter.AutoApply\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoApplyChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ChecklistEmptyFilterBehavior","TypeName":"C1.Blazor.DataFilter.EmptyFilterBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.ChecklistEmptyFilterBehavior\">\r\n    <summary>\r\n    Gets or sets the behavior when CheckListFilter is assigned an empty expression.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChecklistEmptyFilterBehavior"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.Accordion.ExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandMode\">\r\n    <summary>\r\n    Gets or sets the expanding behavior which determines how many items can be expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-811341369,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.DataFilters","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.DataFilters\">\r\n    <summary>\r\n    Filter collection.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataFilters","ParentTag":"C1DataFilter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.DataFilters","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1520823632,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.DataFilters","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.C1DataFilter.DataFilters\">\r\n    <summary>\r\n    Filter collection.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataFilters","ParentTag":"C1.Blazor.DataFilter.C1DataFilter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.DataFilters","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1164964900,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ExpandIconTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-249864949,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ExpandIconTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1.Blazor.DataFilter.C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":334488473,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.HeaderTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1329422215,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.HeaderTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.DataFilter.C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":314509558,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ChildContent","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DataFilter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1609180217,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ChildContent","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DataFilter.C1DataFilter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1116134394,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ItemTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1546606256,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.C1DataFilter.ItemTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.DataFilter.C1DataFilter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":986198577,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericRangeFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericRangeFilterPresenter\">\r\n    <summary>\r\n    Range filter for numeric range filter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericRangeFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.Filter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"From","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.From\">\r\n    <summary>\r\n    Label for Lower editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"From"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.To\">\r\n    <summary>\r\n    Label for upper editor\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"To"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericRangeFilterPresenter"}},{"HashCode":593633456,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.NumericRangeFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.NumericRangeFilterPresenter\">\r\n    <summary>\r\n    Range filter for numeric range filter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.NumericRangeFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.Filter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"From","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.From\">\r\n    <summary>\r\n    Label for Lower editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"From"}},{"Kind":"Components.Component","Name":"To","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterPresenter.To\">\r\n    <summary>\r\n    Label for upper editor\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"To"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.NumericRangeFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2809507,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateRangeFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateRangeFilter\">\r\n    <summary>\r\n    Represents a filter of dates with range slider or editors of range.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateRangeFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Format\">\r\n    <summary>\r\n    Gets or sets a custom date format.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"SliderVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.SliderVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the range slider or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SliderVisible"}},{"Kind":"Components.Component","Name":"EditorsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.EditorsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the editors or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsVisible"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateRangeFilter"}},{"HashCode":481664052,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.DateRangeFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.DateRangeFilter\">\r\n    <summary>\r\n    Represents a filter of dates with range slider or editors of range.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.DateRangeFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Format\">\r\n    <summary>\r\n    Gets or sets a custom date format.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"SliderVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.SliderVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the range slider or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SliderVisible"}},{"Kind":"Components.Component","Name":"EditorsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.DateRangeFilterBase.EditorsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the editors or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsVisible"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.DateRangeFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1521608294,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ConditionalFilterPresenter\">\r\n    <summary>\r\n    Presenter for Conditional Filter that allows to customize combination filters.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ConditionalFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ConditionalFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilterPresenter.Filter\">\r\n    <summary>\r\n    Filter model\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter"}},{"HashCode":-1828491014,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ConditionalFilterPresenter\">\r\n    <summary>\r\n    Presenter for Conditional Filter that allows to customize combination filters.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.ConditionalFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ConditionalFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ConditionalFilterPresenter.Filter\">\r\n    <summary>\r\n    Filter model\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1191305757,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ChildContent","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ConditionalFilterPresenter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1117851760,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ChildContent","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DataFilter.ConditionalFilterPresenter"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":663449877,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ItemTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"ConditionalFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":695370746,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ItemTemplate","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.DataFilter.ConditionalFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataFilter.ConditionalFilterPresenter.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":734492065,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ThreeStateFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ThreeStateFilterPresenter\">\r\n    <summary>\r\n    Presenter for ThreeStateBoolFilter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ThreeStateFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ThreeStateFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ThreeStateFilterPresenter"}},{"HashCode":326765042,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ThreeStateFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ThreeStateFilterPresenter\">\r\n    <summary>\r\n    Presenter for ThreeStateBoolFilter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.ThreeStateFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ThreeStateFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ThreeStateFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-485790879,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.FullTextFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.FullTextFilter\">\r\n    <summary>\r\n    Represents a filter to search text.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FullTextFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.MatchCase\">\r\n    <summary>\r\n    To know MatchCase mode is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.MatchWholeWord\">\r\n    <summary>\r\n    To know MatchWholeWord mode is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.Text\">\r\n    <summary>\r\n    Gets or sets the current string value of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"ShowMatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.ShowMatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the MatchWholeWord checkbox is shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMatchWholeWord"}},{"Kind":"Components.Component","Name":"ShowMatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.ShowMatchCase\">\r\n    <summary>\r\n    Gets or sets whether the MatchCase checkbox is shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMatchCase"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.FullTextFilter"}},{"HashCode":-1495108438,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.FullTextFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.FullTextFilter\">\r\n    <summary>\r\n    Represents a filter to search text.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.FullTextFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.MatchCase\">\r\n    <summary>\r\n    To know MatchCase mode is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.MatchWholeWord\">\r\n    <summary>\r\n    To know MatchWholeWord mode is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the value changed event.\r\n    </summary>\r\n    <remarks>\r\n    Setting this delay to something bigger than zero allows skipping unnecessary events when the input box is used in filtering scenarios.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.Text\">\r\n    <summary>\r\n    Gets or sets the current string value of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"ShowMatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.ShowMatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the MatchWholeWord checkbox is shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMatchWholeWord"}},{"Kind":"Components.Component","Name":"ShowMatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.FullTextFilter.ShowMatchCase\">\r\n    <summary>\r\n    Gets or sets whether the MatchCase checkbox is shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMatchCase"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.FullTextFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2072078925,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.CheckListFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.CheckListFilterPresenter\">\r\n    <summary>\r\n    CheckListFilter that represents UI for <see cref=\"T:C1.Blazor.DataFilter.ChecklistFilter\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckListFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ChecklistFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.CheckListFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"SelectAll","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.CheckListFilterPresenter.SelectAll\">\r\n    <summary>\r\n    Label for CheckAll checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAll"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.CheckListFilterPresenter"}},{"HashCode":-246838817,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.CheckListFilterPresenter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.CheckListFilterPresenter\">\r\n    <summary>\r\n    CheckListFilter that represents UI for <see cref=\"T:C1.Blazor.DataFilter.ChecklistFilter\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.CheckListFilterPresenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Filter","TypeName":"C1.Blazor.DataFilter.ChecklistFilter","Documentation":"<member name=\"P:C1.Blazor.DataFilter.CheckListFilterPresenter.Filter\">\r\n    <summary>\r\n    Gets or sets filter associated with this element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"SelectAll","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.CheckListFilterPresenter.SelectAll\">\r\n    <summary>\r\n    Label for CheckAll checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAll"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.CheckListFilterPresenter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":457757789,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ThreeStateFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ThreeStateFilter\">\r\n    <summary>\r\n    Represents a filter with checkboxes for bool value.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ThreeStateFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsTrueChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsTrueChecked\">\r\n    <summary>\r\n    Gets or sets the value of the true condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsTrueChecked"}},{"Kind":"Components.Component","Name":"IsFalseChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsFalseChecked\">\r\n    <summary>\r\n    Gets or sets the value of the false condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFalseChecked"}},{"Kind":"Components.Component","Name":"IsNullChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsNullChecked\">\r\n    <summary>\r\n    Gets or sets the value of the null condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsNullChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsThreeState\">\r\n    <summary>\r\n    Gets or sets allows filter to accept nullable bool value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"SelectAllLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.SelectAllLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of select all checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAllLabel"}},{"Kind":"Components.Component","Name":"TrueLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.TrueLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of true checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrueLabel"}},{"Kind":"Components.Component","Name":"FalseLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.FalseLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of false checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FalseLabel"}},{"Kind":"Components.Component","Name":"NullLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.NullLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of null checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NullLabel"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ThreeStateFilter"}},{"HashCode":2085774255,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ThreeStateFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ThreeStateFilter\">\r\n    <summary>\r\n    Represents a filter with checkboxes for bool value.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.ThreeStateFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsTrueChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsTrueChecked\">\r\n    <summary>\r\n    Gets or sets the value of the true condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsTrueChecked"}},{"Kind":"Components.Component","Name":"IsFalseChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsFalseChecked\">\r\n    <summary>\r\n    Gets or sets the value of the false condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFalseChecked"}},{"Kind":"Components.Component","Name":"IsNullChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsNullChecked\">\r\n    <summary>\r\n    Gets or sets the value of the null condition.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsNullChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.IsThreeState\">\r\n    <summary>\r\n    Gets or sets allows filter to accept nullable bool value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"SelectAllLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.SelectAllLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of select all checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAllLabel"}},{"Kind":"Components.Component","Name":"TrueLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.TrueLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of true checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrueLabel"}},{"Kind":"Components.Component","Name":"FalseLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.FalseLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of false checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FalseLabel"}},{"Kind":"Components.Component","Name":"NullLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ThreeStateFilter.NullLabel\">\r\n    <summary>\r\n    Gets or sets the text of label of null checkbox.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NullLabel"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ThreeStateFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":57605095,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.RangeFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.RangeFilter\">\r\n    <summary>\r\n    Represents a filter with range slider or editors of range.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RangeFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Format\">\r\n    <summary>\r\n    Gets or sets the format of numeric text box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Increment\">\r\n    <summary>\r\n    Gets or set the the amount to increment/decrement when the user clicks up/down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"SliderVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.SliderVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the range slider or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SliderVisible"}},{"Kind":"Components.Component","Name":"EditorsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.EditorsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the editors or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsVisible"}},{"Kind":"Components.Component","Name":"EditorsType","TypeName":"C1.Blazor.DataFilter.EditorsType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.EditorsType\">\r\n    <summary>\r\n    Gets or sets a value indicating editors type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsType"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.RangeFilter"}},{"HashCode":-537074114,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.RangeFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.RangeFilter\">\r\n    <summary>\r\n    Represents a filter with range slider or editors of range.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.RangeFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Format\">\r\n    <summary>\r\n    Gets or sets the format of numeric text box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Increment","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Increment\">\r\n    <summary>\r\n    Gets or set the the amount to increment/decrement when the user clicks up/down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Increment"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value of the range.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"SliderVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.SliderVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the range slider or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SliderVisible"}},{"Kind":"Components.Component","Name":"EditorsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.EditorsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show the editors or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsVisible"}},{"Kind":"Components.Component","Name":"EditorsType","TypeName":"C1.Blazor.DataFilter.EditorsType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.RangeFilterBase.EditorsType\">\r\n    <summary>\r\n    Gets or sets a value indicating editors type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorsType"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.RangeFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-308397975,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ChecklistFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ChecklistFilter\">\r\n    <summary>\r\n    Represents a filter with checklist.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChecklistFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectAllLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.SelectAllLabel\">\r\n    <summary>\r\n    Gets or sets select all checkbox label.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAllLabel"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ShowSelectAll\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show select all checkbox or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSelectAll"}},{"Kind":"Components.Component","Name":"ShowSearchBox","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ShowSearchBox\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show search box or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSearchBox"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the object used as the items source for the checklist.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.DataFilter.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.SelectionMode\">\r\n    <summary>\r\n    Gets or sets a value indicating selection method for items of checklist.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets a path to a value on the source object to serve as the visual representation of the object.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets a path to a value on the source object to serve as the value representation of the object.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ChecklistFilter"}},{"HashCode":780135785,"Kind":"Components.Component","Name":"C1.Blazor.DataFilter.ChecklistFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"<member name=\"T:C1.Blazor.DataFilter.ChecklistFilter\">\r\n    <summary>\r\n    Represents a filter with checklist.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.ChecklistFilter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectAllLabel","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.SelectAllLabel\">\r\n    <summary>\r\n    Gets or sets select all checkbox label.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectAllLabel"}},{"Kind":"Components.Component","Name":"ShowSelectAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ShowSelectAll\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show select all checkbox or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSelectAll"}},{"Kind":"Components.Component","Name":"ShowSearchBox","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ShowSearchBox\">\r\n    <summary>\r\n    Gets or sets a value indicating whether show search box or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSearchBox"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the object used as the items source for the checklist.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.DataFilter.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.SelectionMode\">\r\n    <summary>\r\n    Gets or sets a value indicating selection method for items of checklist.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets a path to a value on the source object to serve as the visual representation of the object.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.ChecklistFilterBase.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets a path to a value on the source object to serve as the value representation of the object.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.PropertyName\">\r\n    <summary>\r\n    Gets or sets the name of the data item property to which the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/> applies.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"HeaderText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.HeaderText\">\r\n    <summary>\r\n    Gets or sets a value of header text of the current <see cref=\"T:C1.Blazor.DataFilter.Filter\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderText"}},{"Kind":"Components.Component","Name":"ToolTip","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DataFilter.Filter.ToolTip\">\r\n    <summary>\r\n    Gets or sets the text that appears as a ToolTip for header of this filter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ToolTip"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataFilter.ChecklistFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1057876291,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DateTimePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date and time\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy hh:mm tt\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.DateTimeEditors.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"ViewMode","TypeName":"C1.Blazor.DateTimeEditors.DateTimePickerViewMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.ViewMode\">\r\n    <summary>\r\n    Gets or sets the selection mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewMode"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}},{"HashCode":757426109,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DateTimePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date and time\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy hh:mm tt\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.DateTimeEditors.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"ViewMode","TypeName":"C1.Blazor.DateTimeEditors.DateTimePickerViewMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimePicker.ViewMode\">\r\n    <summary>\r\n    Gets or sets the selection mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewMode"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-415465495,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1435011497,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2080656785,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1543341636,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1669370898,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1179127414,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":413920352,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2115154659,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1986852771,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1349681977,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-123610682,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1134670769,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1303865901,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-619126521,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1801102298,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2138448009,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-552835203,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2141093940,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-799456388,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-156969334,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1228141546,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DatePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker"}},{"HashCode":1471324749,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DatePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DatePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":602312679,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1493524661,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-156463099,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":342742585,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":63626407,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-443205528,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1069717182,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1336172758,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1061743218,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":394952377,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1628335128,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1794617580,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":487497035,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":409199317,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1971935852,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":750939663,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-898846024,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1125987165,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1025330661,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":453358583,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DatePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1410255382,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1TimeEditor\">\r\n    <summary>\r\n    C1TimeEditor control extends the C1DropDown class to allow easy entry and editing of time values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Value\">\r\n    <summary>\r\n    Gets or sets the current input time.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Min\">\r\n    <summary>\r\n    Gets or sets the earliest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"ClockType","TypeName":"C1.Blazor.DateTimeEditors.Views.ClockType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.ClockType\">\r\n    <summary>\r\n    Gets or sets the earliest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClockType"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Max\">\r\n    <summary>\r\n    Gets or sets the latest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Format\">\r\n    <summary>\r\n    Gets or sets the format used to display the selected time.\r\n    \r\n    The format string is expressed as a .NET-style \r\n    <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\" target=\"_blank\">\r\n    time format string</a>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor"}},{"HashCode":1423851739,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1TimeEditor\">\r\n    <summary>\r\n    C1TimeEditor control extends the C1DropDown class to allow easy entry and editing of time values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Value\">\r\n    <summary>\r\n    Gets or sets the current input time.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Min\">\r\n    <summary>\r\n    Gets or sets the earliest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"ClockType","TypeName":"C1.Blazor.DateTimeEditors.Views.ClockType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.ClockType\">\r\n    <summary>\r\n    Gets or sets the earliest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClockType"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Max\">\r\n    <summary>\r\n    Gets or sets the latest time that the user can enter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Format\">\r\n    <summary>\r\n    Gets or sets the format used to display the selected time.\r\n    \r\n    The format string is expressed as a .NET-style \r\n    <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\" target=\"_blank\">\r\n    time format string</a>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1TimeEditor.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1194871570,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-525517668,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":861390315,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.Header","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":44894016,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.Header","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1048933085,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-60724161,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2044195218,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1752959664,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":151343897,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":125042825,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1TimeEditor"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-469825449,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DateRangePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date range values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"C1.Blazor.DateTimeEditors.DateRange","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"<!-- Badly formed XML comment ignored for member \"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Separator\" -->\r\n","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeRangeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.DateTimeEditors.DateRange>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}},{"HashCode":-706405506,"Kind":"Components.Component","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"T:C1.Blazor.DateTimeEditors.C1DateRangePicker\">\r\n    <summary>\r\n     Represents a control that can be used to display and edit date range values.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"C1.Blazor.DateTimeEditors.DateRange","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Value\">\r\n    <summary>\r\n    Get or set value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Separator","TypeName":"System.String","Documentation":"<!-- Badly formed XML comment ignored for member \"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Separator\" -->\r\n","Metadata":{"Common.PropertyName":"Separator"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.Format\">\r\n    <summary>\r\n    Contains the date format value with default is MM/dd/yyyy\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.DateTimeEditors.EventArgs.DateTimeRangeValueChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.DateTimeEditors.DateRange>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateRangePicker.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsEnabled\">\r\n    <summary>\r\n    Gets or sets the enabled status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets the read-only status.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"CalendarOrientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarOrientation\">\r\n    <summary>\r\n    Gets or sets the calendar orientation.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarOrientation"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderStyle\">\r\n    <summary>\r\n    Custom HeaderStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekStyle\">\r\n    <summary>\r\n    Custom DayOfWeekStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayStyle\">\r\n    <summary>\r\n    Custom DayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.SelectedDateStyle\">\r\n    <summary>\r\n    Custom SelectedDateStyle \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayStyle\">\r\n    <summary>\r\n    Custom TodayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.AdjacentDayStyle\">\r\n    <summary>\r\n    Custom AdjacentDayStyle\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"CalendarStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CalendarStyle\">\r\n    <summary>\r\n    Custom calendar style\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarStyle"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MaxDate\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.MinDate\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.HeaderMonthFormat\">\r\n    <summary>\r\n    Get or set the HeaderMonthFormat. Default value is 'MMM'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.DayOfWeekFormat\">\r\n    <summary>\r\n    Get or set the DayOfWeekFormat. Default value is 'dd'\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1340942731,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-94796198,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.EditableHeader","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-308792429,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":485699550,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.Header","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1592214957,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-254332222,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ChildContent","AssemblyName":"C1.Blazor.DateTimeEditors","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1581319615,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-140309554,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.NextIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.NextIconTemplate\">\r\n    <summary>\r\n    NextIconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":373689614,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":420859310,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.PrevIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.PrevIconTemplate\">\r\n    <summary>\r\n    PrevIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":396884487,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1464139392,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.TodayIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1775787042,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-524057273,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2013780338,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-23574860,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.DateTimeEditors.C1DateTimeBase`1.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1073794983,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":501465307,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-605090502,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-187859118,"Kind":"Components.ChildContent","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapsedButtonIcon","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1759589817,"Kind":"Components.Component","Name":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.ListViewVirtualStackPanel`1\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"TItem\">The type of the item.</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.ListView.ListViewVirtualStackPanel<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","Components.GenericTyped":"True"}},{"HashCode":1760956166,"Kind":"Components.Component","Name":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.ListViewVirtualStackPanel`1\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"TItem\">The type of the item.</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.ListViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.ListView.ListViewVirtualStackPanel<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-795459621,"Kind":"Components.Component","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.C1ListView`1\">\r\n    <summary>\r\n    The ListView controls display a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"T\">The type of the items</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.ListView.C1ListView<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"LoadingItem","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewItemStyleEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.LoadingItem\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the items are being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LoadingItem","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the property name or path of the item that will be used to extract the text that will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.DataCollection.IDataCollectionGroup<System.Object, System.Object>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SeparatorWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SeparatorWidth\">\r\n    <summary>\r\n    Gets or sets the width of the line separating items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorWidth"}},{"Kind":"Components.Component","Name":"ScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets visibility of the vertical scrollbar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemBackgroundColor"}},{"Kind":"Components.Component","Name":"ItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTextColor"}},{"Kind":"Components.Component","Name":"AlternatingItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemBackgroundColor"}},{"Kind":"Components.Component","Name":"AlternatingItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemTextColor"}},{"Kind":"Components.Component","Name":"GroupBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupBackgroundColor"}},{"Kind":"Components.Component","Name":"GroupTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the group items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTextColor"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"C1.Blazor.Core.C1OrderedSet","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.Selection\">\r\n    <summary>\r\n    Gets or sets the ListView selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ShowCheckboxes\">\r\n    <summary>\r\n    Sets the name of the property used to control checkboxes placed next to each item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemDoubleTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.GenericTyped":"True"}},{"HashCode":-1105105169,"Kind":"Components.Component","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.C1ListView`1\">\r\n    <summary>\r\n    The ListView controls display a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"T\">The type of the items</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.ListView.C1ListView<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"LoadingItem","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewItemStyleEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.LoadingItem\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the items are being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LoadingItem","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the property name or path of the item that will be used to extract the text that will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.DataCollection.IDataCollectionGroup<System.Object, System.Object>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SeparatorWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SeparatorWidth\">\r\n    <summary>\r\n    Gets or sets the width of the line separating items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorWidth"}},{"Kind":"Components.Component","Name":"ScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets visibility of the vertical scrollbar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemBackgroundColor"}},{"Kind":"Components.Component","Name":"ItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTextColor"}},{"Kind":"Components.Component","Name":"AlternatingItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemBackgroundColor"}},{"Kind":"Components.Component","Name":"AlternatingItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemTextColor"}},{"Kind":"Components.Component","Name":"GroupBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupBackgroundColor"}},{"Kind":"Components.Component","Name":"GroupTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the group items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTextColor"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"C1.Blazor.Core.C1OrderedSet","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.Selection\">\r\n    <summary>\r\n    Gets or sets the ListView selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ShowCheckboxes\">\r\n    <summary>\r\n    Sets the name of the property used to control checkboxes placed next to each item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemDoubleTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-410034024,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"\n            <summary>\n            Gets or sets the template used to render the items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1483878191,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"\n            <summary>\n            Gets or sets the template used to render the items.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1539592843,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"\n            <summary>\n            Gets or sets the template used to display groups.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1973554070,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"\n            <summary>\n            Gets or sets the template used to display groups.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1906372012,"Kind":"Components.Component","Name":"C1.Blazor.Grid.C1GridControl","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.C1GridControl\">\r\n    <summary>\r\n    Control used to display, select and edit tabular information.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1GridControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Adapter","TypeName":"C1.Blazor.Grid.GridControlAdapter","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.Adapter\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Adapter"}},{"Kind":"Components.Component","Name":"IsVirtualizationEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.IsVirtualizationEnabled\">\r\n    <summary>\r\n    Gets or sets whether the ui will be virtualized. Default <c>true</c>.\r\n    </summary>\r\n    <remarks>\r\n    To improve loading performance and network bandwidth usage, the cells are rendered as the user scrolls the controls. \r\n    If the number of cells is small it could be convenient to disable virtualization to improve scrolling speed.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVirtualizationEnabled"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Grid.GridSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MouseOverMode","TypeName":"C1.Blazor.Grid.GridMouseOverMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverMode\">\r\n    <summary>\r\n    Gets or sets how the mouse over mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverMode"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"C1.Blazor.Grid.GridAllowResizing","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to resize rows and columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"C1.Blazor.Grid.GridAllowDragging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to move rows and columns to new positions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"FrozenRows","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenRows\">\r\n    <summary>\r\n    Gets or sets the number of frozen rows.\r\n    </summary>\r\n    <remarks>Frozen rows do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenRows"}},{"Kind":"Components.Component","Name":"FrozenColumns","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenColumns\">\r\n    <summary>\r\n    Gets or sets the number of frozen columns.\r\n    </summary>\r\n    <remarks>Frozen columns do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenColumns"}},{"Kind":"Components.Component","Name":"ShowMarquee","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ShowMarquee\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows an Excel-style\r\n    marquee around the current selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMarquee"}},{"Kind":"Components.Component","Name":"KeyActionTab","TypeName":"C1.Blazor.Grid.GridTabAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionTab\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Tab key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionTab"}},{"Kind":"Components.Component","Name":"KeyActionEnter","TypeName":"C1.Blazor.Grid.GridEnterAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionEnter\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Enter key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionEnter"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"C1.Blazor.Grid.GridZoomMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ZoomMode\">\r\n    <summary>\r\n    Gets or sets the zoom mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the vertical scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the horizontal scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"GridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating inner cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesVisibility"}},{"Kind":"Components.Component","Name":"GridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesBrush"}},{"Kind":"Components.Component","Name":"FrozenLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between frozen\r\n    and scrollable areas of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenLinesBrush"}},{"Kind":"Components.Component","Name":"GridLinesWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesWidth\">\r\n    <summary>\r\n    Gets or sets the width of the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesWidth"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBorderBrush"}},{"Kind":"Components.Component","Name":"EditorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorBackground"}},{"Kind":"Components.Component","Name":"EditorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorForeground"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"SelectionAdornerStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the selection adorners.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerStyle"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CellStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"CursorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CursorStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.C1GridControl"}},{"HashCode":690091124,"Kind":"Components.Component","Name":"C1.Blazor.Grid.C1GridControl","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.C1GridControl\">\r\n    <summary>\r\n    Control used to display, select and edit tabular information.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.C1GridControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Adapter","TypeName":"C1.Blazor.Grid.GridControlAdapter","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.Adapter\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Adapter"}},{"Kind":"Components.Component","Name":"IsVirtualizationEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.IsVirtualizationEnabled\">\r\n    <summary>\r\n    Gets or sets whether the ui will be virtualized. Default <c>true</c>.\r\n    </summary>\r\n    <remarks>\r\n    To improve loading performance and network bandwidth usage, the cells are rendered as the user scrolls the controls. \r\n    If the number of cells is small it could be convenient to disable virtualization to improve scrolling speed.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVirtualizationEnabled"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Grid.GridSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MouseOverMode","TypeName":"C1.Blazor.Grid.GridMouseOverMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverMode\">\r\n    <summary>\r\n    Gets or sets how the mouse over mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverMode"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"C1.Blazor.Grid.GridAllowResizing","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to resize rows and columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"C1.Blazor.Grid.GridAllowDragging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to move rows and columns to new positions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"FrozenRows","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenRows\">\r\n    <summary>\r\n    Gets or sets the number of frozen rows.\r\n    </summary>\r\n    <remarks>Frozen rows do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenRows"}},{"Kind":"Components.Component","Name":"FrozenColumns","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenColumns\">\r\n    <summary>\r\n    Gets or sets the number of frozen columns.\r\n    </summary>\r\n    <remarks>Frozen columns do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenColumns"}},{"Kind":"Components.Component","Name":"ShowMarquee","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ShowMarquee\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows an Excel-style\r\n    marquee around the current selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMarquee"}},{"Kind":"Components.Component","Name":"KeyActionTab","TypeName":"C1.Blazor.Grid.GridTabAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionTab\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Tab key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionTab"}},{"Kind":"Components.Component","Name":"KeyActionEnter","TypeName":"C1.Blazor.Grid.GridEnterAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionEnter\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Enter key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionEnter"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"C1.Blazor.Grid.GridZoomMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ZoomMode\">\r\n    <summary>\r\n    Gets or sets the zoom mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the vertical scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the horizontal scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"GridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating inner cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesVisibility"}},{"Kind":"Components.Component","Name":"GridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesBrush"}},{"Kind":"Components.Component","Name":"FrozenLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between frozen\r\n    and scrollable areas of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenLinesBrush"}},{"Kind":"Components.Component","Name":"GridLinesWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesWidth\">\r\n    <summary>\r\n    Gets or sets the width of the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesWidth"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBorderBrush"}},{"Kind":"Components.Component","Name":"EditorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorBackground"}},{"Kind":"Components.Component","Name":"EditorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorForeground"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"SelectionAdornerStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the selection adorners.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerStyle"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CellStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"CursorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CursorStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.C1GridControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":464562981,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridControlPanel","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.GridControlPanel\">\r\n    <summary>\r\n    Panel that renders the cells in a grid according to the properties <see cref=\"P:C1.Blazor.Grid.GridControlPanel.DisplayRange\"/> and <see cref=\"P:C1.Blazor.Grid.GridControlPanel.Viewport\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridControlPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OuterBorders","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlPanel.OuterBorders\">\r\n    <summary>\r\n    Gets or sets whether the borders of the cells in the edge will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OuterBorders"}},{"Kind":"Components.Component","Name":"RenderModel","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlPanel.RenderModel\">\r\n    <summary>\r\n    Gets or sets whether the panel needs to render the model information that will be used by JavaScript functions to perform client operations.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RenderModel"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridControlPanel"}},{"HashCode":512063716,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridControlPanel","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.GridControlPanel\">\r\n    <summary>\r\n    Panel that renders the cells in a grid according to the properties <see cref=\"P:C1.Blazor.Grid.GridControlPanel.DisplayRange\"/> and <see cref=\"P:C1.Blazor.Grid.GridControlPanel.Viewport\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridControlPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OuterBorders","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlPanel.OuterBorders\">\r\n    <summary>\r\n    Gets or sets whether the borders of the cells in the edge will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OuterBorders"}},{"Kind":"Components.Component","Name":"RenderModel","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlPanel.RenderModel\">\r\n    <summary>\r\n    Gets or sets whether the panel needs to render the model information that will be used by JavaScript functions to perform client operations.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RenderModel"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridControlPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":27349307,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridControlCellView","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.GridControlCellView\">\r\n    <summary>\r\n    Contains properties that will be applied to cell view elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridControlCellView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.SelectedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of selected cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBrush"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of mouse over cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"IsMouseOver","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsMouseOver\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsMouseOver"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsSelected\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridControlCellView"}},{"HashCode":741266299,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridControlCellView","AssemblyName":"C1.Blazor.GridControl","Documentation":"<member name=\"T:C1.Blazor.Grid.GridControlCellView\">\r\n    <summary>\r\n    Contains properties that will be applied to cell view elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridControlCellView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.SelectedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of selected cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBrush"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of mouse over cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"IsMouseOver","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsMouseOver\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsMouseOver"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsSelected\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridControlCellView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-214105374,"Kind":"Components.Component","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"<member name=\"T:C1.Blazor.Calendar.C1Calendar\">\r\n    <summary>\r\n    Represents a month calendar with the ability to interactively navigate\r\n    through months and select a specific <see cref=\"T:System.DateTime\"/> value or a range of dates.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.IsFullScreen\">\r\n    <summary>\r\n    The size equal browser's size in DatePicker\r\n    In DateTimePicker, the size + TimeSelectionPanel = browser's size\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDateStyle\">\r\n    <summary>\r\n    Gets or sets the selected date style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"ItemValidator","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ItemValidator\">\r\n    <summary>\r\n    Gets or sets the selected date style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemValidator","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.EventHandler<C1.Blazor.Calendar.CalendarSelectionChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.OnSelectionChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSelectionChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectedDateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDateChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DisplayDateChanged","TypeName":"System.EventHandler<C1.Blazor.Core.PropertyChangedEventArgs<System.DateTime>>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisplayDateChanged\">\r\n    <summary>\r\n    Occurs when the DisplayDate property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayDateChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekFormat\">\r\n    <summary>\r\n    Gets or sets the format used to display the day of the week.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ViewMode","TypeName":"C1.Blazor.Calendar.CalendarViewMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ViewMode\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the calendar displays a month, year or decade view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewMode"}},{"Kind":"Components.Component","Name":"DisplayDate","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisplayDate\">\r\n    <summary>\r\n    Gets or sets a value specifying the currently displayed date of the year.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayDate"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.FirstDayOfWeek\">\r\n    <summary>\r\n    Gets or sets a value that represents the first day of the week, the one displayed in the first column of the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FirstDayOfWeek"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderMonthFormat\">\r\n    <summary>\r\n    Gets or sets the format used to display the month of the year when the <see cref=\"!:ViewMode\" /> is <see cref=\"F:C1.Blazor.Calendar.CalendarViewMode.Month\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MinDate\">\r\n    <summary>\r\n    Gets or sets the earliest date that the user can select in the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MaxDate\">\r\n    <summary>\r\n    Gets or sets the latest date that the user can select in the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.Orientation\">\r\n    <summary>\r\n    Gets or sets a value indicating which orientation the calendar navigates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"SelectedDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDate\">\r\n    <summary>\r\n    Gets or sets the currently selected date.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDate"}},{"Kind":"Components.Component","Name":"SelectedDates","TypeName":"System.Collections.Generic.IReadOnlyList<System.DateTime>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDates\">\r\n    <summary>\r\n    Gets or sets the list of selected dates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDates"}},{"Kind":"Components.Component","Name":"ShowNavigationButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowNavigationButtons\">\r\n    <summary>\r\n    Navigation Buttons will be shown if set,  default value is true.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowNavigationButtons"}},{"Kind":"Components.Component","Name":"ShowHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowHeader\">\r\n    <summary>\r\n    Header will be shown if set, default value is true.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowHeader"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.PrevIconTemplate\">\r\n    <summary>\r\n    Gets or sets the previous icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.NextIconTemplate\">\r\n    <summary>\r\n    Gets or sets the next icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.AdjacentDayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the AdjacentDay slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"MonthStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MonthStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal month slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthStyle"}},{"Kind":"Components.Component","Name":"YearStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.YearStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal year slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"YearStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekStyle\">\r\n    <summary>\r\n    Gets or sets the style for the Day of Week panel.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style for the calendar header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style for the selected slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the today slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"DisabledStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisabledStyle\">\r\n    <summary>\r\n    Gets or sets the style for the disabled slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisabledStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekSlotTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Calendar.C1Calendar.CalendarDayOfWeekSlotInfo>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate\">\r\n    <summary>\r\n    Gets or sets a data template that defines the UI representation for a day of the week.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekSlotTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DaySlotTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Calendar.C1Calendar.CalendarDaySlotInfo>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DaySlotTemplate\">\r\n    <summary>\r\n    Gets or sets a data template that defines the UI representation for a single day of the month.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DaySlotTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CalendarType","TypeName":"C1.Blazor.Calendar.CalendarType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.CalendarType\">\r\n    <summary>\r\n    Gets or sets the type of calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarType"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection behavior for the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MaxSelectionCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MaxSelectionCount\">\r\n    <summary>\r\n    Gets or sets the maximum number of days that can be selected in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxSelectionCount"}},{"Kind":"Components.Component","Name":"DayBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBackground\">\r\n    <summary>\r\n    Gets or sets the background for the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBackground"}},{"Kind":"Components.Component","Name":"DayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayForeground\">\r\n    <summary>\r\n    Gets or sets the color of the text displayed in the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayForeground"}},{"Kind":"Components.Component","Name":"DayBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBorderBrush\">\r\n    <summary>\r\n    Gets or sets the color used for the border between day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBorderBrush"}},{"Kind":"Components.Component","Name":"DayBorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBorderThickness\">\r\n    <summary>\r\n    Gets or sets the border thickness between day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBorderThickness"}},{"Kind":"Components.Component","Name":"DayPadding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayPadding\">\r\n    <summary>\r\n    Gets or sets the padding of the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayPadding"}},{"Kind":"Components.Component","Name":"DayOfWeekBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekBackground\">\r\n    <summary>\r\n    Gets or sets the background color for the day of week slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekBackground"}},{"Kind":"Components.Component","Name":"DayOfWeekForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekForeground\">\r\n    <summary>\r\n    Gets or sets the color of the text displayed in the day of week slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekForeground"}},{"Kind":"Components.Component","Name":"HeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderBackground\">\r\n    <summary>\r\n    Gets or sets the background for the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderBackground"}},{"Kind":"Components.Component","Name":"HeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderForeground\">\r\n    <summary>\r\n    Gets or sets the color for the header text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderForeground"}},{"Kind":"Components.Component","Name":"SelectionBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionBackground\">\r\n    <summary>\r\n    Gets or sets the color used to highlight selected dates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBackground"}},{"Kind":"Components.Component","Name":"SelectionForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionForeground\">\r\n    <summary>\r\n    Gets or sets the color for selected date text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionForeground"}},{"Kind":"Components.Component","Name":"TodayBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayBackground\">\r\n    <summary>\r\n    Gets or sets the color used to highlight the background of the today day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayBackground"}},{"Kind":"Components.Component","Name":"TodayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayForeground\">\r\n    <summary>\r\n    Gets or sets the color for the text of the today day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayForeground"}},{"Kind":"Components.Component","Name":"DisabledForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisabledForeground\">\r\n    <summary>\r\n    Gets or sets the color for the text of disabled slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisabledForeground"}},{"Kind":"Components.Component","Name":"AdjacentDayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.AdjacentDayForeground\">\r\n    <summary>\r\n    Gets or sets the color of the adjacent days text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayForeground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Calendar.C1Calendar"}},{"HashCode":1384856232,"Kind":"Components.Component","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"<member name=\"T:C1.Blazor.Calendar.C1Calendar\">\r\n    <summary>\r\n    Represents a month calendar with the ability to interactively navigate\r\n    through months and select a specific <see cref=\"T:System.DateTime\"/> value or a range of dates.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MonthCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MonthCount\">\r\n    <summary>\r\n    The number of month will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthCount"}},{"Kind":"Components.Component","Name":"TodayIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayIconTemplate\">\r\n    <summary>\r\n    TodayIconTemplate button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapseViewIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate\">\r\n    <summary>\r\n    Month expanse button content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseViewIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.IsFullScreen\">\r\n    <summary>\r\n    The size equal browser's size in DatePicker\r\n    In DateTimePicker, the size + TimeSelectionPanel = browser's size\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"SelectedDateStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDateStyle\">\r\n    <summary>\r\n    Gets or sets the selected date style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateStyle"}},{"Kind":"Components.Component","Name":"ItemValidator","TypeName":"System.Func<System.DateTime, System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ItemValidator\">\r\n    <summary>\r\n    Gets or sets the selected date style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemValidator","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.EventHandler<C1.Blazor.Calendar.CalendarSelectionChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.OnSelectionChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSelectionChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectedDateChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDateChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDateChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"DisplayDateChanged","TypeName":"System.EventHandler<C1.Blazor.Core.PropertyChangedEventArgs<System.DateTime>>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisplayDateChanged\">\r\n    <summary>\r\n    Occurs when the DisplayDate property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayDateChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DayOfWeekFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekFormat\">\r\n    <summary>\r\n    Gets or sets the format used to display the day of the week.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekFormat"}},{"Kind":"Components.Component","Name":"ViewMode","TypeName":"C1.Blazor.Calendar.CalendarViewMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ViewMode\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the calendar displays a month, year or decade view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewMode"}},{"Kind":"Components.Component","Name":"DisplayDate","TypeName":"System.DateTime","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisplayDate\">\r\n    <summary>\r\n    Gets or sets a value specifying the currently displayed date of the year.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayDate"}},{"Kind":"Components.Component","Name":"FirstDayOfWeek","TypeName":"System.DayOfWeek?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.FirstDayOfWeek\">\r\n    <summary>\r\n    Gets or sets a value that represents the first day of the week, the one displayed in the first column of the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FirstDayOfWeek"}},{"Kind":"Components.Component","Name":"HeaderMonthFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderMonthFormat\">\r\n    <summary>\r\n    Gets or sets the format used to display the month of the year when the <see cref=\"!:ViewMode\" /> is <see cref=\"F:C1.Blazor.Calendar.CalendarViewMode.Month\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderMonthFormat"}},{"Kind":"Components.Component","Name":"MinDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MinDate\">\r\n    <summary>\r\n    Gets or sets the earliest date that the user can select in the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinDate"}},{"Kind":"Components.Component","Name":"MaxDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MaxDate\">\r\n    <summary>\r\n    Gets or sets the latest date that the user can select in the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxDate"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Calendar.CalendarOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.Orientation\">\r\n    <summary>\r\n    Gets or sets a value indicating which orientation the calendar navigates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"ShowAdjacentDay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowAdjacentDay\">\r\n    <summary>\r\n    Default is true - AdjacentDay will invisible if set false.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowAdjacentDay"}},{"Kind":"Components.Component","Name":"SelectedDate","TypeName":"System.DateTime?","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDate\">\r\n    <summary>\r\n    Gets or sets the currently selected date.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDate"}},{"Kind":"Components.Component","Name":"SelectedDates","TypeName":"System.Collections.Generic.IReadOnlyList<System.DateTime>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectedDates\">\r\n    <summary>\r\n    Gets or sets the list of selected dates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedDates"}},{"Kind":"Components.Component","Name":"ShowNavigationButtons","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowNavigationButtons\">\r\n    <summary>\r\n    Navigation Buttons will be shown if set,  default value is true.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowNavigationButtons"}},{"Kind":"Components.Component","Name":"ShowHeader","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.ShowHeader\">\r\n    <summary>\r\n    Header will be shown if set, default value is true.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowHeader"}},{"Kind":"Components.Component","Name":"PrevIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.PrevIconTemplate\">\r\n    <summary>\r\n    Gets or sets the previous icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NextIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.NextIconTemplate\">\r\n    <summary>\r\n    Gets or sets the next icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdjacentDayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.AdjacentDayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the AdjacentDay slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayStyle"}},{"Kind":"Components.Component","Name":"DayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayStyle"}},{"Kind":"Components.Component","Name":"MonthStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MonthStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal month slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MonthStyle"}},{"Kind":"Components.Component","Name":"YearStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.YearStyle\">\r\n    <summary>\r\n    Gets or sets the style for the normal year slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"YearStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekStyle\">\r\n    <summary>\r\n    Gets or sets the style for the Day of Week panel.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekStyle"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style for the calendar header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style for the selected slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"TodayStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayStyle\">\r\n    <summary>\r\n    Gets or sets the style for the today slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayStyle"}},{"Kind":"Components.Component","Name":"DisabledStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisabledStyle\">\r\n    <summary>\r\n    Gets or sets the style for the disabled slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisabledStyle"}},{"Kind":"Components.Component","Name":"DayOfWeekSlotTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Calendar.C1Calendar.CalendarDayOfWeekSlotInfo>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate\">\r\n    <summary>\r\n    Gets or sets a data template that defines the UI representation for a day of the week.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekSlotTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DaySlotTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Calendar.C1Calendar.CalendarDaySlotInfo>","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DaySlotTemplate\">\r\n    <summary>\r\n    Gets or sets a data template that defines the UI representation for a single day of the month.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DaySlotTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CalendarType","TypeName":"C1.Blazor.Calendar.CalendarType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.CalendarType\">\r\n    <summary>\r\n    Gets or sets the type of calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CalendarType"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection behavior for the calendar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MaxSelectionCount","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.MaxSelectionCount\">\r\n    <summary>\r\n    Gets or sets the maximum number of days that can be selected in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxSelectionCount"}},{"Kind":"Components.Component","Name":"DayBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBackground\">\r\n    <summary>\r\n    Gets or sets the background for the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBackground"}},{"Kind":"Components.Component","Name":"DayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayForeground\">\r\n    <summary>\r\n    Gets or sets the color of the text displayed in the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayForeground"}},{"Kind":"Components.Component","Name":"DayBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBorderBrush\">\r\n    <summary>\r\n    Gets or sets the color used for the border between day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBorderBrush"}},{"Kind":"Components.Component","Name":"DayBorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayBorderThickness\">\r\n    <summary>\r\n    Gets or sets the border thickness between day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayBorderThickness"}},{"Kind":"Components.Component","Name":"DayPadding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayPadding\">\r\n    <summary>\r\n    Gets or sets the padding of the day slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayPadding"}},{"Kind":"Components.Component","Name":"DayOfWeekBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekBackground\">\r\n    <summary>\r\n    Gets or sets the background color for the day of week slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekBackground"}},{"Kind":"Components.Component","Name":"DayOfWeekForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DayOfWeekForeground\">\r\n    <summary>\r\n    Gets or sets the color of the text displayed in the day of week slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DayOfWeekForeground"}},{"Kind":"Components.Component","Name":"HeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderBackground\">\r\n    <summary>\r\n    Gets or sets the background for the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderBackground"}},{"Kind":"Components.Component","Name":"HeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.HeaderForeground\">\r\n    <summary>\r\n    Gets or sets the color for the header text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderForeground"}},{"Kind":"Components.Component","Name":"SelectionBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionBackground\">\r\n    <summary>\r\n    Gets or sets the color used to highlight selected dates.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBackground"}},{"Kind":"Components.Component","Name":"SelectionForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.SelectionForeground\">\r\n    <summary>\r\n    Gets or sets the color for selected date text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionForeground"}},{"Kind":"Components.Component","Name":"TodayBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayBackground\">\r\n    <summary>\r\n    Gets or sets the color used to highlight the background of the today day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayBackground"}},{"Kind":"Components.Component","Name":"TodayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.TodayForeground\">\r\n    <summary>\r\n    Gets or sets the color for the text of the today day slot.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TodayForeground"}},{"Kind":"Components.Component","Name":"DisabledForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.DisabledForeground\">\r\n    <summary>\r\n    Gets or sets the color for the text of disabled slots.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisabledForeground"}},{"Kind":"Components.Component","Name":"AdjacentDayForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Calendar.C1Calendar.AdjacentDayForeground\">\r\n    <summary>\r\n    Gets or sets the color of the adjacent days text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AdjacentDayForeground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Calendar.C1Calendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":486339007,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.TodayIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            TodayIconTemplate button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-881600987,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.TodayIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            TodayIconTemplate button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TodayIconTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'TodayIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.TodayIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1103234060,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Month expanse button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1546814947,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Month expanse button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandViewIconTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.ExpandViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2067614149,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Month expanse button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1614967606,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Month expanse button content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapseViewIconTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapseViewIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.CollapseViewIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1869289183,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.PrevIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets the previous icon template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-552228504,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.PrevIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets the previous icon template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevIconTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.PrevIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1226653436,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.NextIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets the next icon template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1440058207,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.NextIconTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets the next icon template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextIconTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.NextIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":570050080,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets a data template that defines the UI representation for a day of the week.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DayOfWeekSlotTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DayOfWeekSlotTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1443299117,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets a data template that defines the UI representation for a day of the week.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DayOfWeekSlotTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DayOfWeekSlotTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.DayOfWeekSlotTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1858090987,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.DaySlotTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets a data template that defines the UI representation for a single day of the month.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DaySlotTemplate","ParentTag":"C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DaySlotTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.DaySlotTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":626768284,"Kind":"Components.ChildContent","Name":"C1.Blazor.Calendar.C1Calendar.DaySlotTemplate","AssemblyName":"C1.Blazor.Calendar","Documentation":"\n            <summary>\n            Gets or sets a data template that defines the UI representation for a single day of the month.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DaySlotTemplate","ParentTag":"C1.Blazor.Calendar.C1Calendar"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DaySlotTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Calendar.C1Calendar.DaySlotTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1669790169,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.C1Accordion","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.C1Accordion\">\r\n    <summary>\r\n    <see cref=\"!:ItemsControl\" /> that contains <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />. It allows only one item to be expanded at a time (similar to the NavigationBar in Outlook).\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Accordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.Accordion.ExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandMode\">\r\n    <summary>\r\n    Gets or sets the expanding behavior which determines how many items can be expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.C1Accordion"}},{"HashCode":1226634388,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.C1Accordion","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.C1Accordion\">\r\n    <summary>\r\n    <see cref=\"!:ItemsControl\" /> that contains <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />. It allows only one item to be expanded at a time (similar to the NavigationBar in Outlook).\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.C1Accordion"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.Accordion.ExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandMode\">\r\n    <summary>\r\n    Gets or sets the expanding behavior which determines how many items can be expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.C1Accordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":371169903,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1941961132,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1.Blazor.Accordion.C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1550953701,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1980544933,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Accordion.C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":38316175,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1Accordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1779535702,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Accordion.C1Accordion"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1391999755,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ItemTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1580381844,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Accordion.ItemTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Accordion.C1Accordion"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Accordion.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1009834799,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.AccordionItem","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.AccordionItem\">\r\n    <summary>\r\n    Represents an item of accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.Header\">\r\n    <summary>\r\n    Text displays in the header of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.HeaderTemplate\">\r\n    <summary>\r\n    The Template header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.IsExpanded\">\r\n    <summary>\r\n    Gets or sets the expanded state of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ItemHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ItemHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemHeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.AccordionItem"}},{"HashCode":-2062052859,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.AccordionItem","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.AccordionItem\">\r\n    <summary>\r\n    Represents an item of accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.AccordionItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.Header\">\r\n    <summary>\r\n    Text displays in the header of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.HeaderTemplate\">\r\n    <summary>\r\n    The Template header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.IsExpanded\">\r\n    <summary>\r\n    Gets or sets the expanded state of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ItemHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ItemHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header of item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemHeaderStyle"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the accordion items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.AccordionItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1268296776,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.AccordionItem.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.HeaderTemplate\">\r\n    <summary>\r\n    The Template header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"AccordionItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.AccordionItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1228168987,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.AccordionItem.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.HeaderTemplate\">\r\n    <summary>\r\n    The Template header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Accordion.AccordionItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.AccordionItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-94217829,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.AccordionItem.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.AccordionItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1928783821,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.AccordionItem.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionItem.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Accordion.AccordionItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.AccordionItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1177939161,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.C1Expander","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.C1Expander\">\r\n    <summary>\r\n    C1Expander is a <see cref=\"T:C1.Blazor.Core.C1HeaderedContentControl\"/> with a collapsible/expandable panel. The content is visible by clicking on the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Expander"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpanded\">\r\n    <summary>\r\n    Gets or sets whether the expander content is visible.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"IsExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpandedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Accordion.C1Expander.IsExpanded\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpandedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpandable\">\r\n    <summary>\r\n    Gets or sets whether the expander can be expanded and collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpandable"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the expander expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.Header\">\r\n    <summary>\r\n    Gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.C1Expander"}},{"HashCode":-1419113338,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.C1Expander","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.C1Expander\">\r\n    <summary>\r\n    C1Expander is a <see cref=\"T:C1.Blazor.Core.C1HeaderedContentControl\"/> with a collapsible/expandable panel. The content is visible by clicking on the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.C1Expander"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpanded\">\r\n    <summary>\r\n    Gets or sets whether the expander content is visible.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"IsExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpandedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Accordion.C1Expander.IsExpanded\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpandedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpandable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.IsExpandable\">\r\n    <summary>\r\n    Gets or sets whether the expander can be expanded and collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpandable"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the expander expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"ExpandIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconStyle"}},{"Kind":"Components.Component","Name":"ExpandIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.Header\">\r\n    <summary>\r\n    Gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderStyle\">\r\n    <summary>\r\n    Gets or sets the style of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderStyle"}},{"Kind":"Components.Component","Name":"ExpandIconAlignment","TypeName":"C1.Blazor.Accordion.ExpanderIconAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the expand icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandIconAlignment"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.C1Expander","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1358567165,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1Expander"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":560676034,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.ChildContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Accordion.C1Expander"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1203991324,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.ExpandIconTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1Expander"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2100961428,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.ExpandIconTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.ExpandIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the expand icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandIconTemplate","ParentTag":"C1.Blazor.Accordion.C1Expander"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.ExpandIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":148209911,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1Expander"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-924586095,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.C1Expander.HeaderTemplate","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Accordion.C1Expander.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Accordion.C1Expander"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.C1Expander.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1907136560,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.ExpanderButton","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.ExpanderButton\">\r\n    <summary>\r\n    Button used in the <see cref=\"T:C1.Blazor.Accordion.C1Expander\"/> header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpanderButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton"}},{"HashCode":-274614991,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.ExpanderButton","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.ExpanderButton\">\r\n    <summary>\r\n    Button used in the <see cref=\"T:C1.Blazor.Accordion.C1Expander\"/> header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.ExpanderButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":503165156,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.CheckedContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":257503585,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.CheckedContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"C1.Blazor.Accordion.ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":127465896,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.UncheckedContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-205641218,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.UncheckedContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"C1.Blazor.Accordion.ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":661276236,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.IndeterminateContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-348646164,"Kind":"Components.ChildContent","Name":"C1.Blazor.Accordion.ExpanderButton.IndeterminateContent","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"C1.Blazor.Accordion.ExpanderButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-503842070,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.AccordionPanel","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.AccordionPanel\">\r\n    <summary>\r\n    Panel that lays out <see cref=\"T:C1.Blazor.Accordion.C1Expander\"/>´s.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionPanel.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionPanel.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"Accordion","TypeName":"C1.Blazor.Accordion.C1Accordion","Metadata":{"Common.PropertyName":"Accordion"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.AccordionPanel"}},{"HashCode":664928078,"Kind":"Components.Component","Name":"C1.Blazor.Accordion.AccordionPanel","AssemblyName":"C1.Blazor.Accordion","Documentation":"<member name=\"T:C1.Blazor.Accordion.AccordionPanel\">\r\n    <summary>\r\n    Panel that lays out <see cref=\"T:C1.Blazor.Accordion.C1Expander\"/>´s.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.AccordionPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Fill","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionPanel.Fill\">\r\n    <summary>\r\n    Gets or sets whether the expanded item should fill the remaining space in the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"ExpandDirection","TypeName":"C1.Blazor.Accordion.ExpandDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Accordion.AccordionPanel.ExpandDirection\">\r\n    <summary>\r\n    Gets or sets the direction the contained <see cref=\"T:C1.Blazor.Accordion.C1Expander\" />s expands.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDirection"}},{"Kind":"Components.Component","Name":"Accordion","TypeName":"C1.Blazor.Accordion.C1Accordion","Metadata":{"Common.PropertyName":"Accordion"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Accordion.AccordionPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-112993901,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoCompleteTextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoCompleteTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.AutoComplete\">\r\n    <summary>\r\n    Gets or sets the callback used to provide the auto-completion text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the text changed event.\r\n    </summary>\r\n    <remarks>\r\n        Setting this delay to something bigger than zero allows skipping unnecessary events when the text box is used in filtering scenarios.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox"}},{"HashCode":1992482375,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoCompleteTextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoCompleteTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.AutoComplete\">\r\n    <summary>\r\n    Gets or sets the callback used to provide the auto-completion text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the text changed event.\r\n    </summary>\r\n    <remarks>\r\n        Setting this delay to something bigger than zero allows skipping unnecessary events when the text box is used in filtering scenarios.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":134992919,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1TextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1TextBox"}},{"HashCode":1777936291,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1TextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1TextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1TextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1026596140,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1ComboBox`1\">\r\n    <summary>\r\n    C1ComboBox is an extension of DropDown that contains an editable textbox in the header and a listview in the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1ComboBox<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.GenericTyped":"True"}},{"HashCode":-1723414264,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1ComboBox`1\">\r\n    <summary>\r\n    C1ComboBox is an extension of DropDown that contains an editable textbox in the header and a listview in the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1ComboBox<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1294627171,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the item template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1086728569,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the item template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1781859126,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":803118767,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1351875850,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-766256634,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":780369416,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":901830814,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":459284671,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1552567651,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-657379509,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-437745328,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-705165495,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Popup","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Popup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the popup open in full screen \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Position\">\r\n    <summary>\r\n     Gets or sets the position display the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before close the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsPosUpdated","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPosUpdated\">\r\n    <summary>\r\n    Gets or sets to whether popup updates the position when its parent change position by scrolling\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPosUpdated"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Popup"}},{"HashCode":1810836135,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Popup","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Popup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the popup open in full screen \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Position\">\r\n    <summary>\r\n     Gets or sets the position display the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before close the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsPosUpdated","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPosUpdated\">\r\n    <summary>\r\n    Gets or sets to whether popup updates the position when its parent change position by scrolling\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPosUpdated"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Popup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1949653912,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Popup.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1Popup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Popup.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1514010993,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Popup.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1.Blazor.Input.C1Popup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Popup.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1753226209,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1MaskedTextBox\">\r\n    <summary>\r\n    The C1MaskedTextEditor control allows you to validate and format user input as it is entered, preventing users from entering invalid data.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\">\r\n    <summary>\r\n    Gets or sets the input mask.\r\n    </summary>\r\n    <remarks>\r\n    <para>The mask consists of a string that determines what class of character is acceptable\r\n    at each input position.</para>\r\n    <para>Valid mask characters are:</para>\r\n    <para>\r\n    <b>0</b>    Digit (0-9)</para>\r\n    <para>\r\n    <b>9</b>    Digit or space</para>\r\n    <para>\r\n    <b>#</b>    Digit, space, or sign (+/-)</para>\r\n    <para>\r\n    <b>L</b>    Letter</para>\r\n    <para>\r\n    <b>?</b>    Letter or space</para>\r\n    <para>\r\n    <b>A</b>    Letter or digit</para>\r\n    <para>\r\n    <b>a</b>    Letter, digit, or space</para>\r\n    <para>\r\n    <b>&amp;</b>    Any character</para>\r\n    <para>\r\n    <b>.</b>    Localized decimal symbol</para>\r\n    <para>\r\n    <b>,</b>    Localized thousand separator</para>\r\n    <para>\r\n    <b>:</b>    Localized time separator</para>\r\n    <para>\r\n    <b>/</b>    Localized date separator</para>\r\n    <para>Other characters are treated as literals. They are displayed in the control but cannot\r\n    be edited.</para>\r\n    <para>For example, the mask \"000-0000\" causes the control to accept only digits at every\r\n    position except the third, which always contains a dash.</para>\r\n    \r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.PromptChar\">\r\n    <summary>\r\n     Gets or set the PromptChar value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"MaskFormat","TypeName":"C1.Blazor.Input.MaskFormat","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\">\r\n    <summary>\r\n     Gets or set the MaskFormat value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskFormat"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"C1.Blazor.Input.MaskDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.DisplayMode\">\r\n    <summary>\r\n    Gets or set the DisplayMode value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"TabBehavior","TypeName":"C1.Blazor.Input.TabBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.TabBehavior\">\r\n    <summary>\r\n    Define the tab behavior if set.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabBehavior"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnMaskInputRejected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskInputRejectedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskInputRejected\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskInputRejected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMaskFormatChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskFormatChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskFormatChanged\">\r\n    <summary>\r\n    /// Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\"/> changes.\r\n    Gets or sets the callback called when the MaskFormat is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskFormatChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MaskedTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskedTextChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\">\r\n    <summary>\r\n    Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/> changes in the text box.\r\n    </summary>\r\n    <remarks>\r\n    Just after the Text property has beed changed via user input or code, \r\n    the <see cref=\"T:C1.Blazor.Input.C1MaskedTextBox\"/> updates the text again in order to make it consistent with\r\n    the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>. As a result, the TextChanged event can be triggered twice on each user\r\n    input. In contrast to this, the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\"/> is triggered only when Text is\r\n    updated with a value that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskedTextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox"}},{"HashCode":2094614926,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1MaskedTextBox\">\r\n    <summary>\r\n    The C1MaskedTextEditor control allows you to validate and format user input as it is entered, preventing users from entering invalid data.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1MaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\">\r\n    <summary>\r\n    Gets or sets the input mask.\r\n    </summary>\r\n    <remarks>\r\n    <para>The mask consists of a string that determines what class of character is acceptable\r\n    at each input position.</para>\r\n    <para>Valid mask characters are:</para>\r\n    <para>\r\n    <b>0</b>    Digit (0-9)</para>\r\n    <para>\r\n    <b>9</b>    Digit or space</para>\r\n    <para>\r\n    <b>#</b>    Digit, space, or sign (+/-)</para>\r\n    <para>\r\n    <b>L</b>    Letter</para>\r\n    <para>\r\n    <b>?</b>    Letter or space</para>\r\n    <para>\r\n    <b>A</b>    Letter or digit</para>\r\n    <para>\r\n    <b>a</b>    Letter, digit, or space</para>\r\n    <para>\r\n    <b>&amp;</b>    Any character</para>\r\n    <para>\r\n    <b>.</b>    Localized decimal symbol</para>\r\n    <para>\r\n    <b>,</b>    Localized thousand separator</para>\r\n    <para>\r\n    <b>:</b>    Localized time separator</para>\r\n    <para>\r\n    <b>/</b>    Localized date separator</para>\r\n    <para>Other characters are treated as literals. They are displayed in the control but cannot\r\n    be edited.</para>\r\n    <para>For example, the mask \"000-0000\" causes the control to accept only digits at every\r\n    position except the third, which always contains a dash.</para>\r\n    \r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.PromptChar\">\r\n    <summary>\r\n     Gets or set the PromptChar value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"MaskFormat","TypeName":"C1.Blazor.Input.MaskFormat","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\">\r\n    <summary>\r\n     Gets or set the MaskFormat value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskFormat"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"C1.Blazor.Input.MaskDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.DisplayMode\">\r\n    <summary>\r\n    Gets or set the DisplayMode value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"TabBehavior","TypeName":"C1.Blazor.Input.TabBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.TabBehavior\">\r\n    <summary>\r\n    Define the tab behavior if set.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabBehavior"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnMaskInputRejected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskInputRejectedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskInputRejected\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskInputRejected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMaskFormatChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskFormatChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskFormatChanged\">\r\n    <summary>\r\n    /// Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\"/> changes.\r\n    Gets or sets the callback called when the MaskFormat is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskFormatChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MaskedTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskedTextChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\">\r\n    <summary>\r\n    Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/> changes in the text box.\r\n    </summary>\r\n    <remarks>\r\n    Just after the Text property has beed changed via user input or code, \r\n    the <see cref=\"T:C1.Blazor.Input.C1MaskedTextBox\"/> updates the text again in order to make it consistent with\r\n    the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>. As a result, the TextChanged event can be triggered twice on each user\r\n    input. In contrast to this, the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\"/> is triggered only when Text is\r\n    updated with a value that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskedTextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1640510783,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Slider\">\r\n    <summary>\r\n    Slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Value\">\r\n    <summary>\r\n    Gets or sets the current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1Slider.Value\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"ThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ThumbStyle\">\r\n    <summary>\r\n    Thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.SliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how the thumb will be moved when a pointer click will be performed outside the area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Slider"}},{"HashCode":1378347289,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Slider\">\r\n    <summary>\r\n    Slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Value\">\r\n    <summary>\r\n    Gets or sets the current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1Slider.Value\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"ThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ThumbStyle\">\r\n    <summary>\r\n    Thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.SliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how the thumb will be moved when a pointer click will be performed outside the area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":696778218,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Window","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Window"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PopupHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupFooter","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupFooter","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the window display in full screen .\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsDialog","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDialog\">\r\n    <summary>\r\n    Gets or sets to determine whether Popup is dialog result.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDialog"}},{"Kind":"Components.Component","Name":"DialogType","TypeName":"C1.Blazor.Input.DialogType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.DialogType\">\r\n    <summary>\r\n    Gets or sets dialog result type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DialogType"}},{"Kind":"Components.Component","Name":"OkText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OkText\">\r\n    <summary>\r\n    Gets or sets OkText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OkText"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CancelText\">\r\n    <summary>\r\n    Gets or sets CancelText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CancelText"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Position\">\r\n    <summary>\r\n     Gets or sets the position that display the window.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Window"}},{"HashCode":-511518101,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Window","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Window"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PopupHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupFooter","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupFooter","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the window display in full screen .\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsDialog","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDialog\">\r\n    <summary>\r\n    Gets or sets to determine whether Popup is dialog result.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDialog"}},{"Kind":"Components.Component","Name":"DialogType","TypeName":"C1.Blazor.Input.DialogType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.DialogType\">\r\n    <summary>\r\n    Gets or sets dialog result type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DialogType"}},{"Kind":"Components.Component","Name":"OkText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OkText\">\r\n    <summary>\r\n    Gets or sets OkText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OkText"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CancelText\">\r\n    <summary>\r\n    Gets or sets CancelText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CancelText"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Position\">\r\n    <summary>\r\n     Gets or sets the position that display the window.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Window","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":131970388,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupHeader","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1723465614,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupHeader","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1606373285,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":493415417,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2090409841,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupFooter","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the footer of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupFooter","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupFooter","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":421872923,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupFooter","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the footer of the popup.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupFooter","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupFooter","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1630481787,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1CheckBox\">\r\n    <summary>\r\n    Represents a control that a user can select and clear.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1CheckBox"}},{"HashCode":53272971,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1CheckBox\">\r\n    <summary>\r\n    Represents a control that a user can select and clear.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1850737269,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1DropDown\">\r\n    <summary>\r\n    C1DropDown provides a generic drop-down control with a Header property that determines what the user sees when the drop-down part of the control is closed, and a Content property that determines what goes into the drop-down section.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1DropDown"}},{"HashCode":1998593167,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1DropDown\">\r\n    <summary>\r\n    C1DropDown provides a generic drop-down control with a Header property that determines what the user sees when the drop-down part of the control is closed, and a Content property that determines what goes into the drop-down section.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1DropDown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1406036540,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":976057068,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":717679522,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-615101916,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-36778868,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1419756921,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1730857670,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-116840079,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-632451506,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":859382321,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1373280922,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1NumericBox`1\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit numeric\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNumeric","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNumeric for the C1.Blazor.Input.C1NumericBox<TNumeric> component.","Metadata":{"Common.PropertyName":"TNumeric","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.Input.C1NumericBoxEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically if user is binding Value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Id\">\r\n    <summary>\r\n    Get or set the ID\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TNumeric","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Value\">\r\n    <summary>\r\n    Get or set value of numeric box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Placeholder\">\r\n    <summary>\r\n    Get or set placeholder\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Format\">\r\n    <summary>\r\n    Standard numeric format strings\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Step\">\r\n    <summary>\r\n    The value that the numeric box should take to add or dec current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Max\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Min\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsReadOnly\">\r\n    <summary>\r\n    Enable readonly mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsEnabled\">\r\n    <summary>\r\n    Enable disable mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"FinishEditingKeys","TypeName":"C1.Blazor.Input.NumericBoxFinishEditingKey[]","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.FinishEditingKeys\">\r\n    <summary>\r\n    Hit one of keys to finish editing\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishEditingKeys"}},{"Kind":"Components.Component","Name":"ButtonDisplayMode","TypeName":"C1.Blazor.Input.ButtonDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ButtonDisplayMode\">\r\n    <summary>\r\n    Set ButtonDisplayMode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonDisplayMode"}},{"Kind":"Components.Component","Name":"IncrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IncrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DecrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DecrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.GenericTyped":"True"}},{"HashCode":-580954874,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1NumericBox`1\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit numeric\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNumeric","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNumeric for the C1.Blazor.Input.C1NumericBox<TNumeric> component.","Metadata":{"Common.PropertyName":"TNumeric","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.Input.C1NumericBoxEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically if user is binding Value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Id\">\r\n    <summary>\r\n    Get or set the ID\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TNumeric","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Value\">\r\n    <summary>\r\n    Get or set value of numeric box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Placeholder\">\r\n    <summary>\r\n    Get or set placeholder\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Format\">\r\n    <summary>\r\n    Standard numeric format strings\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Step\">\r\n    <summary>\r\n    The value that the numeric box should take to add or dec current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Max\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Min\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsReadOnly\">\r\n    <summary>\r\n    Enable readonly mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsEnabled\">\r\n    <summary>\r\n    Enable disable mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"FinishEditingKeys","TypeName":"C1.Blazor.Input.NumericBoxFinishEditingKey[]","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.FinishEditingKeys\">\r\n    <summary>\r\n    Hit one of keys to finish editing\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishEditingKeys"}},{"Kind":"Components.Component","Name":"ButtonDisplayMode","TypeName":"C1.Blazor.Input.ButtonDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ButtonDisplayMode\">\r\n    <summary>\r\n    Set ButtonDisplayMode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonDisplayMode"}},{"Kind":"Components.Component","Name":"IncrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IncrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DecrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DecrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":906614304,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Increment IconTemplate button content\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IncrementIconTemplate","ParentTag":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'IncrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-5204449,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Increment IconTemplate button content\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IncrementIconTemplate","ParentTag":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'IncrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1811092622,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Decrement IconTemplate button content\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DecrementIconTemplate","ParentTag":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DecrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1259569089,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Decrement IconTemplate button content\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DecrementIconTemplate","ParentTag":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DecrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":626380547,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoComplete`1\">\r\n    <summary>\r\n    The auto-complete control is an editable input control that shows completion suggestions automatically while the user is typing. The list of suggestions is displayed in a drop down menu from which the user.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1AutoComplete<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the matched text highlight style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.MinLength\">\r\n    <summary>\r\n     Gets or sets the minimum input length to trigger auto-complete suggestions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"System.EventHandler<C1.Blazor.Input.AutoCompleteFilteringEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.Filtering\">\r\n    <summary>\r\n    Event raised when the control is about to apply a filter to the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filtering","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.GenericTyped":"True"}},{"HashCode":-123727344,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoComplete`1\">\r\n    <summary>\r\n    The auto-complete control is an editable input control that shows completion suggestions automatically while the user is typing. The list of suggestions is displayed in a drop down menu from which the user.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1AutoComplete<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the matched text highlight style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.MinLength\">\r\n    <summary>\r\n     Gets or sets the minimum input length to trigger auto-complete suggestions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"System.EventHandler<C1.Blazor.Input.AutoCompleteFilteringEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.Filtering\">\r\n    <summary>\r\n    Event raised when the control is about to apply a filter to the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filtering","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-949778522,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the item template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1406583137,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the item template.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":918285099,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":505530459,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the content of the drop-down.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":719631967,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1705961452,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1617710139,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1050770075,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the editable header. \n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1334841754,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1193955343,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is expanded.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":789549753,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1723677690,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or sets the icon used when the drop-down is collapsed.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1348861414,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Tooltip","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Tooltip\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Target\">\r\n    <summary>\r\n    Gets or sets the id of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"TargetCss","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.TargetCss\">\r\n    <summary>\r\n    Gets or sets the Css class name of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetCss"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Position\">\r\n    <summary>\r\n    Gets or sets the PopupPosition where the tooltip should be displayed with respect to the owner element.\r\n    Default value is PopupPosition.Above\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Gap\">\r\n    <summary>\r\n    Gets or sets the distance between the tooltip and the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"HideDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.HideDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HideDelay"}},{"Kind":"Components.Component","Name":"ShowDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.ShowDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowDelay"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Tooltip"}},{"HashCode":758285475,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Tooltip","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Tooltip\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Target\">\r\n    <summary>\r\n    Gets or sets the id of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"TargetCss","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.TargetCss\">\r\n    <summary>\r\n    Gets or sets the Css class name of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetCss"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Position\">\r\n    <summary>\r\n    Gets or sets the PopupPosition where the tooltip should be displayed with respect to the owner element.\r\n    Default value is PopupPosition.Above\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Gap\">\r\n    <summary>\r\n    Gets or sets the distance between the tooltip and the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"HideDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.HideDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HideDelay"}},{"Kind":"Components.Component","Name":"ShowDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.ShowDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowDelay"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Tooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1481067342,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Tooltip.Content","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or Sets the content of tooltip.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"C1Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Tooltip.Content","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":171521345,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Tooltip.Content","AssemblyName":"C1.Blazor.Input","Documentation":"\n            <summary>\n            Gets or Sets the content of tooltip.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"C1.Blazor.Input.C1Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Tooltip.Content","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1280782958,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1RangeSlider\">\r\n    <summary>\r\n    Range slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"LowerValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"UpperValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"RangeTrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.RangeTrackStyle\">\r\n    <summary>\r\n    Range track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RangeTrackStyle"}},{"Kind":"Components.Component","Name":"LowerThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerThumbStyle\">\r\n    <summary>\r\n    Lower thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerThumbStyle"}},{"Kind":"Components.Component","Name":"UpperThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperThumbStyle\">\r\n    <summary>\r\n    Upper thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.RangeSliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how thumbs will be moved when a pointer click will be performed outside the selected area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ValueChanged\">\r\n    <summary>\r\n    Fires when any of the properties: <see cref=\"!:LowerValue\" /> or <see cref=\"!:UpperValue\" /> changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":1634253890,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1RangeSlider\">\r\n    <summary>\r\n    Range slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"LowerValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"UpperValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"RangeTrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.RangeTrackStyle\">\r\n    <summary>\r\n    Range track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RangeTrackStyle"}},{"Kind":"Components.Component","Name":"LowerThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerThumbStyle\">\r\n    <summary>\r\n    Lower thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerThumbStyle"}},{"Kind":"Components.Component","Name":"UpperThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperThumbStyle\">\r\n    <summary>\r\n    Upper thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.RangeSliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how thumbs will be moved when a pointer click will be performed outside the selected area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ValueChanged\">\r\n    <summary>\r\n    Fires when any of the properties: <see cref=\"!:LowerValue\" /> or <see cref=\"!:UpperValue\" /> changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-298669982,"Kind":"Components.Component","Name":"C1.Blazor.DataPager.C1DataPager","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"T:C1.Blazor.DataPager.C1DataPager\">\r\n    <summary>\r\n    DataPager allows paging a collection to be displayed in smaller pages.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DataPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PrevTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PrevTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Previous button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.NextTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Next button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PageNumberTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PageNumberTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the page number button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PageNumberTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Source","TypeName":"C1.DataCollection.IDataCollection<System.Object>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.Source\">\r\n    <summary>\r\n    Gets or sets the collection of items that supports paging.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"CurrentButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.CurrentButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the current page button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CurrentButtonStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataPager.C1DataPager"}},{"HashCode":-2040434898,"Kind":"Components.Component","Name":"C1.Blazor.DataPager.C1DataPager","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"T:C1.Blazor.DataPager.C1DataPager\">\r\n    <summary>\r\n    DataPager allows paging a collection to be displayed in smaller pages.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataPager.C1DataPager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PrevTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PrevTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Previous button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrevTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NextTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.NextTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Next button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NextTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PageNumberTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PageNumberTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the page number button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PageNumberTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Source","TypeName":"C1.DataCollection.IDataCollection<System.Object>","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.Source\">\r\n    <summary>\r\n    Gets or sets the collection of items that supports paging.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Source"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"CurrentButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.CurrentButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the current page button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CurrentButtonStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataPager.C1DataPager","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-458143034,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.PrevTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PrevTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Previous button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevTemplate","ParentTag":"C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.PrevTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2066531947,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.PrevTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PrevTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Previous button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrevTemplate","ParentTag":"C1.Blazor.DataPager.C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PrevTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.PrevTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-514802438,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.NextTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.NextTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Next button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextTemplate","ParentTag":"C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.NextTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2067744077,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.NextTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.NextTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the Next button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NextTemplate","ParentTag":"C1.Blazor.DataPager.C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NextTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.NextTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":258351341,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.PageNumberTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PageNumberTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the page number button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageNumberTemplate","ParentTag":"C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PageNumberTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.PageNumberTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1470315528,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.C1DataPager.PageNumberTemplate","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"P:C1.Blazor.DataPager.C1DataPager.PageNumberTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the page number button.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageNumberTemplate","ParentTag":"C1.Blazor.DataPager.C1DataPager"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'PageNumberTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.C1DataPager.PageNumberTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-861912677,"Kind":"Components.Component","Name":"C1.Blazor.DataPager.DataPagerButton","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"T:C1.Blazor.DataPager.DataPagerButton\">\r\n    <summary>\r\n    <see cref=\"T:C1.Blazor.DataPager.C1DataPager\"/> button used to render the pages.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataPagerButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataPager.DataPagerButton"}},{"HashCode":-696292154,"Kind":"Components.Component","Name":"C1.Blazor.DataPager.DataPagerButton","AssemblyName":"C1.Blazor.DataPager","Documentation":"<member name=\"T:C1.Blazor.DataPager.DataPagerButton\">\r\n    <summary>\r\n    <see cref=\"T:C1.Blazor.DataPager.C1DataPager\"/> button used to render the pages.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataPager.DataPagerButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.DataPager.DataPagerButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1447022577,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.DataPagerButton.ChildContent","AssemblyName":"C1.Blazor.DataPager","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DataPagerButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.DataPagerButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1223286391,"Kind":"Components.ChildContent","Name":"C1.Blazor.DataPager.DataPagerButton.ChildContent","AssemblyName":"C1.Blazor.DataPager","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.DataPager.DataPagerButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.DataPager.DataPagerButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":19560626,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FullTextFilterBehavior","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FullTextFilterBehavior\">\r\n    <summary>\r\n    Allows any <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> to be filtered using a <see cref=\"T:C1.Blazor.Input.C1TextBox\"/>.\r\n    </summary>\r\n    <remarks>\r\n    This behavior sets the CellFactory of the attached grid.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FullTextFilterBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FilterString","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.FilterString\">\r\n    <summary>\r\n    Gets or sets the string used to perform the filtering.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterString"}},{"Kind":"Components.Component","Name":"TreatSpacesAsAndOperator","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.TreatSpacesAsAndOperator\">\r\n    <summary>\r\n    Specifies whether the spaces act as \"AND\" operator or the query should be matched as it is, including spaces.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TreatSpacesAsAndOperator"}},{"Kind":"Components.Component","Name":"MatchNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchNumbers\">\r\n    <summary>\r\n    Gets or sets whether number columns should be taken into account.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchNumbers"}},{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchCase\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the case too.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the whole word.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the style used to highlight the matches.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FullTextFilterBehavior"}},{"HashCode":1138596122,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FullTextFilterBehavior","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FullTextFilterBehavior\">\r\n    <summary>\r\n    Allows any <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> to be filtered using a <see cref=\"T:C1.Blazor.Input.C1TextBox\"/>.\r\n    </summary>\r\n    <remarks>\r\n    This behavior sets the CellFactory of the attached grid.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.FullTextFilterBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FilterString","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.FilterString\">\r\n    <summary>\r\n    Gets or sets the string used to perform the filtering.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterString"}},{"Kind":"Components.Component","Name":"TreatSpacesAsAndOperator","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.TreatSpacesAsAndOperator\">\r\n    <summary>\r\n    Specifies whether the spaces act as \"AND\" operator or the query should be matched as it is, including spaces.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TreatSpacesAsAndOperator"}},{"Kind":"Components.Component","Name":"MatchNumbers","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchNumbers\">\r\n    <summary>\r\n    Gets or sets whether number columns should be taken into account.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchNumbers"}},{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchCase\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the case too.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the whole word.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FullTextFilterBehavior.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the style used to highlight the matches.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FullTextFilterBehavior","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1356006267,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridIncrementalLoadingRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridIncrementalLoadingRow\">\r\n    <summary>\r\n    This row is displayed at the bottom of the grid and is used to bring more items when the inner collection view support <see cref=\"T:C1.DataCollection.ISupportIncrementalLoading\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridIncrementalLoadingRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridIncrementalLoadingRow"}},{"HashCode":261934278,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridIncrementalLoadingRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridIncrementalLoadingRow\">\r\n    <summary>\r\n    This row is displayed at the bottom of the grid and is used to bring more items when the inner collection view support <see cref=\"T:C1.DataCollection.ISupportIncrementalLoading\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridIncrementalLoadingRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridIncrementalLoadingRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-573405652,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridNumericColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridNumericColumn\">\r\n    <summary>\r\n    Represent a column whose cells are numbers.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridNumericColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value accepted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value accepted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Step\">\r\n    <summary>\r\n    Gets or sets how much the value changes when using up and down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridNumericColumn"}},{"HashCode":-805005945,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridNumericColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridNumericColumn\">\r\n    <summary>\r\n    Represent a column whose cells are numbers.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridNumericColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Minimum\">\r\n    <summary>\r\n    Gets or sets the minimum value accepted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Maximum\">\r\n    <summary>\r\n    Gets or sets the maximum value accepted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridNumericColumn.Step\">\r\n    <summary>\r\n    Gets or sets how much the value changes when using up and down buttons.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridNumericColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1889822894,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridNumericColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridNumericColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridNumericColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1757713893,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridNumericColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridNumericColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridNumericColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1938350049,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridHyperlinkColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridHyperlinkColumn\">\r\n    <summary>\r\n    Represent a column whose cells are hyperlinks.\r\n    </summary>\r\n    <remarks>Use <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property to set the hyperlink source, and if necessary use <see cref=\"P:C1.Blazor.Grid.GridHyperlinkColumn.ContentBinding\"/> to specify the hyperlink visible text. </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridHyperlinkColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentBinding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridHyperlinkColumn.ContentBinding\">\r\n    <summary>\r\n    Gets or sets the property path used to get the visible text of the hyperlink.\r\n    </summary>\r\n    <remarks>If not specified, the whole hyperlink text will be shown.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ContentBinding"}},{"Kind":"Components.Component","Name":"TargetName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridHyperlinkColumn.TargetName\">\r\n    <summary>\r\n    Gets or sets the name of the target window or frame.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetName"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridHyperlinkColumn"}},{"HashCode":-955133652,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridHyperlinkColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridHyperlinkColumn\">\r\n    <summary>\r\n    Represent a column whose cells are hyperlinks.\r\n    </summary>\r\n    <remarks>Use <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property to set the hyperlink source, and if necessary use <see cref=\"P:C1.Blazor.Grid.GridHyperlinkColumn.ContentBinding\"/> to specify the hyperlink visible text. </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridHyperlinkColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentBinding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridHyperlinkColumn.ContentBinding\">\r\n    <summary>\r\n    Gets or sets the property path used to get the visible text of the hyperlink.\r\n    </summary>\r\n    <remarks>If not specified, the whole hyperlink text will be shown.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ContentBinding"}},{"Kind":"Components.Component","Name":"TargetName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridHyperlinkColumn.TargetName\">\r\n    <summary>\r\n    Gets or sets the name of the target window or frame.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetName"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridHyperlinkColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1925431896,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridHyperlinkColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridHyperlinkColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridHyperlinkColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1683306372,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridHyperlinkColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridHyperlinkColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridHyperlinkColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":311810530,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridBoundRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridBoundRow\">\r\n    <summary>\r\n    Represents a row that is bound to a data item.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridBoundRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridBoundRow"}},{"HashCode":832512983,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridBoundRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridBoundRow\">\r\n    <summary>\r\n    Represents a row that is bound to a data item.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridBoundRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridBoundRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-827683404,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FlexGrid","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FlexGrid\">\r\n    <summary>\r\n    Control used to display and edit tabular information. \r\n    </summary>\r\n    <remarks>\r\n    Supports virtualized data-binding and automatic sorting and filters in client/server scenarios.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellFactory","TypeName":"C1.Blazor.Grid.GridCellFactory","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellFactory\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellFactory"}},{"Kind":"Components.Component","Name":"MergeManager","TypeName":"C1.Blazor.Grid.GridMergeManager","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MergeManager\">\r\n    <summary>\r\n    Gets or sets the merge manager.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MergeManager"}},{"Kind":"Components.Component","Name":"FlexGridColumns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridColumns","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridRows","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridRows","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridRowHeaderColumns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridRowHeaderColumns","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridColumnHeaderRows","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridColumnHeaderRows","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridBehaviors","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridBehaviors","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StyleKind","TypeName":"C1.Blazor.Grid.GridStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.StyleKind\">\r\n    <summary>\r\n    Gets or sets the style of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StyleKind"}},{"Kind":"Components.Component","Name":"AutoGeneratingColumn","TypeName":"System.EventHandler<C1.Blazor.Grid.GridAutoGeneratingColumnEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoGeneratingColumn\">\r\n    <summary>\r\n    Occurs when an auto-generated column is being created.\r\n    </summary>\r\n    <remarks>\r\n    You can change the auto-generated column by setting the property <see cref=\"P:C1.Blazor.Grid.GridAutoGeneratingColumnEventArgs.Column\"/>.\r\n    You can cancel an auto-generated column by setting the property <see cref=\"P:C1.Blazor.Grid.CancelEventArgs.Cancel\"/> to true, \r\n    in this case there will not be column for this property.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGeneratingColumn","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSourceChanging","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSourceChanging\">\r\n    <summary>\r\n    Occurs before the items source is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSourceChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSourceChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSourceChanged\">\r\n    <summary>\r\n    Occurs after the items source is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSourceChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"BeginningEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.BeginningEdit\">\r\n    <summary>\r\n    Occurs when the edit of a cell is about to start.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BeginningEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"PrepareCellForEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.PrepareCellForEdit\">\r\n    <summary>\r\n    Occurs when an editor cell is created and before it becomes active.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrepareCellForEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellEditEnding","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellEditEnding\">\r\n    <summary>\r\n    Occurs before the edit of a cell is committed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellEditEnding","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellEditEnded","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellEditEnded\">\r\n    <summary>\r\n    Occurs after the edit of a cell is committed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellEditEnded","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellTapped","TypeName":"System.EventHandler<C1.Blazor.Grid.GridInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellTapped\">\r\n    <summary>\r\n    Occurs when a cell is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.Grid.GridInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellDoubleTapped\">\r\n    <summary>\r\n    Occurs when a cell is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectionChanging","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionChanging\">\r\n    <summary>\r\n    Occurs before selection is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedChanging","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedChanging\">\r\n    <summary>\r\n    Occurs before the <see cref=\"P:C1.Blazor.Grid.GridGroupRow.IsCollapsed\"/> property of a <see cref=\"T:C1.Blazor.Grid.GridGroupRow\"/> object changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedChanged","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedChanged\">\r\n    <summary>\r\n    Occurs after the <see cref=\"P:C1.Blazor.Grid.GridGroupRow.IsCollapsed\"/> property of a <see cref=\"T:C1.Blazor.Grid.GridGroupRow\"/> object changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"BeginningRowEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.BeginningRowEdit\">\r\n    <summary>\r\n    Occurs when the edit of a row is about to start.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BeginningRowEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"RowEditEnding","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowEditEnding\">\r\n    <summary>\r\n    Occurs when a row edit is ending.\r\n    </summary>\r\n    <remarks>\r\n    <para>You can cancel this event by setting the <b>Cancel</b> property of the event argument \r\n    to true in the event handler.</para>\r\n    <para>If this event is not canceled, the edits will be committed or canceled depending on the\r\n    setting of the <b>CancelEdits</b> property of the event argument.</para>\r\n    <para>Alternatively, you can set the <see cref=\"P:IsReadOnly\"/> property to true to \r\n    disable editing in the grid.</para>\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowEditEnding","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"RowEditEnded","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowEditEnded\">\r\n    <summary>\r\n    Occurs when a row edit has been committed or canceled.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowEditEnded","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"AutoGenerateColumns","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoGenerateColumns\">\r\n    <summary>\r\n    Gets or sets a value to determine whether columns are generated automatically from the properties of the items of <see cref=\"P:ItemsSource\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateColumns"}},{"Kind":"Components.Component","Name":"MinColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MinColumnWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of columns in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinColumnWidth"}},{"Kind":"Components.Component","Name":"MaxColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MaxColumnWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of columns in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxColumnWidth"}},{"Kind":"Components.Component","Name":"MinRowHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MinRowHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of rows in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinRowHeight"}},{"Kind":"Components.Component","Name":"MaxRowHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MaxRowHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of rows in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxRowHeight"}},{"Kind":"Components.Component","Name":"DefaultColumnWidth","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultColumnWidth\">\r\n    <summary>\r\n    Gets or sets the default width of the columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultColumnWidth"}},{"Kind":"Components.Component","Name":"DefaultRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultRowHeight"}},{"Kind":"Components.Component","Name":"DefaultColumnHeaderRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultColumnHeaderRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the rows used to display column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultColumnHeaderRowHeight"}},{"Kind":"Components.Component","Name":"DefaultRowHeaderColumnWidth","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultRowHeaderColumnWidth\">\r\n    <summary>\r\n    Gets or sets the default width of the columns used to display row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultRowHeaderColumnWidth"}},{"Kind":"Components.Component","Name":"HeadersVisibility","TypeName":"C1.Blazor.Grid.GridHeadersVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.HeadersVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates the visibility of row and column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeadersVisibility"}},{"Kind":"Components.Component","Name":"ColumnHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating column header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"RowHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating row header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"TopLeftHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating top-left header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"ColumnHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"RowHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"TopLeftHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    top-left header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"ColumnHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderStyle"}},{"Kind":"Components.Component","Name":"RowHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderStyle"}},{"Kind":"Components.Component","Name":"TopLeftHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the top-left headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderStyle"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> applied to the selected column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedStyle"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> applied to the selected row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedStyle"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"C1.Blazor.Grid.GridAllowMerging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates which parts of the grid support \r\n    cell merging.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"AutoSizeMode","TypeName":"C1.Blazor.Grid.GridAutoSizeMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoSizeMode\">\r\n    <summary>\r\n    Gets or sets which cells should be taken into account when auto-sizing a row or column.\r\n    </summary>\r\n    <remarks>By default, the grid will automatically set the column width based on the content of the header and data cells in the column. This property allows you to change that to include only the headers or only the data.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoSizeMode"}},{"Kind":"Components.Component","Name":"ColumnOptionsMenuVisibility","TypeName":"C1.Blazor.Grid.GridColumnOptionsMenuVisibility?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsMenuVisibility\">\r\n    <summary>\r\n    Gets or sets the visibility of the column-header menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnOptionsMenuVisibility"}},{"Kind":"Components.Component","Name":"GroupHeaderConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupHeaderConverter\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.IValueConverter\" /> used to create the content shown\r\n    in <see cref=\"T:C1.Blazor.Grid.GridGroupRow\" /> cells to summarize group information.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupHeaderConverter"}},{"Kind":"Components.Component","Name":"GroupHeaderFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupHeaderFormat\">\r\n    <summary>\r\n     Gets or sets the format string used to create the group header content.\r\n    </summary>\r\n    <remarks>\r\n        The string may contain any text, plus the following replacement strings: \r\n        <list type=\"bullet\">\r\n      <listheader>\r\n        <term>{name}</term>\r\n        <description>The name of the property being grouped on.</description>\r\n      </listheader>\r\n      <item>\r\n        <term>{value}</term>\r\n        <description>The value of the property being grouped on.</description>\r\n      </item>\r\n      <item>\r\n        <term>{level}</term>\r\n        <description>The group level.</description>\r\n      </item>\r\n      <item>\r\n        <term>{count}</term>\r\n        <description>The total number of items in this group.</description>\r\n      </item>\r\n    </list></remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupHeaderFormat"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value to determine whether the grid is read-only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowSorting\">\r\n    <summary>\r\n    Gets or sets whether users are allowed to sort columns by tapping or clicking the column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets whether users are allowed to filter this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets whether users are group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"ShowSort","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowSort\">\r\n    <summary>\r\n    Gets or sets whether the grid should display sort indicators in the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSort"}},{"Kind":"Components.Component","Name":"TreeIndent","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TreeIndent\">\r\n    <summary>\r\n    Gets or sets the indent used to offset each group of rows in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TreeIndent"}},{"Kind":"Components.Component","Name":"RowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row backgrounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowBackground"}},{"Kind":"Components.Component","Name":"RowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row foreground.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the column header background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderBackground"}},{"Kind":"Components.Component","Name":"ColumnHeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the column header text and glyphs.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontSize"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontFamily"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontWeight"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontStyle"}},{"Kind":"Components.Component","Name":"RowHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the row header background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderBackground"}},{"Kind":"Components.Component","Name":"RowHeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the row header text and glyphs.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderForeground"}},{"Kind":"Components.Component","Name":"RowHeaderFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontSize"}},{"Kind":"Components.Component","Name":"RowHeaderFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontFamily"}},{"Kind":"Components.Component","Name":"RowHeaderFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontWeight"}},{"Kind":"Components.Component","Name":"RowHeaderFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontStyle"}},{"Kind":"Components.Component","Name":"TopLeftHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of the \r\n    cell at the left top corner of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderBackground"}},{"Kind":"Components.Component","Name":"AlternatingRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of odd-numbered rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowBackground"}},{"Kind":"Components.Component","Name":"AlternatingRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of odd-numbered rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowForeground"}},{"Kind":"Components.Component","Name":"GroupRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the group row background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowBackground"}},{"Kind":"Components.Component","Name":"GroupRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the text and glyphs of the group rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowForeground"}},{"Kind":"Components.Component","Name":"NewRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the new row background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowBackground"}},{"Kind":"Components.Component","Name":"NewRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the text and glyphs of the new row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowForeground"}},{"Kind":"Components.Component","Name":"SelectionBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBackground"}},{"Kind":"Components.Component","Name":"SelectionForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selected text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionForeground"}},{"Kind":"Components.Component","Name":"CursorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CursorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorBackground"}},{"Kind":"Components.Component","Name":"CursorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CursorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the text of cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorForeground"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row header background\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedBackground"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint column header background\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedBackground"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row header foreground\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint column header foreground\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedForeground"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal rows cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowStyle"}},{"Kind":"Components.Component","Name":"AlternatingRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the of odd-numbered rows cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowStyle"}},{"Kind":"Components.Component","Name":"GroupRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the group-row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowStyle"}},{"Kind":"Components.Component","Name":"NewRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the new-row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowStyle"}},{"Kind":"Components.Component","Name":"GroupRowFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontSize"}},{"Kind":"Components.Component","Name":"GroupRowFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontFamily"}},{"Kind":"Components.Component","Name":"GroupRowFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontWeight"}},{"Kind":"Components.Component","Name":"GroupRowFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontStyle"}},{"Kind":"Components.Component","Name":"DefaultGroupRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultGroupRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the group rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultGroupRowHeight"}},{"Kind":"Components.Component","Name":"ShowOutlineBar","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowOutlineBar\">\r\n    <summary>\r\n    Gets or sets a value that determines whether the grid should display\r\n    the outline button bar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOutlineBar"}},{"Kind":"Components.Component","Name":"GroupRowPosition","TypeName":"C1.Blazor.Grid.GridGroupRowPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowPosition\">\r\n    <summary>\r\n    Gets or sets a value that indicates where group rows should be displayed with\r\n    respect to the data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowPosition"}},{"Kind":"Components.Component","Name":"NewRowPosition","TypeName":"C1.Blazor.Grid.GridNewRowPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowPosition\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the new row template should be\r\n    displayed at the bottom or at the top of the grid, or if there should not be displayed.\r\n    </summary>\r\n    <remarks>\r\n        This property has an effect only when the grid is bound to a data source that supports\r\n        adding new items.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowPosition"}},{"Kind":"Components.Component","Name":"NewRowPlaceholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowPlaceholder\">\r\n    <summary>\r\n    Gets or sets the message displayed in the new row template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowPlaceholder"}},{"Kind":"Components.Component","Name":"SortAscendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted ascending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortDescendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortAscendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDescendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted descending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortAscendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortDescendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIndeterminateIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is not sorted yet.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIndeterminateIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIconPosition","TypeName":"C1.Blazor.Grid.GridSortIconPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIconPosition\">\r\n    <summary>\r\n    Gets or sets the position of the sort icon inside the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIconPosition"}},{"Kind":"Components.Component","Name":"GroupExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.EditIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header when a row is being edited.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NewRowIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header of a new row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.FilterIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the filter icon used throughout the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ColumnOptionsIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the column header showing there are options.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnOptionsIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowSelectionMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowSelectionMenu\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows menu\r\n    when select rows or cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSelectionMenu"}},{"Kind":"Components.Component","Name":"Adapter","TypeName":"C1.Blazor.Grid.GridControlAdapter","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.Adapter\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Adapter"}},{"Kind":"Components.Component","Name":"IsVirtualizationEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.IsVirtualizationEnabled\">\r\n    <summary>\r\n    Gets or sets whether the ui will be virtualized. Default <c>true</c>.\r\n    </summary>\r\n    <remarks>\r\n    To improve loading performance and network bandwidth usage, the cells are rendered as the user scrolls the controls. \r\n    If the number of cells is small it could be convenient to disable virtualization to improve scrolling speed.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVirtualizationEnabled"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Grid.GridSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MouseOverMode","TypeName":"C1.Blazor.Grid.GridMouseOverMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverMode\">\r\n    <summary>\r\n    Gets or sets how the mouse over mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverMode"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"C1.Blazor.Grid.GridAllowResizing","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to resize rows and columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"C1.Blazor.Grid.GridAllowDragging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to move rows and columns to new positions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"FrozenRows","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenRows\">\r\n    <summary>\r\n    Gets or sets the number of frozen rows.\r\n    </summary>\r\n    <remarks>Frozen rows do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenRows"}},{"Kind":"Components.Component","Name":"FrozenColumns","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenColumns\">\r\n    <summary>\r\n    Gets or sets the number of frozen columns.\r\n    </summary>\r\n    <remarks>Frozen columns do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenColumns"}},{"Kind":"Components.Component","Name":"ShowMarquee","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ShowMarquee\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows an Excel-style\r\n    marquee around the current selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMarquee"}},{"Kind":"Components.Component","Name":"KeyActionTab","TypeName":"C1.Blazor.Grid.GridTabAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionTab\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Tab key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionTab"}},{"Kind":"Components.Component","Name":"KeyActionEnter","TypeName":"C1.Blazor.Grid.GridEnterAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionEnter\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Enter key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionEnter"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"C1.Blazor.Grid.GridZoomMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ZoomMode\">\r\n    <summary>\r\n    Gets or sets the zoom mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the vertical scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the horizontal scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"GridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating inner cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesVisibility"}},{"Kind":"Components.Component","Name":"GridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesBrush"}},{"Kind":"Components.Component","Name":"FrozenLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between frozen\r\n    and scrollable areas of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenLinesBrush"}},{"Kind":"Components.Component","Name":"GridLinesWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesWidth\">\r\n    <summary>\r\n    Gets or sets the width of the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesWidth"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBorderBrush"}},{"Kind":"Components.Component","Name":"EditorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorBackground"}},{"Kind":"Components.Component","Name":"EditorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorForeground"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"SelectionAdornerStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the selection adorners.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerStyle"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CellStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"CursorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CursorStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FlexGrid"}},{"HashCode":-1251700741,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FlexGrid","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FlexGrid\">\r\n    <summary>\r\n    Control used to display and edit tabular information. \r\n    </summary>\r\n    <remarks>\r\n    Supports virtualized data-binding and automatic sorting and filters in client/server scenarios.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellFactory","TypeName":"C1.Blazor.Grid.GridCellFactory","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellFactory\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellFactory"}},{"Kind":"Components.Component","Name":"MergeManager","TypeName":"C1.Blazor.Grid.GridMergeManager","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MergeManager\">\r\n    <summary>\r\n    Gets or sets the merge manager.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MergeManager"}},{"Kind":"Components.Component","Name":"FlexGridColumns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridColumns","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridRows","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridRows","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridRowHeaderColumns","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridRowHeaderColumns","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridColumnHeaderRows","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridColumnHeaderRows","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FlexGridBehaviors","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"FlexGridBehaviors","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StyleKind","TypeName":"C1.Blazor.Grid.GridStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.StyleKind\">\r\n    <summary>\r\n    Gets or sets the style of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StyleKind"}},{"Kind":"Components.Component","Name":"AutoGeneratingColumn","TypeName":"System.EventHandler<C1.Blazor.Grid.GridAutoGeneratingColumnEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoGeneratingColumn\">\r\n    <summary>\r\n    Occurs when an auto-generated column is being created.\r\n    </summary>\r\n    <remarks>\r\n    You can change the auto-generated column by setting the property <see cref=\"P:C1.Blazor.Grid.GridAutoGeneratingColumnEventArgs.Column\"/>.\r\n    You can cancel an auto-generated column by setting the property <see cref=\"P:C1.Blazor.Grid.CancelEventArgs.Cancel\"/> to true, \r\n    in this case there will not be column for this property.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGeneratingColumn","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSourceChanging","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSourceChanging\">\r\n    <summary>\r\n    Occurs before the items source is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSourceChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSourceChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSourceChanged\">\r\n    <summary>\r\n    Occurs after the items source is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSourceChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"BeginningEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.BeginningEdit\">\r\n    <summary>\r\n    Occurs when the edit of a cell is about to start.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BeginningEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"PrepareCellForEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.PrepareCellForEdit\">\r\n    <summary>\r\n    Occurs when an editor cell is created and before it becomes active.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PrepareCellForEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellEditEnding","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellEditEnding\">\r\n    <summary>\r\n    Occurs before the edit of a cell is committed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellEditEnding","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellEditEnded","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellEditEnded\">\r\n    <summary>\r\n    Occurs after the edit of a cell is committed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellEditEnded","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellTapped","TypeName":"System.EventHandler<C1.Blazor.Grid.GridInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellTapped\">\r\n    <summary>\r\n    Occurs when a cell is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"CellDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.Grid.GridInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CellDoubleTapped\">\r\n    <summary>\r\n    Occurs when a cell is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectionChanging","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionChanging\">\r\n    <summary>\r\n    Occurs before selection is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedChanging","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedChanging\">\r\n    <summary>\r\n    Occurs before the <see cref=\"P:C1.Blazor.Grid.GridGroupRow.IsCollapsed\"/> property of a <see cref=\"T:C1.Blazor.Grid.GridGroupRow\"/> object changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedChanging","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedChanged","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellRangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedChanged\">\r\n    <summary>\r\n    Occurs after the <see cref=\"P:C1.Blazor.Grid.GridGroupRow.IsCollapsed\"/> property of a <see cref=\"T:C1.Blazor.Grid.GridGroupRow\"/> object changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"BeginningRowEdit","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.BeginningRowEdit\">\r\n    <summary>\r\n    Occurs when the edit of a row is about to start.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BeginningRowEdit","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"RowEditEnding","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowEditEnding\">\r\n    <summary>\r\n    Occurs when a row edit is ending.\r\n    </summary>\r\n    <remarks>\r\n    <para>You can cancel this event by setting the <b>Cancel</b> property of the event argument \r\n    to true in the event handler.</para>\r\n    <para>If this event is not canceled, the edits will be committed or canceled depending on the\r\n    setting of the <b>CancelEdits</b> property of the event argument.</para>\r\n    <para>Alternatively, you can set the <see cref=\"P:IsReadOnly\"/> property to true to \r\n    disable editing in the grid.</para>\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowEditEnding","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"RowEditEnded","TypeName":"System.EventHandler<C1.Blazor.Grid.GridCellEditEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowEditEnded\">\r\n    <summary>\r\n    Occurs when a row edit has been committed or canceled.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowEditEnded","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"AutoGenerateColumns","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoGenerateColumns\">\r\n    <summary>\r\n    Gets or sets a value to determine whether columns are generated automatically from the properties of the items of <see cref=\"P:ItemsSource\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoGenerateColumns"}},{"Kind":"Components.Component","Name":"MinColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MinColumnWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of columns in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinColumnWidth"}},{"Kind":"Components.Component","Name":"MaxColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MaxColumnWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of columns in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxColumnWidth"}},{"Kind":"Components.Component","Name":"MinRowHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MinRowHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of rows in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinRowHeight"}},{"Kind":"Components.Component","Name":"MaxRowHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.MaxRowHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of rows in the <see cref=\"T:C1.Blazor.Grid.FlexGrid\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxRowHeight"}},{"Kind":"Components.Component","Name":"DefaultColumnWidth","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultColumnWidth\">\r\n    <summary>\r\n    Gets or sets the default width of the columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultColumnWidth"}},{"Kind":"Components.Component","Name":"DefaultRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultRowHeight"}},{"Kind":"Components.Component","Name":"DefaultColumnHeaderRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultColumnHeaderRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the rows used to display column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultColumnHeaderRowHeight"}},{"Kind":"Components.Component","Name":"DefaultRowHeaderColumnWidth","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultRowHeaderColumnWidth\">\r\n    <summary>\r\n    Gets or sets the default width of the columns used to display row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultRowHeaderColumnWidth"}},{"Kind":"Components.Component","Name":"HeadersVisibility","TypeName":"C1.Blazor.Grid.GridHeadersVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.HeadersVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates the visibility of row and column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeadersVisibility"}},{"Kind":"Components.Component","Name":"ColumnHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating column header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"RowHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating row header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"TopLeftHeaderGridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderGridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating top-left header cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderGridLinesVisibility"}},{"Kind":"Components.Component","Name":"ColumnHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"RowHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"TopLeftHeaderGridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderGridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between \r\n    top-left header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderGridLinesBrush"}},{"Kind":"Components.Component","Name":"ColumnHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderStyle"}},{"Kind":"Components.Component","Name":"RowHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderStyle"}},{"Kind":"Components.Component","Name":"TopLeftHeaderStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the top-left headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderStyle"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> applied to the selected column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedStyle"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> applied to the selected row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedStyle"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"C1.Blazor.Grid.GridAllowMerging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates which parts of the grid support \r\n    cell merging.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"AutoSizeMode","TypeName":"C1.Blazor.Grid.GridAutoSizeMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AutoSizeMode\">\r\n    <summary>\r\n    Gets or sets which cells should be taken into account when auto-sizing a row or column.\r\n    </summary>\r\n    <remarks>By default, the grid will automatically set the column width based on the content of the header and data cells in the column. This property allows you to change that to include only the headers or only the data.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoSizeMode"}},{"Kind":"Components.Component","Name":"ColumnOptionsMenuVisibility","TypeName":"C1.Blazor.Grid.GridColumnOptionsMenuVisibility?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsMenuVisibility\">\r\n    <summary>\r\n    Gets or sets the visibility of the column-header menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnOptionsMenuVisibility"}},{"Kind":"Components.Component","Name":"GroupHeaderConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupHeaderConverter\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.IValueConverter\" /> used to create the content shown\r\n    in <see cref=\"T:C1.Blazor.Grid.GridGroupRow\" /> cells to summarize group information.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupHeaderConverter"}},{"Kind":"Components.Component","Name":"GroupHeaderFormat","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupHeaderFormat\">\r\n    <summary>\r\n     Gets or sets the format string used to create the group header content.\r\n    </summary>\r\n    <remarks>\r\n        The string may contain any text, plus the following replacement strings: \r\n        <list type=\"bullet\">\r\n      <listheader>\r\n        <term>{name}</term>\r\n        <description>The name of the property being grouped on.</description>\r\n      </listheader>\r\n      <item>\r\n        <term>{value}</term>\r\n        <description>The value of the property being grouped on.</description>\r\n      </item>\r\n      <item>\r\n        <term>{level}</term>\r\n        <description>The group level.</description>\r\n      </item>\r\n      <item>\r\n        <term>{count}</term>\r\n        <description>The total number of items in this group.</description>\r\n      </item>\r\n    </list></remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupHeaderFormat"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value to determine whether the grid is read-only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowSorting\">\r\n    <summary>\r\n    Gets or sets whether users are allowed to sort columns by tapping or clicking the column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets whether users are allowed to filter this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets whether users are group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"ShowSort","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowSort\">\r\n    <summary>\r\n    Gets or sets whether the grid should display sort indicators in the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSort"}},{"Kind":"Components.Component","Name":"TreeIndent","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TreeIndent\">\r\n    <summary>\r\n    Gets or sets the indent used to offset each group of rows in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TreeIndent"}},{"Kind":"Components.Component","Name":"RowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row backgrounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowBackground"}},{"Kind":"Components.Component","Name":"RowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row foreground.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the column header background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderBackground"}},{"Kind":"Components.Component","Name":"ColumnHeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the column header text and glyphs.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontSize"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontFamily"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontWeight"}},{"Kind":"Components.Component","Name":"ColumnHeaderFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to column header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderFontStyle"}},{"Kind":"Components.Component","Name":"RowHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the row header background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderBackground"}},{"Kind":"Components.Component","Name":"RowHeaderForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the row header text and glyphs.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderForeground"}},{"Kind":"Components.Component","Name":"RowHeaderFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontSize"}},{"Kind":"Components.Component","Name":"RowHeaderFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontFamily"}},{"Kind":"Components.Component","Name":"RowHeaderFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontWeight"}},{"Kind":"Components.Component","Name":"RowHeaderFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to row header cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderFontStyle"}},{"Kind":"Components.Component","Name":"TopLeftHeaderBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.TopLeftHeaderBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of the \r\n    cell at the left top corner of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeaderBackground"}},{"Kind":"Components.Component","Name":"AlternatingRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of odd-numbered rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowBackground"}},{"Kind":"Components.Component","Name":"AlternatingRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of odd-numbered rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowForeground"}},{"Kind":"Components.Component","Name":"GroupRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the group row background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowBackground"}},{"Kind":"Components.Component","Name":"GroupRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the text and glyphs of the group rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowForeground"}},{"Kind":"Components.Component","Name":"NewRowBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the new row background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowBackground"}},{"Kind":"Components.Component","Name":"NewRowForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the text and glyphs of the new row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowForeground"}},{"Kind":"Components.Component","Name":"SelectionBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBackground"}},{"Kind":"Components.Component","Name":"SelectionForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SelectionForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selected text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionForeground"}},{"Kind":"Components.Component","Name":"CursorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CursorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorBackground"}},{"Kind":"Components.Component","Name":"CursorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.CursorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the text of cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorForeground"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row header background\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedBackground"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint column header background\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedBackground"}},{"Kind":"Components.Component","Name":"RowHeaderSelectedForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowHeaderSelectedForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint row header foreground\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowHeaderSelectedForeground"}},{"Kind":"Components.Component","Name":"ColumnHeaderSelectedForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnHeaderSelectedForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint column header foreground\r\n    for selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnHeaderSelectedForeground"}},{"Kind":"Components.Component","Name":"RowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.RowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal rows cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RowStyle"}},{"Kind":"Components.Component","Name":"AlternatingRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.AlternatingRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the of odd-numbered rows cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingRowStyle"}},{"Kind":"Components.Component","Name":"GroupRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the group-row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowStyle"}},{"Kind":"Components.Component","Name":"NewRowStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the new-row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowStyle"}},{"Kind":"Components.Component","Name":"GroupRowFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontSize\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontSize"}},{"Kind":"Components.Component","Name":"GroupRowFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontFamily\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontFamily"}},{"Kind":"Components.Component","Name":"GroupRowFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontWeight\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontWeight"}},{"Kind":"Components.Component","Name":"GroupRowFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowFontStyle\">\r\n    <summary>\r\n    Gets or sets the font size applied to group row cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowFontStyle"}},{"Kind":"Components.Component","Name":"DefaultGroupRowHeight","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.DefaultGroupRowHeight\">\r\n    <summary>\r\n    Gets or sets the default height of the group rows.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DefaultGroupRowHeight"}},{"Kind":"Components.Component","Name":"ShowOutlineBar","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowOutlineBar\">\r\n    <summary>\r\n    Gets or sets a value that determines whether the grid should display\r\n    the outline button bar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOutlineBar"}},{"Kind":"Components.Component","Name":"GroupRowPosition","TypeName":"C1.Blazor.Grid.GridGroupRowPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupRowPosition\">\r\n    <summary>\r\n    Gets or sets a value that indicates where group rows should be displayed with\r\n    respect to the data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupRowPosition"}},{"Kind":"Components.Component","Name":"NewRowPosition","TypeName":"C1.Blazor.Grid.GridNewRowPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowPosition\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the new row template should be\r\n    displayed at the bottom or at the top of the grid, or if there should not be displayed.\r\n    </summary>\r\n    <remarks>\r\n        This property has an effect only when the grid is bound to a data source that supports\r\n        adding new items.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowPosition"}},{"Kind":"Components.Component","Name":"NewRowPlaceholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowPlaceholder\">\r\n    <summary>\r\n    Gets or sets the message displayed in the new row template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowPlaceholder"}},{"Kind":"Components.Component","Name":"SortAscendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted ascending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortDescendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortAscendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDescendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted descending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortAscendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortDescendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIndeterminateIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is not sorted yet.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIndeterminateIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIconPosition","TypeName":"C1.Blazor.Grid.GridSortIconPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIconPosition\">\r\n    <summary>\r\n    Gets or sets the position of the sort icon inside the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIconPosition"}},{"Kind":"Components.Component","Name":"GroupExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.EditIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header when a row is being edited.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NewRowIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header of a new row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"NewRowIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"FilterIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.FilterIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the filter icon used throughout the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ColumnOptionsIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the column header showing there are options.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ColumnOptionsIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowSelectionMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ShowSelectionMenu\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows menu\r\n    when select rows or cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSelectionMenu"}},{"Kind":"Components.Component","Name":"Adapter","TypeName":"C1.Blazor.Grid.GridControlAdapter","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.Adapter\">\r\n    <summary>\r\n    Gets or sets the factory of cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Adapter"}},{"Kind":"Components.Component","Name":"IsVirtualizationEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.IsVirtualizationEnabled\">\r\n    <summary>\r\n    Gets or sets whether the ui will be virtualized. Default <c>true</c>.\r\n    </summary>\r\n    <remarks>\r\n    To improve loading performance and network bandwidth usage, the cells are rendered as the user scrolls the controls. \r\n    If the number of cells is small it could be convenient to disable virtualization to improve scrolling speed.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVirtualizationEnabled"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Grid.GridSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"MouseOverMode","TypeName":"C1.Blazor.Grid.GridMouseOverMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverMode\">\r\n    <summary>\r\n    Gets or sets how the mouse over mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverMode"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"C1.Blazor.Grid.GridAllowResizing","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to resize rows and columns.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"C1.Blazor.Grid.GridAllowDragging","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether users are allowed to move rows and columns to new positions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"FrozenRows","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenRows\">\r\n    <summary>\r\n    Gets or sets the number of frozen rows.\r\n    </summary>\r\n    <remarks>Frozen rows do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenRows"}},{"Kind":"Components.Component","Name":"FrozenColumns","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenColumns\">\r\n    <summary>\r\n    Gets or sets the number of frozen columns.\r\n    </summary>\r\n    <remarks>Frozen columns do not scroll, but the cells they contain may be selected and edited.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenColumns"}},{"Kind":"Components.Component","Name":"ShowMarquee","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ShowMarquee\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the grid shows an Excel-style\r\n    marquee around the current selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowMarquee"}},{"Kind":"Components.Component","Name":"KeyActionTab","TypeName":"C1.Blazor.Grid.GridTabAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionTab\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Tab key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionTab"}},{"Kind":"Components.Component","Name":"KeyActionEnter","TypeName":"C1.Blazor.Grid.GridEnterAction","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.KeyActionEnter\">\r\n    <summary>\r\n    Gets or sets the action to perform when the Enter key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyActionEnter"}},{"Kind":"Components.Component","Name":"ZoomMode","TypeName":"C1.Blazor.Grid.GridZoomMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.ZoomMode\">\r\n    <summary>\r\n    Gets or sets the zoom mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ZoomMode"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the vertical scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets the horizontal scroll bar visibility.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"GridLinesVisibility","TypeName":"C1.Blazor.Grid.GridLinesVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates which grid lines separating inner cells are shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesVisibility"}},{"Kind":"Components.Component","Name":"GridLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesBrush"}},{"Kind":"Components.Component","Name":"FrozenLinesBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.FrozenLinesBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the lines between frozen\r\n    and scrollable areas of the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FrozenLinesBrush"}},{"Kind":"Components.Component","Name":"GridLinesWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.GridLinesWidth\">\r\n    <summary>\r\n    Gets or sets the width of the lines between cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GridLinesWidth"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBrush"}},{"Kind":"Components.Component","Name":"SelectionAdornerBorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerBorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> of the selection adorner border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerBorderBrush"}},{"Kind":"Components.Component","Name":"EditorBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the background of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorBackground"}},{"Kind":"Components.Component","Name":"EditorForeground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorForeground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the foreground of \r\n    cells in edit mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorForeground"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the editor.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"SelectionAdornerStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionAdornerStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the selection adorners.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionAdornerStyle"}},{"Kind":"Components.Component","Name":"CellStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CellStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the normal cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CellStyle"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the selected cells.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"CursorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Grid.C1GridControl.CursorStyle\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Style\" /> of the cursor cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CursorStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FlexGrid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1363122480,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridColumns","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridColumns","ParentTag":"FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridColumns","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1011626717,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridColumns","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridColumns","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridColumns","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1525101966,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridRows","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridRows","ParentTag":"FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridRows","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-597593641,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridRows","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridRows","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridRows","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1250583593,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridRowHeaderColumns","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridRowHeaderColumns","ParentTag":"FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridRowHeaderColumns","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-151516912,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridRowHeaderColumns","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridRowHeaderColumns","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridRowHeaderColumns","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1982556153,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridColumnHeaderRows","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridColumnHeaderRows","ParentTag":"FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridColumnHeaderRows","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-299003498,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridColumnHeaderRows","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridColumnHeaderRows","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridColumnHeaderRows","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-106922482,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridBehaviors","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridBehaviors","ParentTag":"FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridBehaviors","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":726540134,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FlexGridBehaviors","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridBehaviors","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FlexGridBehaviors","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2064888523,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted ascending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortDescendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortAscendingIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortAscendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1354110390,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted ascending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortDescendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortAscendingIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortAscendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortAscendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1731334914,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted descending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortAscendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortDescendingIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortDescendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-37499692,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is sorted descending.\r\n    </summary>\r\n    <remarks>\r\n        When this property is null, the <see cref=\"!:SortAscendingIconTemplate\" /> icon template will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortDescendingIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortDescendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortDescendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2021755178,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is not sorted yet.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortIndeterminateIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortIndeterminateIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":12081247,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the sort icon when it is not sorted yet.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortIndeterminateIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortIndeterminateIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.SortIndeterminateIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-881355739,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupExpandedIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1163527536,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupExpandedIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.GroupExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-800337252,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupCollapsedIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1688389498,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupCollapsedIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.GroupCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1240966191,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.EditIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.EditIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header when a row is being edited.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'EditIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.EditIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1104838050,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.EditIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.EditIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header when a row is being edited.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'EditIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.EditIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":15273090,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.NewRowIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header of a new row.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NewRowIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NewRowIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.NewRowIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":679315521,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.NewRowIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.NewRowIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the header of a new row.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NewRowIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NewRowIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.NewRowIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-75430960,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FilterIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.FilterIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the filter icon used throughout the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FilterIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FilterIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":198970639,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.FilterIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.FilterIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the filter icon used throughout the control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FilterIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'FilterIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.FilterIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-387789818,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the column header showing the are options.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColumnOptionsIconTemplate","ParentTag":"FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ColumnOptionsIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2068413337,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed in the column header showing the are options.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColumnOptionsIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGrid"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ColumnOptionsIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGrid.ColumnOptionsIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1937962049,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridDateTimeColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridDateTimeColumn\">\r\n    <summary>\r\n    Grid column whose cells are either a date or time.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridDateTimeColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mode","TypeName":"C1.Blazor.Grid.GridDateTimeColumnMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridDateTimeColumn.Mode\">\r\n    <summary>\r\n    Gets or sets whether the column will show date or time information.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridDateTimeColumn"}},{"HashCode":-757471910,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridDateTimeColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridDateTimeColumn\">\r\n    <summary>\r\n    Grid column whose cells are either a date or time.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridDateTimeColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mode","TypeName":"C1.Blazor.Grid.GridDateTimeColumnMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridDateTimeColumn.Mode\">\r\n    <summary>\r\n    Gets or sets whether the column will show date or time information.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridDateTimeColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1008866730,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridDateTimeColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridDateTimeColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridDateTimeColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1409159478,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridDateTimeColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridDateTimeColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridDateTimeColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2029049898,"Kind":"Components.Component","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.DetailProviderRowHeaderCell\">\r\n    <summary>\r\n    Visual element that represent the content of the row header of a row when using FlexGridDetailProvider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedChanged\">\r\n    <summary>\r\n    Occurs when the user toggles the details.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.IsExpanded\">\r\n    <summary>\r\n    Gets or sets whether the details are expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon show when the details are expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon shown when the details are collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell"}},{"HashCode":-1294421991,"Kind":"Components.Component","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.DetailProviderRowHeaderCell\">\r\n    <summary>\r\n    Visual element that represent the content of the row header of a row when using FlexGridDetailProvider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ExpandedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedChanged\">\r\n    <summary>\r\n    Occurs when the user toggles the details.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.IsExpanded\">\r\n    <summary>\r\n    Gets or sets whether the details are expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon show when the details are expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon shown when the details are collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1342063119,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon show when the details are expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-620665428,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon show when the details are expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"C1.Blazor.Grid.DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1094999017,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon shown when the details are collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1438769846,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the icon shown when the details are collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"C1.Blazor.Grid.DetailProviderRowHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1667869695,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridFilterCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridFilterCell\">\r\n    <summary>\r\n    Visual element displayed in the filter row to allow the user to enter text as well as giving more options to filter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridFilterCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UseAutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterCell.UseAutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the typed text will be auto-completed based on the data in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UseAutoComplete"}},{"Kind":"Components.Component","Name":"Column","TypeName":"C1.Blazor.Grid.GridColumn","Metadata":{"Common.PropertyName":"Column"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"OptionsIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Metadata":{"Common.PropertyName":"OptionsIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridFilterCell"}},{"HashCode":718933396,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridFilterCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridFilterCell\">\r\n    <summary>\r\n    Visual element displayed in the filter row to allow the user to enter text as well as giving more options to filter.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridFilterCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"UseAutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterCell.UseAutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the typed text will be auto-completed based on the data in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UseAutoComplete"}},{"Kind":"Components.Component","Name":"Column","TypeName":"C1.Blazor.Grid.GridColumn","Metadata":{"Common.PropertyName":"Column"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"OptionsIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Metadata":{"Common.PropertyName":"OptionsIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridFilterCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1956178873,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridFilterCell.OptionsIconTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OptionsIconTemplate","ParentTag":"GridFilterCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OptionsIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridFilterCell.OptionsIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1635552254,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridFilterCell.OptionsIconTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OptionsIconTemplate","ParentTag":"C1.Blazor.Grid.GridFilterCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OptionsIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridFilterCell.OptionsIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-215528889,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridRow\">\r\n    <summary>\r\n    Represent a row.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridRow"}},{"HashCode":-967343365,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridRow\">\r\n    <summary>\r\n    Represent a row.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1961938310,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridColumn\">\r\n    <summary>\r\n    Represents a grid column.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridColumn"}},{"HashCode":1867428467,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridColumn\">\r\n    <summary>\r\n    Represents a grid column.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":972909932,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1088275924,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1261899333,"Kind":"Components.Component","Name":"C1.Blazor.Grid.EditorCheckBox","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.EditorCheckBox"}},{"HashCode":-904339717,"Kind":"Components.Component","Name":"C1.Blazor.Grid.EditorCheckBox","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.EditorCheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.EditorCheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1164984035,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridImageColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridImageColumn\">\r\n    <summary>\r\n    Represent a column whose cells are an image.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridImageColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ClipPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClipPath"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridImageColumn"}},{"HashCode":1012934441,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridImageColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridImageColumn\">\r\n    <summary>\r\n    Represent a column whose cells are an image.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridImageColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ClipPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"ClipPath"}},{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridImageColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2020938679,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridImageColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridImageColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridImageColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":377891495,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridImageColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridImageColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridImageColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":751360261,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridIncrementalLoadingCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridIncrementalLoadingCell\">\r\n    <summary>\r\n    Visual element displayed inside a <see cref=\"T:C1.Blazor.Grid.GridIncrementalLoadingRow\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridIncrementalLoadingCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsLoading","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsLoading"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridIncrementalLoadingCell"}},{"HashCode":-1402610867,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridIncrementalLoadingCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridIncrementalLoadingCell\">\r\n    <summary>\r\n    Visual element displayed inside a <see cref=\"T:C1.Blazor.Grid.GridIncrementalLoadingRow\"/>.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridIncrementalLoadingCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsLoading","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsLoading"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridIncrementalLoadingCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-744631737,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridNewRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridNewRow\">\r\n    <summary>\r\n    Represents a row used to enter new records in the grid.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridNewRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridNewRow"}},{"HashCode":-1240004771,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridNewRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridNewRow\">\r\n    <summary>\r\n    Represents a row used to enter new records in the grid.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridNewRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridNewRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-130824961,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridCellView","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridCellView\">\r\n    <summary>\r\n    Contains properties that will be applied to cell view elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridCellView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.SelectedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of selected cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBrush"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of mouse over cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"IsMouseOver","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsMouseOver\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsMouseOver"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsSelected\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridCellView"}},{"HashCode":-1948979325,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridCellView","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridCellView\">\r\n    <summary>\r\n    Contains properties that will be applied to cell view elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridCellView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.SelectedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of selected cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBrush"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> that is used to paint the color of mouse over cell / row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"IsMouseOver","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsMouseOver\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsMouseOver"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridControlCellView.IsSelected\">\r\n    <summary>\r\n    Gets or sets the mouse over state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridCellView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":984348595,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridRowHeaderColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridRowHeaderColumn\">\r\n    <summary>\r\n    Represents a grid column which holds row headers.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridRowHeaderColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridRowHeaderColumn"}},{"HashCode":-824405044,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridRowHeaderColumn","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridRowHeaderColumn\">\r\n    <summary>\r\n    Represents a grid column which holds row headers.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridRowHeaderColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CellTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"CellTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Header\">\r\n    <summary>\r\n    Gets or sets text shown in the header of this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Format\">\r\n    <summary>\r\n    Gets or sets the format applied to the displayed data.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column is read only. \r\n    If the grid is set to be read-only this property will be ignored.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the column is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Binding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Binding\">\r\n    <summary>\r\n    Gets or sets the binding.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Binding"}},{"Kind":"Components.Component","Name":"AllowSorting","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowSorting\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can sort this column by tapping the column header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowSorting"}},{"Kind":"Components.Component","Name":"AllowFiltering","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowFiltering\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can filter by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowFiltering"}},{"Kind":"Components.Component","Name":"AllowGrouping","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowGrouping\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the user can group by this column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowGrouping"}},{"Kind":"Components.Component","Name":"SortMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to sort when the column header of this column is tapped.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.SortMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortMemberPath"}},{"Kind":"Components.Component","Name":"FilterMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to filter this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.FilterMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterMemberPath"}},{"Kind":"Components.Component","Name":"GroupMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\">\r\n    <summary>\r\n    Gets or sets the path used to group this column.\r\n    </summary>\r\n    <remarks>\r\n    If no <see cref=\"P:C1.Blazor.Grid.GridColumn.GroupMemberPath\"/> is specified, the <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/> property will be used.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupMemberPath"}},{"Kind":"Components.Component","Name":"MinWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MinWidth\">\r\n    <summary>\r\n    Gets or sets the minimum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinWidth"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.MaxWidth\">\r\n    <summary>\r\n    Gets or sets the maximum width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Width\">\r\n    <summary>\r\n    Gets or sets the width of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"HeaderHorizontalAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.HeaderHorizontalAlignment\">\r\n    <summary>\r\n    Gets or sets the horizontal alignment of the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderHorizontalAlignment"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this column can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"InputType","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.InputType\">\r\n    <summary>\r\n    Gets or sets the type of keyboard shown when the cell is in edit-mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"InputType"}},{"Kind":"Components.Component","Name":"Aggregate","TypeName":"C1.Blazor.Grid.GridAggregate","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.Aggregate\">\r\n    <summary>\r\n    Gets or sets the type of aggregate to include in group headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Aggregate"}},{"Kind":"Components.Component","Name":"ValueConverter","TypeName":"C1.Blazor.Core.IValueConverter","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.ValueConverter\">\r\n    <summary>\r\n    Gets or sets an <see cref=\"T:C1.Blazor.Core.IValueConverter\"/> associated with this column's <see cref=\"P:C1.Blazor.Grid.GridColumn.Binding\"/>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueConverter"}},{"Kind":"Components.Component","Name":"DataMap","TypeName":"C1.Blazor.Grid.GridDataMap","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.DataMap\">\r\n    <summary>\r\n    Gets or sets the DataMap used to convert raw values into display values for the column.\r\n    </summary>\r\n    <remarks>\r\n    Columns with an associated <see cref=\"T:C1.Blazor.Grid.GridDataMap\"/> will display a picker instead of the inline editor.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DataMap"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this column can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the column wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}},{"Kind":"Components.Component","Name":"FilterLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridColumnFilterLoadingEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumn.FilterLoading\">\r\n    <summary>\r\n    Occurs when the filter of a column is being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FilterLoading","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridRowHeaderColumn","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-431911706,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridRowHeaderColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"GridRowHeaderColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridRowHeaderColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1092128455,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridRowHeaderColumn.CellTemplate","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CellTemplate","ParentTag":"C1.Blazor.Grid.GridRowHeaderColumn"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CellTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridRowHeaderColumn.CellTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":498095712,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridColumnHeaderCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridColumnHeaderCell\">\r\n    <summary>\r\n    Visual column header\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OutlineTapped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Grid.GridOutlineEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineTapped\">\r\n    <summary>\r\n    Occurs when any of the outlines is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineTapped","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.Title\">\r\n    <summary>\r\n    Gets or sets the title of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"TitlePadding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitlePadding\">\r\n    <summary>\r\n    Gets or sets the padding of the title of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitlePadding"}},{"Kind":"Components.Component","Name":"TitleAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the title inside the cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleAlignment"}},{"Kind":"Components.Component","Name":"TitleFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontSize\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontSize"}},{"Kind":"Components.Component","Name":"TitleFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontFamily\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontFamily"}},{"Kind":"Components.Component","Name":"TitleFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontWeight\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontWeight"}},{"Kind":"Components.Component","Name":"TitleFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontStyle\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontStyle"}},{"Kind":"Components.Component","Name":"SortState","TypeName":"C1.DataCollection.SortDirection?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortState\">\r\n    <summary>\r\n    Gets or sets the sort state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortState"}},{"Kind":"Components.Component","Name":"SortAscendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort ascending icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortAscendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDescendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort descending icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortDescendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIndeterminateIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort indeterminate icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIndeterminateIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowSort","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.ShowSort\">\r\n    <summary>\r\n    Gets or sets whether the grid should display sort indicators in the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSort"}},{"Kind":"Components.Component","Name":"SortIconPosition","TypeName":"C1.Blazor.Grid.GridSortIconPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIconPosition\">\r\n    <summary>\r\n    Gets or sets the sort icon position.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIconPosition"}},{"Kind":"Components.Component","Name":"MaxOutline","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.MaxOutline\">\r\n    <summary>\r\n    Gets or sets the number of outlines.\r\n    </summary>\r\n    <remarks>-1 means no outlines.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxOutline"}},{"Kind":"Components.Component","Name":"OutlineColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineColor\">\r\n    <summary>\r\n    Gets or sets the color of the outline.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineColor"}},{"Kind":"Components.Component","Name":"OutlineBorderColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineBorderColor\">\r\n    <summary>\r\n    Gets or sets the color of the outline border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineBorderColor"}},{"Kind":"Components.Component","Name":"OutlineBorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineBorderWidth\">\r\n    <summary>\r\n    Gets or sets the width of the outline border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineBorderWidth"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell"}},{"HashCode":1896884969,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridColumnHeaderCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridColumnHeaderCell\">\r\n    <summary>\r\n    Visual column header\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OutlineTapped","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Grid.GridOutlineEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineTapped\">\r\n    <summary>\r\n    Occurs when any of the outlines is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineTapped","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.Title\">\r\n    <summary>\r\n    Gets or sets the title of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"TitlePadding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitlePadding\">\r\n    <summary>\r\n    Gets or sets the padding of the title of the column.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitlePadding"}},{"Kind":"Components.Component","Name":"TitleAlignment","TypeName":"C1.Blazor.Core.C1HorizontalAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the title inside the cell.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleAlignment"}},{"Kind":"Components.Component","Name":"TitleFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontSize\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontSize"}},{"Kind":"Components.Component","Name":"TitleFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontFamily\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontFamily"}},{"Kind":"Components.Component","Name":"TitleFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontWeight\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontWeight"}},{"Kind":"Components.Component","Name":"TitleFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.TitleFontStyle\">\r\n    <summary>\r\n    Gets or sets the title font size.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TitleFontStyle"}},{"Kind":"Components.Component","Name":"SortState","TypeName":"C1.DataCollection.SortDirection?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortState\">\r\n    <summary>\r\n    Gets or sets the sort state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortState"}},{"Kind":"Components.Component","Name":"SortAscendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort ascending icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortAscendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortDescendingIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort descending icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortDescendingIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SortIndeterminateIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort indeterminate icon template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIndeterminateIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ShowSort","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.ShowSort\">\r\n    <summary>\r\n    Gets or sets whether the grid should display sort indicators in the column headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowSort"}},{"Kind":"Components.Component","Name":"SortIconPosition","TypeName":"C1.Blazor.Grid.GridSortIconPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIconPosition\">\r\n    <summary>\r\n    Gets or sets the sort icon position.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SortIconPosition"}},{"Kind":"Components.Component","Name":"MaxOutline","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.MaxOutline\">\r\n    <summary>\r\n    Gets or sets the number of outlines.\r\n    </summary>\r\n    <remarks>-1 means no outlines.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxOutline"}},{"Kind":"Components.Component","Name":"OutlineColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineColor\">\r\n    <summary>\r\n    Gets or sets the color of the outline.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineColor"}},{"Kind":"Components.Component","Name":"OutlineBorderColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineBorderColor\">\r\n    <summary>\r\n    Gets or sets the color of the outline border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineBorderColor"}},{"Kind":"Components.Component","Name":"OutlineBorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.OutlineBorderWidth\">\r\n    <summary>\r\n    Gets or sets the width of the outline border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OutlineBorderWidth"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1724171006,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort ascending icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortAscendingIconTemplate","ParentTag":"GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortAscendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1275233271,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort ascending icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortAscendingIconTemplate","ParentTag":"C1.Blazor.Grid.GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortAscendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortAscendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1780665862,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort descending icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortDescendingIconTemplate","ParentTag":"GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortDescendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1415901468,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort descending icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortDescendingIconTemplate","ParentTag":"C1.Blazor.Grid.GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortDescendingIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortDescendingIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1146980346,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort indeterminate icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortIndeterminateIconTemplate","ParentTag":"GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortIndeterminateIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":281196825,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate\">\r\n    <summary>\r\n    Gets or sets the sort indeterminate icon template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SortIndeterminateIconTemplate","ParentTag":"C1.Blazor.Grid.GridColumnHeaderCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'SortIndeterminateIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridColumnHeaderCell.SortIndeterminateIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1048644616,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridGroupRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridGroupRow\">\r\n    <summary>\r\n    Represents rows that defines group of data items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridGroupRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridGroupRow"}},{"HashCode":-1951134606,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridGroupRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridGroupRow\">\r\n    <summary>\r\n    Represents rows that defines group of data items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridGroupRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridGroupRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1666404275,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FlexGridDetailProvider`1\">\r\n    <summary>\r\n    Implements detail rows for <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> control.\r\n    </summary>\r\n    <remarks>To add detail rows to a <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> control, create an instance of a <see cref=\"T:C1.Blazor.Grid.FlexGridDetailProvider`1\"/> and add it to the Behaviors property collection, then set RowDetailTemplate or handle <see cref=\"!:DetailCellCreating\"/> to provide the details.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.Grid.FlexGridDetailProvider<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TItem : , class"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.Height\">\r\n    <summary>\r\n    Gets or sets the height of the details.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"DetailVisibilityMode","TypeName":"C1.Blazor.Grid.GridDetailVisibilityMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailVisibilityMode\">\r\n    <summary>\r\n    Gets or sets the detail visibility mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailVisibilityMode"}},{"Kind":"Components.Component","Name":"ShowExpandButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.ShowExpandButton\">\r\n    <summary>\r\n    Gets or sets whether to show the expand/collapse buttons in the row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowExpandButton"}},{"Kind":"Components.Component","Name":"DetailExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is expanded.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DetailCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is collapsed.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DetailLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridDetailLoadingEventArgs<TItem>>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailLoading\">\r\n    <summary>\r\n    Occurs when the detail cell is being created.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailLoading","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>","Components.GenericTyped":"True"}},{"HashCode":-445542744,"Kind":"Components.Component","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.FlexGridDetailProvider`1\">\r\n    <summary>\r\n    Implements detail rows for <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> control.\r\n    </summary>\r\n    <remarks>To add detail rows to a <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> control, create an instance of a <see cref=\"T:C1.Blazor.Grid.FlexGridDetailProvider`1\"/> and add it to the Behaviors property collection, then set RowDetailTemplate or handle <see cref=\"!:DetailCellCreating\"/> to provide the details.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.Grid.FlexGridDetailProvider<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TItem : , class"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.Height\">\r\n    <summary>\r\n    Gets or sets the height of the details.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"DetailVisibilityMode","TypeName":"C1.Blazor.Grid.GridDetailVisibilityMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailVisibilityMode\">\r\n    <summary>\r\n    Gets or sets the detail visibility mode.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailVisibilityMode"}},{"Kind":"Components.Component","Name":"ShowExpandButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.ShowExpandButton\">\r\n    <summary>\r\n    Gets or sets whether to show the expand/collapse buttons in the row headers.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowExpandButton"}},{"Kind":"Components.Component","Name":"DetailExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is expanded.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DetailCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is collapsed.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DetailLoading","TypeName":"System.EventHandler<C1.Blazor.Grid.GridDetailLoadingEventArgs<TItem>>","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailLoading\">\r\n    <summary>\r\n    Occurs when the detail cell is being created.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DetailLoading","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1060501142,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is expanded.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailExpandedIconTemplate","ParentTag":"FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DetailExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1062771583,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is expanded.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailExpandedIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DetailExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2020171196,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is collapsed.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailCollapsedIconTemplate","ParentTag":"FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DetailCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-317009049,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the detail row is collapsed.\r\n    </summary>\r\n    <remarks>\r\n    When this property is null, the <see cref=\"P:C1.Blazor.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate\"/> icon template will be mirrored horizontally.\r\n    </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DetailCollapsedIconTemplate","ParentTag":"C1.Blazor.Grid.FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DetailCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.DetailCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-286377385,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.ChildContent","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1279255260,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.ChildContent","AssemblyName":"C1.Blazor.Grid","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Grid.FlexGridDetailProvider"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.FlexGridDetailProvider<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1672980267,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridDetailRow<TItem>","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridDetailRow`1\">\r\n    <summary>\r\n    Row that shows the details of the previous row.\r\n    </summary>\r\n    <seealso cref=\"T:C1.Blazor.Grid.GridRow\" />\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridDetailRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.Grid.GridDetailRow<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TItem : , class"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridDetailRow<TItem>","Components.GenericTyped":"True"}},{"HashCode":133142457,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridDetailRow<TItem>","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridDetailRow`1\">\r\n    <summary>\r\n    Row that shows the details of the previous row.\r\n    </summary>\r\n    <seealso cref=\"T:C1.Blazor.Grid.GridRow\" />\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridDetailRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.Grid.GridDetailRow<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False","Component.TypeParameterConstraints":"where TItem : , class"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridDetailRow<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1652408529,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridFilterRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridFilterRow\">\r\n    <summary>\r\n    Represents a row whose cells are text boxes used to filter the corresponding column.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridFilterRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.MatchCase\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the case too.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the whole word.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.Delay\">\r\n    <summary>\r\n    Gets or sets the delay before performing the filtering. \r\n    </summary>\r\n    <remarks>\r\n    This parameter is useful to avoid early filters when typing a burst of keystrokes.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the typed text will be auto-completed based on the data in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridFilterRow"}},{"HashCode":1377711511,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridFilterRow","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridFilterRow\">\r\n    <summary>\r\n    Represents a row whose cells are text boxes used to filter the corresponding column.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridFilterRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MatchCase","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.MatchCase\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the case too.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchCase"}},{"Kind":"Components.Component","Name":"MatchWholeWord","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.MatchWholeWord\">\r\n    <summary>\r\n    Gets or sets whether the filtered text should match the whole word.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MatchWholeWord"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.Delay\">\r\n    <summary>\r\n    Gets or sets the delay before performing the filtering. \r\n    </summary>\r\n    <remarks>\r\n    This parameter is useful to avoid early filters when typing a burst of keystrokes.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the typed text will be auto-completed based on the data in the grid.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridFilterRow.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"IsVisible","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsVisible\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the row is visible and not collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsVisible"}},{"Kind":"Components.Component","Name":"Level","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Level\">\r\n    <summary>\r\n    Gets or sets the nesting level inside a group. This is zero if no grouping is used.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Level"}},{"Kind":"Components.Component","Name":"Height","TypeName":"C1.Blazor.Grid.GridLength","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.Height\">\r\n    <summary>\r\n    Gets or sets the height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"MinHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MinHeight\">\r\n    <summary>\r\n    Gets or sets the minimum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinHeight"}},{"Kind":"Components.Component","Name":"MaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.MaxHeight\">\r\n    <summary>\r\n    Gets or sets the maximum height of the row.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxHeight"}},{"Kind":"Components.Component","Name":"AllowResizing","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowResizing\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be resized.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowResizing"}},{"Kind":"Components.Component","Name":"AllowDragging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowDragging\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row can be dragged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragging"}},{"Kind":"Components.Component","Name":"AllowMerging","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.AllowMerging\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether cells in this row can be merged.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowMerging"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this row is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"WordWrap","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridRow.WordWrap\">\r\n    <summary>\r\n    Gets or sets a value indicating whether cells in the row wrap their content.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WordWrap"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridFilterRow","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1282124922,"Kind":"Components.Component","Name":"C1.Blazor.Grid.CheckListBehavior","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.CheckListBehavior\">\r\n    <summary>\r\n    Customizes <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> to include a checkbox column and display the grid as a check list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckListBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectionBinding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.CheckListBehavior.SelectionBinding\">\r\n    <summary>\r\n    Gets or sets the binding property to the boolean property of the data item which will hold the selection state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBinding"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.CheckListBehavior"}},{"HashCode":822797362,"Kind":"Components.Component","Name":"C1.Blazor.Grid.CheckListBehavior","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.CheckListBehavior\">\r\n    <summary>\r\n    Customizes <see cref=\"T:C1.Blazor.Grid.FlexGrid\"/> to include a checkbox column and display the grid as a check list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.CheckListBehavior"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectionBinding","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.CheckListBehavior.SelectionBinding\">\r\n    <summary>\r\n    Gets or sets the binding property to the boolean property of the data item which will hold the selection state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionBinding"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.CheckListBehavior","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1819201980,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridGroupRowCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridGroupRowCell\">\r\n    <summary>\r\n    Visual element displayed in the group rows to allow the user expand and collapse as well as displaying the name of the group.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCollapsedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"GroupText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupText\">\r\n    <summary>\r\n    Gets or sets the group text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupText"}},{"Kind":"Components.Component","Name":"ExpandDown","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.ExpandDown\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the group is expanded downwards.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDown"}},{"Kind":"Components.Component","Name":"GroupExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:FlexGrid.GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n    <remarks>\r\n        If this icon template is not specified, the icon will be created by rotating <see cref=\"!:GroupExpandedIconTemplate\" /> 90º counterclockwise.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCollapsed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.IsCollapsed\">\r\n    <summary>\r\n    Gets or sets whether the group is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCollapsed"}},{"Kind":"Components.Component","Name":"GroupFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontSize\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontSize"}},{"Kind":"Components.Component","Name":"GroupFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontFamily\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontFamily"}},{"Kind":"Components.Component","Name":"GroupFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontWeight\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontWeight"}},{"Kind":"Components.Component","Name":"GroupFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontStyle\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell"}},{"HashCode":1556329064,"Kind":"Components.Component","Name":"C1.Blazor.Grid.GridGroupRowCell","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"T:C1.Blazor.Grid.GridGroupRowCell\">\r\n    <summary>\r\n    Visual element displayed in the group rows to allow the user expand and collapse as well as displaying the name of the group.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCollapsedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Common.PropertyName":"IsCollapsedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"GroupText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupText\">\r\n    <summary>\r\n    Gets or sets the group text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupText"}},{"Kind":"Components.Component","Name":"ExpandDown","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.ExpandDown\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the group is expanded downwards.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandDown"}},{"Kind":"Components.Component","Name":"GroupExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:FlexGrid.GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"GroupCollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n    <remarks>\r\n        If this icon template is not specified, the icon will be created by rotating <see cref=\"!:GroupExpandedIconTemplate\" /> 90º counterclockwise.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupCollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsCollapsed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.IsCollapsed\">\r\n    <summary>\r\n    Gets or sets whether the group is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCollapsed"}},{"Kind":"Components.Component","Name":"GroupFontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontSize\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontSize"}},{"Kind":"Components.Component","Name":"GroupFontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontFamily\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontFamily"}},{"Kind":"Components.Component","Name":"GroupFontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontWeight\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontWeight"}},{"Kind":"Components.Component","Name":"GroupFontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupFontStyle\">\r\n    <summary>\r\n    Gets or sets the group font.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupFontStyle"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-806731563,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:FlexGrid.GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupExpandedIconTemplate","ParentTag":"GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1961197501,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is expanded.\r\n    </summary>\r\n    <remarks>\r\n        When the group expand up, because <see cref=\"!:FlexGrid.GroupRowPosition\" /> was set in the grid, this icon will be mirrored horizontally.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupExpandedIconTemplate","ParentTag":"C1.Blazor.Grid.GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell.GroupExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2096748079,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n    <remarks>\r\n        If this icon template is not specified, the icon will be created by rotating <see cref=\"!:GroupExpandedIconTemplate\" /> 90º counterclockwise.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupCollapsedIconTemplate","ParentTag":"GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-515337525,"Kind":"Components.ChildContent","Name":"C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate","AssemblyName":"C1.Blazor.Grid","Documentation":"<member name=\"P:C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to create the icon displayed when the group is collapsed.\r\n    </summary>\r\n    <remarks>\r\n        If this icon template is not specified, the icon will be created by rotating <see cref=\"!:GroupExpandedIconTemplate\" /> 90º counterclockwise.\r\n        </remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupCollapsedIconTemplate","ParentTag":"C1.Blazor.Grid.GridGroupRowCell"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupCollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell.GroupCollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1602108598,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ActivityIndicator","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ActivityIndicator\">\r\n    <summary>\r\n    A visual control used to indicate that something is ongoing.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ActivityIndicator"}},{"HashCode":-103055564,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ActivityIndicator","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ActivityIndicator\">\r\n    <summary>\r\n    A visual control used to indicate that something is ongoing.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ActivityIndicator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1690084905,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HtmlButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HtmlButton\">\r\n    <summary>\r\n    Thin component wrapper over html button.\r\n    </summary>\r\n    <remarks>This components prevents event bubbling.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HtmlButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HtmlButton"}},{"HashCode":-646473430,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HtmlButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HtmlButton\">\r\n    <summary>\r\n    Thin component wrapper over html button.\r\n    </summary>\r\n    <remarks>This components prevents event bubbling.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HtmlButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HtmlButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1312716350,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HtmlButton.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1HtmlButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HtmlButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":550042534,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HtmlButton.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1HtmlButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HtmlButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":211719803,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PathIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PathIcon\">\r\n    <summary>\r\n    Represent an icon created from a path string.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1PathIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1PathIcon.Data\">\r\n    <summary>\r\n    Gets or sets the svg string describing the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PathIcon"}},{"HashCode":-358077699,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PathIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PathIcon\">\r\n    <summary>\r\n    Represent an icon created from a path string.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1PathIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1PathIcon.Data\">\r\n    <summary>\r\n    Gets or sets the svg string describing the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PathIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1305970224,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PolygonIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PolygonIcon\">\r\n    <summary>\r\n    Represents an icon created from a vector definition.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1PolygonIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Points","TypeName":"C1.Blazor.Core.C1Point[]","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.Points\">\r\n    <summary>\r\n    Gets the points that describe the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Points"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.IsClosed\">\r\n    <summary>\r\n    Gets whether the last point will connect with the first one.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PolygonIcon"}},{"HashCode":-229726843,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PolygonIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PolygonIcon\">\r\n    <summary>\r\n    Represents an icon created from a vector definition.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1PolygonIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Points","TypeName":"C1.Blazor.Core.C1Point[]","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.Points\">\r\n    <summary>\r\n    Gets the points that describe the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Points"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.IsClosed\">\r\n    <summary>\r\n    Gets whether the last point will connect with the first one.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PolygonIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1975526379,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ScrollViewer","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ScrollViewer\">\r\n    <summary>\r\n    Represents a scrollable area that can contain other visible elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ScrollViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ViewportChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerViewChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ViewportChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the viewport changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewportChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerSizeChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.SizeChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the size changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SizeChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyDown","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyDown\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyDown","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyUp","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyUp\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyUp","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"System.Action<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.Input\">\r\n    <summary>\r\n    Gets or sets the callback that is called when input is received.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Input","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopLeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer"}},{"HashCode":633125199,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ScrollViewer","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ScrollViewer\">\r\n    <summary>\r\n    Represents a scrollable area that can contain other visible elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ScrollViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ViewportChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerViewChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ViewportChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the viewport changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewportChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerSizeChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.SizeChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the size changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SizeChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyDown","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyDown\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyDown","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyUp","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyUp\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyUp","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"System.Action<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.Input\">\r\n    <summary>\r\n    Gets or sets the callback that is called when input is received.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Input","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopLeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-732957624,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-815421735,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1527831705,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopLeftHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1560613991,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopLeftHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2104335164,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-777093031,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":966828538,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LeftHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1122074000,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LeftHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":48144533,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ItemsControl"}},{"HashCode":-1507949729,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ItemsControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-126633986,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-526941958,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1ItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1194955399,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1534772381,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Core.C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1257438813,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items which have header and content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl"}},{"HashCode":-589302847,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items which have header and content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-614001080,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1505762932,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1120281881,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1HeaderedItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1183029381,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1907885287,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-155679229,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1862899229,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedContentControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedContentControl\">\r\n    <summary>\r\n    Provides the base implementation for all controls that contain single content and have a header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HeaderedContentControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedContentControl"}},{"HashCode":-969634505,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedContentControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedContentControl\">\r\n    <summary>\r\n    Provides the base implementation for all controls that contain single content and have a header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HeaderedContentControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedContentControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-10973757,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Button","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Button\">\r\n    <summary>\r\n    Button with a built-in style matching the suite.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Button"}},{"HashCode":355552006,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Button","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Button\">\r\n    <summary>\r\n    Button with a built-in style matching the suite.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Button","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-31568517,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1Button.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1414823959,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1Button.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1334633758,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Border","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Border\">\r\n    <summary>\r\n    Basic control used to draw a border around another view.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Border"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Border"}},{"HashCode":13646310,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Border","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Border\">\r\n    <summary>\r\n    Basic control used to draw a border around another view.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1Border"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Border","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1623867292,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ToggleButton\">\r\n    <summary>\r\n    Represents a button that a user can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ToggleButton"}},{"HashCode":-446196162,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ToggleButton\">\r\n    <summary>\r\n    Represents a button that a user can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1286125037,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.CheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":17591161,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.CheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":252385043,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1523975092,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1900651819,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1637226871,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2039543848,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1Menu","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1Menu\">\r\n    <summary>\r\n    Menu control supporting nested items hierarchies.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Menu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1Menu"}},{"HashCode":-2127567452,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1Menu","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1Menu\">\r\n    <summary>\r\n    Menu control supporting nested items hierarchies.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.C1Menu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1Menu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":452739872,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1Menu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2069801560,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1.Blazor.Menu.C1Menu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-49575292,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1Menu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":930291487,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Menu.C1Menu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1705404377,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1Menu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2023924064,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1Menu.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.C1Menu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1Menu.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1296443389,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuItem","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuItem\">\r\n    <summary>\r\n    Represents a selectable item inside a C1Menu control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsEnabled\">\r\n    <summary>\r\n    gets or set whether the node is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuClosedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuClosedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuClosedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuOpenedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuOpenedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is opend.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuOpenedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClickToCloseMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ClickToCloseMenu\">\r\n    <summary>\r\n    Get or set the behavior that menu is closed when item is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClickToCloseMenu"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Icon\">\r\n    <summary>\r\n    Gets or sets the icon that appears in a C1MenuItem.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsSubmenuOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpen\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the C1MenuItem is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpen"}},{"Kind":"Components.Component","Name":"IsSubmenuOpenVisual","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpenVisual\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" />; is open, this is used for visual purposes only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpenVisual"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsCheckable\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> can be checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsChecked\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsHighlighted","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsHighlighted\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is highlighted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsHighlighted"}},{"Kind":"Components.Component","Name":"HighlightedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HighlightedStyle\">\r\n    <summary>\r\n    Gets a value that indicates Style of Highlighted Item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightedStyle"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.GroupName\">\r\n    <summary>\r\n    Gets or sets the name that specifies which MenuItems are mutually exclusive (when checkable).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.CommandParameter\">\r\n    <summary>\r\n    Gets or sets the parameter to pass to the Command property.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"MenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.MenuStyle\">\r\n    <summary>\r\n    Gets or sets the style aplied to the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MenuStyle"}},{"Kind":"Components.Component","Name":"IsIndented","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsIndented\">\r\n    <summary>\r\n    Gets or sets whether the Indent band is displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsIndented"}},{"Kind":"Components.Component","Name":"ShowOpenIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ShowOpenIcon\">\r\n    <summary>\r\n    Gets whether the open icon is displayed, provided the sub menu has items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOpenIcon"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuItem"}},{"HashCode":-1049871652,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuItem","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuItem\">\r\n    <summary>\r\n    Represents a selectable item inside a C1Menu control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.C1MenuItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsEnabled\">\r\n    <summary>\r\n    gets or set whether the node is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuClosedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuClosedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuClosedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuOpenedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuOpenedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is opend.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuOpenedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClickToCloseMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ClickToCloseMenu\">\r\n    <summary>\r\n    Get or set the behavior that menu is closed when item is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClickToCloseMenu"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Icon\">\r\n    <summary>\r\n    Gets or sets the icon that appears in a C1MenuItem.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsSubmenuOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpen\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the C1MenuItem is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpen"}},{"Kind":"Components.Component","Name":"IsSubmenuOpenVisual","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpenVisual\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" />; is open, this is used for visual purposes only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpenVisual"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsCheckable\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> can be checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsChecked\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsHighlighted","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsHighlighted\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is highlighted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsHighlighted"}},{"Kind":"Components.Component","Name":"HighlightedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HighlightedStyle\">\r\n    <summary>\r\n    Gets a value that indicates Style of Highlighted Item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightedStyle"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.GroupName\">\r\n    <summary>\r\n    Gets or sets the name that specifies which MenuItems are mutually exclusive (when checkable).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.CommandParameter\">\r\n    <summary>\r\n    Gets or sets the parameter to pass to the Command property.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"MenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.MenuStyle\">\r\n    <summary>\r\n    Gets or sets the style aplied to the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MenuStyle"}},{"Kind":"Components.Component","Name":"IsIndented","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsIndented\">\r\n    <summary>\r\n    Gets or sets whether the Indent band is displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsIndented"}},{"Kind":"Components.Component","Name":"ShowOpenIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ShowOpenIcon\">\r\n    <summary>\r\n    Gets whether the open icon is displayed, provided the sub menu has items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOpenIcon"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1529042719,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":936972925,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.C1MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1934054426,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-732234011,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Menu.C1MenuItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1368538854,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1MenuItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1765596582,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuItem.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1.Blazor.Menu.C1MenuItem"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuItem.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-658159167,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuItemView","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.MenuItemView\">\r\n    <summary>\r\n    Implements a selectable item in a C1MenuList control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuItemView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.Menu.C1MenuItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.Header\">\r\n    <summary>\r\n    gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuItemView"}},{"HashCode":573478608,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuItemView","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.MenuItemView\">\r\n    <summary>\r\n    Implements a selectable item in a C1MenuList control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.MenuItemView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.Menu.C1MenuItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.Header\">\r\n    <summary>\r\n    gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuItemView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":217507328,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.MenuItemView.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"MenuItemView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.MenuItemView.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1361843158,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.MenuItemView.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Menu.MenuItemView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.MenuItemView.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-18796854,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.MenuItemView.ChildContent","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"MenuItemView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.MenuItemView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-963257723,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.MenuItemView.ChildContent","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuItemView.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.MenuItemView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.MenuItemView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1795192652,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuSeparator","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuSeparator\">\r\n    <summary>\r\n    Control that is used to separate items in menus and toolbar.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MenuSeparator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuSeparator.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction of the separator.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsEnabled\">\r\n    <summary>\r\n    gets or set whether the node is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuClosedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuClosedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuClosedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuOpenedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuOpenedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is opend.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuOpenedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClickToCloseMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ClickToCloseMenu\">\r\n    <summary>\r\n    Get or set the behavior that menu is closed when item is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClickToCloseMenu"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Icon\">\r\n    <summary>\r\n    Gets or sets the icon that appears in a C1MenuItem.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsSubmenuOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpen\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the C1MenuItem is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpen"}},{"Kind":"Components.Component","Name":"IsSubmenuOpenVisual","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpenVisual\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" />; is open, this is used for visual purposes only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpenVisual"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsCheckable\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> can be checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsChecked\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsHighlighted","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsHighlighted\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is highlighted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsHighlighted"}},{"Kind":"Components.Component","Name":"HighlightedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HighlightedStyle\">\r\n    <summary>\r\n    Gets a value that indicates Style of Highlighted Item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightedStyle"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.GroupName\">\r\n    <summary>\r\n    Gets or sets the name that specifies which MenuItems are mutually exclusive (when checkable).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.CommandParameter\">\r\n    <summary>\r\n    Gets or sets the parameter to pass to the Command property.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"MenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.MenuStyle\">\r\n    <summary>\r\n    Gets or sets the style aplied to the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MenuStyle"}},{"Kind":"Components.Component","Name":"IsIndented","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsIndented\">\r\n    <summary>\r\n    Gets or sets whether the Indent band is displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsIndented"}},{"Kind":"Components.Component","Name":"ShowOpenIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ShowOpenIcon\">\r\n    <summary>\r\n    Gets whether the open icon is displayed, provided the sub menu has items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOpenIcon"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator"}},{"HashCode":1695294425,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuSeparator","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuSeparator\">\r\n    <summary>\r\n    Control that is used to separate items in menus and toolbar.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.C1MenuSeparator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuSeparator.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction of the separator.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsEnabled\">\r\n    <summary>\r\n    gets or set whether the node is enable or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuClosedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuClosedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuClosedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnSubMenuOpenedCallBack","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OnSubMenuOpenedCallBack\">\r\n    <summary>\r\n    Called when sub-menu is opend.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnSubMenuOpenedCallBack","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ClickToCloseMenu","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ClickToCloseMenu\">\r\n    <summary>\r\n    Get or set the behavior that menu is closed when item is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ClickToCloseMenu"}},{"Kind":"Components.Component","Name":"Icon","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.Icon\">\r\n    <summary>\r\n    Gets or sets the icon that appears in a C1MenuItem.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Icon"}},{"Kind":"Components.Component","Name":"IsSubmenuOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpen\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the C1MenuItem is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpen"}},{"Kind":"Components.Component","Name":"IsSubmenuOpenVisual","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsSubmenuOpenVisual\">\r\n    <summary>\r\n    Gets a value that indicates whether the submenu of the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" />; is open, this is used for visual purposes only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubmenuOpenVisual"}},{"Kind":"Components.Component","Name":"IsCheckable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsCheckable\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> can be checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckable"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsChecked\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsHighlighted","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsHighlighted\">\r\n    <summary>\r\n    Gets a value that indicates whether a <see cref=\"T:C1.Blazor.Menu.C1MenuItem\" /> is highlighted.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsHighlighted"}},{"Kind":"Components.Component","Name":"HighlightedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HighlightedStyle\">\r\n    <summary>\r\n    Gets a value that indicates Style of Highlighted Item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightedStyle"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.GroupName\">\r\n    <summary>\r\n    Gets or sets the name that specifies which MenuItems are mutually exclusive (when checkable).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"CommandParameter","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.CommandParameter\">\r\n    <summary>\r\n    Gets or sets the parameter to pass to the Command property.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CommandParameter"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"MenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.MenuStyle\">\r\n    <summary>\r\n    Gets or sets the style aplied to the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MenuStyle"}},{"Kind":"Components.Component","Name":"IsIndented","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.IsIndented\">\r\n    <summary>\r\n    Gets or sets whether the Indent band is displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsIndented"}},{"Kind":"Components.Component","Name":"ShowOpenIcon","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.ShowOpenIcon\">\r\n    <summary>\r\n    Gets whether the open icon is displayed, provided the sub menu has items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowOpenIcon"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":870527196,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1MenuSeparator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2038683302,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.C1MenuSeparator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1802475534,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1MenuSeparator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":759164769,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.HeaderTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.HeaderTemplate\">\r\n    <summary>\r\n    Get or Set custom content like Input, Group Checkbox...\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Menu.C1MenuSeparator"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1003255285,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1MenuSeparator"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-279374237,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuSeparator.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuItem.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1.Blazor.Menu.C1MenuSeparator"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuSeparator.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-504603269,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuSeparatorView","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuSeparatorView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.Menu.C1MenuItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuSeparatorView"}},{"HashCode":-796619781,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuSeparatorView","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.MenuSeparatorView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.Menu.C1MenuItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuSeparatorView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1364863358,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuVirtualStackPanel","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MenuVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuVirtualStackPanel.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuVirtualStackPanel"}},{"HashCode":275585279,"Kind":"Components.Component","Name":"C1.Blazor.Menu.MenuVirtualStackPanel","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.MenuVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.MenuVirtualStackPanel.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.MenuVirtualStackPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1174732878,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuList","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuList\">\r\n    <summary>\r\n    List of menu items. This list can be set as the content of a dropdown to make a drop down list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MenuList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuList"}},{"HashCode":-1935746655,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1MenuList","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1MenuList\">\r\n    <summary>\r\n    List of menu items. This list can be set as the content of a dropdown to make a drop down list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.C1MenuList"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1MenuList","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-255985370,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1MenuList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-144807365,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1.Blazor.Menu.C1MenuList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2124523108,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1MenuList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":865984877,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Menu.C1MenuList"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":383345470,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1MenuList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1632711364,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1MenuList.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.C1MenuList"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1MenuList.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-950097747,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1ContextMenu","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1ContextMenu\">\r\n    <summary>\r\n    The C1ContextMenu control represents a menu that can be displayed when the user clicks the right mouse button over a control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu"}},{"HashCode":726669440,"Kind":"Components.Component","Name":"C1.Blazor.Menu.C1ContextMenu","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"T:C1.Blazor.Menu.C1ContextMenu\">\r\n    <summary>\r\n    The C1ContextMenu control represents a menu that can be displayed when the user clicks the right mouse button over a control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Menu.C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemsSource\">\r\n    <summary>\r\n    Gets or sets menu  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Menu.C1MenuItem>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OnItemSelected\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OpenIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Menu.C1MenuItem>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Menu.Orientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.Orientation\">\r\n    <summary>\r\n    Gets or sets the direction in which to render the Menu control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"SubMenuMaxHeight","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuMaxHeight\">\r\n    <summary>\r\n    Gets or sets a value that indicates the MaxHeight of the SubMenu.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuMaxHeight"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.ItemStyle\">\r\n    <summary>\r\n    Style of the items\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SeparatorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SeparatorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the separator items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorStyle"}},{"Kind":"Components.Component","Name":"SubMenuStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.SubMenuStyle\">\r\n    <summary>\r\n    Gets or set s the style of the sub-menus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SubMenuStyle"}},{"Kind":"Components.Component","Name":"OpenIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconStyle\">\r\n    <summary>\r\n    Gets or sets the style of the open icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenIconStyle"}},{"Kind":"Components.Component","Name":"OpenOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenOnClick\">\r\n    <summary>\r\n    Gets or set wether opening sub-menu by clicking item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenOnClick"}},{"Kind":"Components.Component","Name":"IsSubMenuOpenedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.IsSubMenuOpenedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the item which sub-menu is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSubMenuOpenedStyle"}},{"Kind":"Components.Component","Name":"OpenedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used in a menu item when this item is opened.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenedBackground"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1083577984,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-335305667,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.OpenIconTemplate","AssemblyName":"C1.Blazor.Menu","Documentation":"<member name=\"P:C1.Blazor.Menu.C1MenuList.OpenIconTemplate\">\r\n    <summary>\r\n    Gets or sets the template of the icon used to show this item has a sub-menu.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"OpenIconTemplate","ParentTag":"C1.Blazor.Menu.C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'OpenIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.OpenIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1645918204,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-828604785,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.ItemTemplate","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Menu.C1ContextMenu"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2080181266,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-133111670,"Kind":"Components.ChildContent","Name":"C1.Blazor.Menu.C1ContextMenu.ChildContent","AssemblyName":"C1.Blazor.Menu","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Menu.C1ContextMenu"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Menu.C1ContextMenu.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":469224975,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":636009819,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":546575177,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2114769399,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1550772779,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":612198687,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2060463747,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1326584478,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-395655512,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1580936022,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-543923158,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":660330704,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-834393148,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":320548796,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74517637,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":879601327,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-318285175,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1419540319,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":409020797,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1324656409,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1401153931,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1104389462,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":120046139,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":240557118,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-798535488,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-148825719,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1657218375,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1575359467,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1832139381,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":314395922,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":466631769,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-620654161,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395294726,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-196963757,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":133350078,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1632911159,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1992045051,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":434043723,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":772720459,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1330823382,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":817317830,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-438970647,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1779680239,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1488654964,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1871753312,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":583309410,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":751792818,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-699986234,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":52762667,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2132332790,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1915518260,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1632728403,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1007967319,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":326400237,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1538588348,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":481427772,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1941393997,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":145174147,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1616493707,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2049924970,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-499411268,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-467955947,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-646455659,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1318909817,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-566190700,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1370031643,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1396958713,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-584687426,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1507174455,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1480061990,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395230637,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":749652276,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1279740321,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2011637847,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-921956754,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1440136766,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":257822301,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1058047039,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":104249782,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-386211422,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":832686668,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-279644017,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":891414409,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2123884659,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-463806918,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-884469555,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":671319647,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74752683,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1986906860,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":738238011,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1984892155,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1259166588,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1270112777,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes"}},{"HashCode":-1132855933,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper"}},{"HashCode":-458149748,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"\n            <summary>\n            The host name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL fragment name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper"}},{"HashCode":-222274357,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper"}},{"HashCode":-710024730,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets values for component parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the component type. This value is required.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper"}},{"HashCode":5888046,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper"}},{"HashCode":-98134858,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper"}},{"HashCode":-1374103696,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper"}},{"HashCode":-1261220325,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper"}},{"HashCode":-1709777796,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper"}},{"HashCode":1006186794,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper"}},{"HashCode":-334796707,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper"}},{"HashCode":74756029,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper"}},{"HashCode":394668654,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper"}},{"HashCode":2096572700,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            Renders a partial view.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located.\n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper"}},{"HashCode":300760378,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper"}},{"HashCode":1581530153,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper"}},{"HashCode":1854126375,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper"}},{"HashCode":628075759,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper"}},{"HashCode":1381111830,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper"}},{"HashCode":536842639,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper"}},{"HashCode":999350350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.Fallback":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind"}},{"HashCode":-1874581601,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":688756199,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1525564843,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"checkbox","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-2050403530,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"text","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1758301023,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":2003827684,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-259225247,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-570582221,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":564364738,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1169474289,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":871231720,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1515522350,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1647736512,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1296198824,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1488907878,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-596367609,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1864122447,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":490191036,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":877686389,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"}},{"HashCode":899488481,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-543982663,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"}},{"HashCode":184745786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2088536480,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"}},{"HashCode":622693140,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-796020349,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"}},{"HashCode":646250911,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1614905710,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":789494904,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":282414888,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":-1742066353,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1998481232,"Kind":"Components.Bind","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"Binds the provided expression to the 'AutoGenerateFilters' property and a change event delegate to the 'AutoGenerateFiltersChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DataFilter","Attributes":[{"Name":"@bind-AutoGenerateFilters","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-AutoGenerateFilters","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'AutoGenerateFilters' property and a change event delegate to the 'AutoGenerateFiltersChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"AutoGenerateFilters"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"AutoGenerateFilters","Components.Bind.ChangeAttribute":"AutoGenerateFiltersChanged","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter"}},{"HashCode":1400425546,"Kind":"Components.Bind","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"Binds the provided expression to the 'AutoApply' property and a change event delegate to the 'AutoApplyChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DataFilter","Attributes":[{"Name":"@bind-AutoApply","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-AutoApply","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'AutoApply' property and a change event delegate to the 'AutoApplyChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"AutoApply"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"AutoApply","Components.Bind.ChangeAttribute":"AutoApplyChanged","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter"}},{"HashCode":-609488048,"Kind":"Components.Bind","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"Binds the provided expression to the 'AutoGenerateFilters' property and a change event delegate to the 'AutoGenerateFiltersChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.C1DataFilter","Attributes":[{"Name":"@bind-AutoGenerateFilters","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-AutoGenerateFilters","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'AutoGenerateFilters' property and a change event delegate to the 'AutoGenerateFiltersChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"AutoGenerateFilters"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"AutoGenerateFilters","Components.Bind.ChangeAttribute":"AutoGenerateFiltersChanged","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2044113539,"Kind":"Components.Bind","Name":"C1.Blazor.DataFilter.C1DataFilter","AssemblyName":"C1.Blazor.DataFilter","Documentation":"Binds the provided expression to the 'AutoApply' property and a change event delegate to the 'AutoApplyChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DataFilter.C1DataFilter","Attributes":[{"Name":"@bind-AutoApply","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-AutoApply","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'AutoApply' property and a change event delegate to the 'AutoApplyChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"AutoApply"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"AutoApply","Components.Bind.ChangeAttribute":"AutoApplyChanged","Common.TypeName":"C1.Blazor.DataFilter.C1DataFilter","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1667158717,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateTimePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}},{"HashCode":322709678,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateTimePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker"}},{"HashCode":2065516480,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateTimePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":185986173,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateTimePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateTimePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateTimePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":60317466,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DatePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker"}},{"HashCode":1343275134,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DatePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker"}},{"HashCode":590825456,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DatePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1491886103,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DatePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DatePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DatePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1909194366,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TimeEditor","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor"}},{"HashCode":1566824077,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TimeEditor","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor"}},{"HashCode":-2064499396,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1TimeEditor","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2052906182,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1TimeEditor","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1TimeEditor","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1TimeEditor","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-994204295,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateRangePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.DateTimeEditors.DateRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}},{"HashCode":546104043,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DateRangePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker"}},{"HashCode":292154203,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateRangePicker","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.DateTimeEditors.DateRange>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":204330254,"Kind":"Components.Bind","Name":"C1.Blazor.DateTimeEditors.C1DateRangePicker","AssemblyName":"C1.Blazor.DateTimeEditors","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.DateTimeEditors.C1DateRangePicker","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.DateTimeEditors.C1DateRangePicker","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1863380340,"Kind":"Components.Bind","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ListView","Attributes":[{"Name":"@bind-Selection","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selection"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selection","Components.Bind.ChangeAttribute":"SelectionChanged","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>"}},{"HashCode":-764081119,"Kind":"Components.Bind","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.C1ListView","Attributes":[{"Name":"@bind-Selection","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selection"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selection","Components.Bind.ChangeAttribute":"SelectionChanged","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1211193357,"Kind":"Components.Bind","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"Binds the provided expression to the 'SelectedDate' property and a change event delegate to the 'SelectedDateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Calendar","Attributes":[{"Name":"@bind-SelectedDate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'SelectedDate' property and a change event delegate to the 'SelectedDateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDate","Components.Bind.ChangeAttribute":"SelectedDateChanged","Common.TypeName":"C1.Blazor.Calendar.C1Calendar"}},{"HashCode":2040802384,"Kind":"Components.Bind","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"Binds the provided expression to the 'DisplayDate' property and a change event delegate to the 'DisplayDateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Calendar","Attributes":[{"Name":"@bind-DisplayDate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DisplayDate","TypeName":"System.EventHandler<C1.Blazor.Core.PropertyChangedEventArgs<System.DateTime>>","Documentation":"Binds the provided expression to the 'DisplayDate' property and a change event delegate to the 'DisplayDateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DisplayDate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DisplayDate","Components.Bind.ChangeAttribute":"DisplayDateChanged","Common.TypeName":"C1.Blazor.Calendar.C1Calendar"}},{"HashCode":-522541216,"Kind":"Components.Bind","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"Binds the provided expression to the 'SelectedDate' property and a change event delegate to the 'SelectedDateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Calendar.C1Calendar","Attributes":[{"Name":"@bind-SelectedDate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedDate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.DateTime>","Documentation":"Binds the provided expression to the 'SelectedDate' property and a change event delegate to the 'SelectedDateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedDate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedDate","Components.Bind.ChangeAttribute":"SelectedDateChanged","Common.TypeName":"C1.Blazor.Calendar.C1Calendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1298219239,"Kind":"Components.Bind","Name":"C1.Blazor.Calendar.C1Calendar","AssemblyName":"C1.Blazor.Calendar","Documentation":"Binds the provided expression to the 'DisplayDate' property and a change event delegate to the 'DisplayDateChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Calendar.C1Calendar","Attributes":[{"Name":"@bind-DisplayDate","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DisplayDate","TypeName":"System.EventHandler<C1.Blazor.Core.PropertyChangedEventArgs<System.DateTime>>","Documentation":"Binds the provided expression to the 'DisplayDate' property and a change event delegate to the 'DisplayDateChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DisplayDate"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"DisplayDate","Components.Bind.ChangeAttribute":"DisplayDateChanged","Common.TypeName":"C1.Blazor.Calendar.C1Calendar","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-726168247,"Kind":"Components.Bind","Name":"C1.Blazor.Accordion.C1Expander","AssemblyName":"C1.Blazor.Accordion","Documentation":"Binds the provided expression to the 'IsExpanded' property and a change event delegate to the 'IsExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Expander","Attributes":[{"Name":"@bind-IsExpanded","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsExpanded' property and a change event delegate to the 'IsExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsExpanded"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsExpanded","Components.Bind.ChangeAttribute":"IsExpandedChanged","Common.TypeName":"C1.Blazor.Accordion.C1Expander"}},{"HashCode":-1456404919,"Kind":"Components.Bind","Name":"C1.Blazor.Accordion.C1Expander","AssemblyName":"C1.Blazor.Accordion","Documentation":"Binds the provided expression to the 'IsExpanded' property and a change event delegate to the 'IsExpandedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.C1Expander","Attributes":[{"Name":"@bind-IsExpanded","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsExpanded","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsExpanded' property and a change event delegate to the 'IsExpandedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsExpanded"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsExpanded","Components.Bind.ChangeAttribute":"IsExpandedChanged","Common.TypeName":"C1.Blazor.Accordion.C1Expander","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":352854650,"Kind":"Components.Bind","Name":"C1.Blazor.Accordion.ExpanderButton","AssemblyName":"C1.Blazor.Accordion","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpanderButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton"}},{"HashCode":957859014,"Kind":"Components.Bind","Name":"C1.Blazor.Accordion.ExpanderButton","AssemblyName":"C1.Blazor.Accordion","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Accordion.ExpanderButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Accordion.ExpanderButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2027897820,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoCompleteTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox"}},{"HashCode":1998543949,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoCompleteTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1351542173,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1TextBox"}},{"HashCode":-1514770866,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1TextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1TextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":638571913,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-335454170,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-2031382188,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-1828536194,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-729243584,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1173213879,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":626465528,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MaskedTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox"}},{"HashCode":-53198939,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1MaskedTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-963699282,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1Slider"}},{"HashCode":-484711453,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1699451013,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Input.C1CheckBox"}},{"HashCode":-1368003747,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Input.C1CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1331937085,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DropDown","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1DropDown"}},{"HashCode":918585838,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1DropDown","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1DropDown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":80651079,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1NumericBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>"}},{"HashCode":-711217307,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1NumericBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1813547511,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":-1048670285,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":515511647,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":-1934099472,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":707113656,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1772338923,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1148660011,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider","Attributes":[{"Name":"@bind-LowerValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-LowerValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"LowerValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"LowerValue","Components.Bind.ChangeAttribute":"LowerValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":860848520,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider","Attributes":[{"Name":"@bind-UpperValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-UpperValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"UpperValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"UpperValue","Components.Bind.ChangeAttribute":"UpperValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":-1903183937,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider","Attributes":[{"Name":"@bind-LowerValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-LowerValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"LowerValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"LowerValue","Components.Bind.ChangeAttribute":"LowerValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2105493487,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider","Attributes":[{"Name":"@bind-UpperValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-UpperValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"UpperValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"UpperValue","Components.Bind.ChangeAttribute":"UpperValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-208567357,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.FlexGrid","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'ItemsSource' property and a change event delegate to the 'ItemsSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FlexGrid","Attributes":[{"Name":"@bind-ItemsSource","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ItemsSource","TypeName":"System.EventHandler","Documentation":"Binds the provided expression to the 'ItemsSource' property and a change event delegate to the 'ItemsSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ItemsSource"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ItemsSource","Components.Bind.ChangeAttribute":"ItemsSourceChanged","Common.TypeName":"C1.Blazor.Grid.FlexGrid"}},{"HashCode":-1121294310,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.FlexGrid","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'ItemsSource' property and a change event delegate to the 'ItemsSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.FlexGrid","Attributes":[{"Name":"@bind-ItemsSource","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ItemsSource","TypeName":"System.EventHandler","Documentation":"Binds the provided expression to the 'ItemsSource' property and a change event delegate to the 'ItemsSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ItemsSource"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"ItemsSource","Components.Bind.ChangeAttribute":"ItemsSourceChanged","Common.TypeName":"C1.Blazor.Grid.FlexGrid","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2002980732,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.EditorCheckBox","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditorCheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Grid.EditorCheckBox"}},{"HashCode":547193824,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.EditorCheckBox","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.EditorCheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Grid.EditorCheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-294085344,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.GridGroupRowCell","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'IsCollapsed' property and a change event delegate to the 'IsCollapsedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GridGroupRowCell","Attributes":[{"Name":"@bind-IsCollapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsCollapsed' property and a change event delegate to the 'IsCollapsedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsCollapsed"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsCollapsed","Components.Bind.ChangeAttribute":"IsCollapsedChanged","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell"}},{"HashCode":-1148250091,"Kind":"Components.Bind","Name":"C1.Blazor.Grid.GridGroupRowCell","AssemblyName":"C1.Blazor.Grid","Documentation":"Binds the provided expression to the 'IsCollapsed' property and a change event delegate to the 'IsCollapsedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Grid.GridGroupRowCell","Attributes":[{"Name":"@bind-IsCollapsed","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsCollapsed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsCollapsed' property and a change event delegate to the 'IsCollapsedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsCollapsed"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsCollapsed","Components.Bind.ChangeAttribute":"IsCollapsedChanged","Common.TypeName":"C1.Blazor.Grid.GridGroupRowCell","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-831168770,"Kind":"Components.Bind","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ToggleButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Core.C1ToggleButton"}},{"HashCode":-1427995675,"Kind":"Components.Bind","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ToggleButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Core.C1ToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":93715084,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref"}},{"HashCode":-115576540,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key"}}],"CSharpLanguageVersion":900},"RootNamespace":"FlexGridExplorer","Documents":[{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\Unbound.razor","TargetPath":"Pages\\Unbound.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CellFreezing.razor","TargetPath":"Pages\\CellFreezing.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CustomAppearance.razor","TargetPath":"Pages\\CustomAppearance.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\PopupEditing.razor","TargetPath":"Pages\\PopupEditing.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CellMerging.razor","TargetPath":"Pages\\CellMerging.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\_Imports.razor","TargetPath":"Pages\\_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\FullTextFilter.razor","TargetPath":"Pages\\FullTextFilter.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\FilterRow.razor","TargetPath":"Pages\\FilterRow.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CustomSortIcon.razor","TargetPath":"Pages\\CustomSortIcon.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\ColumnDefinitions.razor","TargetPath":"Pages\\ColumnDefinitions.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CustomColumns.razor","TargetPath":"Pages\\CustomColumns.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\NewRow.razor","TargetPath":"Pages\\NewRow.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\VirtualMode.razor","TargetPath":"Pages\\VirtualMode.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\Grouping.razor","TargetPath":"Pages\\Grouping.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\Export.razor","TargetPath":"Pages\\Export.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\ExcelExport.razor","TargetPath":"Pages\\ExcelExport.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\ResponsiveSizing.razor","TargetPath":"Pages\\ResponsiveSizing.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\RowDetails.razor","TargetPath":"Pages\\RowDetails.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\CheckList.razor","TargetPath":"Pages\\CheckList.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\EditConfirmation.razor","TargetPath":"Pages\\EditConfirmation.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\ConditionalFormatting.razor","TargetPath":"Pages\\ConditionalFormatting.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\OnDemand.razor","TargetPath":"Pages\\OnDemand.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\SelectionModes.razor","TargetPath":"Pages\\SelectionModes.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\Grid\\FlexGridExplorer.Server\\Pages\\Paging.razor","TargetPath":"Pages\\Paging.razor","FileKind":"component"}],"SerializationFormat":"0.3"}