//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlazorExplorer.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ComboBoxRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ComboBoxRes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlazorExplorer.Localization.ComboBoxRes", typeof(ComboBoxRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize the style and appearance of the C1ComboBox including the border and drop-down button..
        /// </summary>
        public static string CustomAppearanceDescription {
            get {
                return ResourceManager.GetString("CustomAppearanceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize the style and appearance of the C1ComboBox including the border and drop-down button..
        /// </summary>
        public static string CustomAppearanceSummary {
            get {
                return ResourceManager.GetString("CustomAppearanceSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Appearance.
        /// </summary>
        public static string CustomAppearanceTitle {
            get {
                return ResourceManager.GetString("CustomAppearanceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create complex comboboxes with custom item templates. This demo shows how to display images and text within each item of the C1ComboBox..
        /// </summary>
        public static string CustomItemDescription {
            get {
                return ResourceManager.GetString("CustomItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customizes the item by showing the country flag together with the name.
        /// </summary>
        public static string CustomItemSummary {
            get {
                return ResourceManager.GetString("CustomItemSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Item.
        /// </summary>
        public static string CustomItemTitle {
            get {
                return ResourceManager.GetString("CustomItemTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1ComboBox can be used as an editable text input control with auto-suggest that matches the typed text to the list of items..
        /// </summary>
        public static string EditableDescription {
            get {
                return ResourceManager.GetString("EditableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows an editable combo-box which will auto-complete the text according to the typed text and the list of items.
        /// </summary>
        public static string EditableSummary {
            get {
                return ResourceManager.GetString("EditableSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editable.
        /// </summary>
        public static string EditableTitle {
            get {
                return ResourceManager.GetString("EditableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designed especially for mobile apps, the drop-down part of C1ComboBox can be configured to take over the whole screen when displayed. This mode is very practical for mobile devices as it uses more space to display the list and works seamlessly with soft keyboards..
        /// </summary>
        public static string FullScreenDescription {
            get {
                return ResourceManager.GetString("FullScreenDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows a combo-box whose list takes all the screen when it is opened..
        /// </summary>
        public static string FullScreenSummary {
            get {
                return ResourceManager.GetString("FullScreenSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Screen.
        /// </summary>
        public static string FullScreenTitle {
            get {
                return ResourceManager.GetString("FullScreenTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsEditable.
        /// </summary>
        public static string IsEditableLabel {
            get {
                return ResourceManager.GetString("IsEditableLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The C1ComboBox control for Blazor provides item selection from a drop-down editor. It supports item template customization, text input capability, auto-suggestion as the user types, and a full-screen mode that is designed for mobile web apps..
        /// </summary>
        public static string OverviewDescription {
            get {
                return ResourceManager.GetString("OverviewDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The C1ComboBox control for Blazor provides item selection from a drop-down editor..
        /// </summary>
        public static string OverviewSummary {
            get {
                return ResourceManager.GetString("OverviewSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string OverviewTitle {
            get {
                return ResourceManager.GetString("OverviewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a country.
        /// </summary>
        public static string SelectCountryPlaceholder {
            get {
                return ResourceManager.GetString("SelectCountryPlaceholder", resourceCulture);
            }
        }
    }
}
