//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlazorExplorer.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PopupRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PopupRes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlazorExplorer.Localization.PopupRes", typeof(PopupRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string BtnClose {
            get {
                return ResourceManager.GetString("BtnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel text: .
        /// </summary>
        public static string CancelText {
            get {
                return ResourceManager.GetString("CancelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt; &lt;strong&gt;Dialog result: &lt;/strong&gt; The C1Window control can be used to implement static methods for showing &lt;i&gt;Confirm&lt;/i&gt; and &lt;i&gt;Prompt&lt;/i&gt; dialogs. This sample lets you configure the Popup content and modify the style also.&lt;/p&gt;
        ///        &lt;p&gt;
        ///            &lt;strong&gt;IsDialog:&lt;/strong&gt; Gets or sets to determine whether C1Window is dialog result. &lt;br /&gt;
        ///            &lt;strong&gt;DialogType:&lt;/strong&gt; Gets or sets dialog result type (Confirm or Prompt). &lt;br /&gt;
        ///            &lt;strong&gt;IsOk:&lt;/strong&gt; Get Ok button is clic [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DialogResultDescription {
            get {
                return ResourceManager.GetString("DialogResultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The C1Window control can be used to implement static methods for showing Confirm and Prompt dialogs..
        /// </summary>
        public static string DialogResultSummary {
            get {
                return ResourceManager.GetString("DialogResultSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog result.
        /// </summary>
        public static string DialogResultTitle {
            get {
                return ResourceManager.GetString("DialogResultTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is okay:.
        /// </summary>
        public static string IsOkay {
            get {
                return ResourceManager.GetString("IsOkay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok text:.
        /// </summary>
        public static string OkText {
            get {
                return ResourceManager.GetString("OkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open C1Window.
        /// </summary>
        public static string OpenPopupBtn {
            get {
                return ResourceManager.GetString("OpenPopupBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;C1Window takes focus from the page or app and require people to interact with them. Unlike a dialog box (Dialog), a modal should be used for hosting lengthy content, such as privacy statements or license agreements, or for asking people to perform complex or multiple actions, such as changing settings.&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;PopupHeader:&lt;/strong&gt; Define popup header.&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;PopupContent:&lt;/strong&gt; Define popup content.&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;PopupFooter:&lt;/strong&gt; Define popup footer.&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;IsDraggabl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OverviewDescription {
            get {
                return ResourceManager.GetString("OverviewDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1Window allows user to add dialogs to your site for lightboxes, user notifications, or completely custom content..
        /// </summary>
        public static string OverviewSummary {
            get {
                return ResourceManager.GetString("OverviewSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string OverviewTitle {
            get {
                return ResourceManager.GetString("OverviewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;This sample demonstrates how the C1Window control works when the C1Window has and owner element.&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;ShowTrigger: &lt;/strong&gt;Specifies actions that trigger showing C1Window controls. Value is None, Hover Owner or Click Owner (default value)&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;HideTrigger: &lt;/strong&gt;Specifies actions that trigger hiding C1Window controls&lt;/p&gt;
        ///&lt;p&gt;&lt;strong&gt;PopupPosition: &lt;/strong&gt;Represents the position of a popup element with respect to a reference element.&lt;/p&gt;.
        /// </summary>
        public static string PopupOwnerDescription {
            get {
                return ResourceManager.GetString("PopupOwnerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates how the C1Window control works when the C1Window has and owner element..
        /// </summary>
        public static string PopupOwnerSummary {
            get {
                return ResourceManager.GetString("PopupOwnerSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1Window with Owner Elements.
        /// </summary>
        public static string PopupOwnerTitle {
            get {
                return ResourceManager.GetString("PopupOwnerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type:.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your action:.
        /// </summary>
        public static string YourAction {
            get {
                return ResourceManager.GetString("YourAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your input:.
        /// </summary>
        public static string YourInput {
            get {
                return ResourceManager.GetString("YourInput", resourceCulture);
            }
        }
    }
}
