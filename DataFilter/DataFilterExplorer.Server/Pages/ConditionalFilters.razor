@page "/ConditionalFilters"
@using Localization
@using C1.Blazor.DataFilter
@using C1.Blazor.Grid
@using C1.Blazor.Accordion

<h3>@DataFilterRes.ConditionalFiltersTitle</h3>
<p>@DataFilterRes.ConditionalFiltersDescription</p>

<div style="margin: 4px;">
    <label>
        <C1.Blazor.Input.C1CheckBox @bind-IsChecked="_autoApply" IsThreeState="false" /> @DataFilterRes.AutoApplyFilter
    </label>
    <button @onclick="OnApplyFilterClicked" style="margin: 4px; padding: 2px 8px; height: 36px;">
        <svg style="height: 16px; width: 16px; fill: currentColor;" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" viewBox="0 0 402.577 402.577"><path d="M400.858 11.427C397.617 4.006 392.008.295 384.004.291H18.564c-7.993 0-13.61 3.715-16.846 11.136-3.234 7.801-1.903 14.467 3.999 19.985l140.757 140.753V310.92c0 4.955 1.809 9.232 5.424 12.854l73.085 73.083c3.429 3.614 7.71 5.428 12.851 5.428 2.282 0 4.66-.479 7.135-1.43 7.426-3.238 11.14-8.851 11.14-16.845V172.166L396.861 31.413c5.904-5.518 7.232-12.182 3.997-19.986z"/></svg>
    </button>
</div>
<br />

<section class="sampleDataFilterSection">
    <div class="filtersSection">
        <C1DataFilter @ref="_dataFilter" AutoGenerateFilters="false" AutoApply="_autoApply.GetValueOrDefault()" ItemsSource="@_data" Style="@("max-height: inherit")" ExpandMode="@ExpandMode.One">
            <DataFilters>
                <TextFilter PropertyName="Model" />
                <DateFilter PropertyName="DateProductionLine" HeaderText="Date Production Line" />
                <NumericFilter PropertyName="Price" Increment="1000" Format="F2" />
                <FullTextFilter PropertyName="Brand" HeaderText="Brand" />
            </DataFilters>
        </C1DataFilter>
    </div>
    <div class="dataSection">
        <FlexGrid AutoGeneratingColumn="OnAutoGeneratingColumn" ItemsSource="@_data" HeadersVisibility="GridHeadersVisibility.All" Style="@("max-height: inherit")">

        </FlexGrid>
    </div>
</section>

@code{
    bool? _autoApply = true;
    C1DataFilter _dataFilter;
    C1.DataCollection.C1DataCollection<Car> _data;

    protected override void OnInitialized()
    {
        var carsTable = DataProvider.GetCarTable();
        _data = new C1.DataCollection.C1DataCollection<Car>(DataProvider.GetCarDataCollection(carsTable));
    }

    void OnAutoGeneratingColumn(object sender, GridAutoGeneratingColumnEventArgs args)
    {
        if (args.Property.Name == nameof(Car.Picture))
        {
            args.Column.CellTemplate = target => builder =>
            {
                builder.OpenElement(0, "img");
                builder.AddAttribute(1, "style", "max-height: 35px");
                builder.AddAttribute(2, "src", $"data:image/bmp;base64, {((Lazy<string>)target).Value}");
                builder.CloseElement();
            };
        }
    }

    void OnApplyFilterClicked()
    {
        _ = _dataFilter.ApplyFilterAsync();
    }
}