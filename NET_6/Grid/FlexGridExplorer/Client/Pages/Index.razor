@page "/"
@using Resources
@using C1.Blazor.Grid
@using System.Collections.ObjectModel;

<h1>@AppResources.GettingStartedTitle</h1>
<p>@AppResources.GettingStartedDescription</p>

<FlexGrid AutoGeneratingColumn="@OnAutoGeneratingColumn" ItemsSource="@customers" Style="@("max-height:50vh")" />

@code {
    ObservableCollection<Customer> customers;

    protected override void OnInitialized()
    {
        customers = Customer.GetCustomerList(100);
    }

    private void OnAutoGeneratingColumn(object sender, GridAutoGeneratingColumnEventArgs e)
    {
        if (e.Property.Name == "Country" || e.Property.Name == "Name" || e.Property.Name == "OrderAverage")
        {
            //Avoids generating these columns
            e.Cancel = true;
        }
        else if (e.Property.Name == "Id")
        {
            e.Column.IsReadOnly = true;
        }
        else if (e.Property.Name == "CountryId")
        {
            //Sets the DataMap to the country column so a picker is used to select the country.
            e.Column.Header = "Country";
            e.Column.HorizontalAlignment = C1.Blazor.Core.C1HorizontalAlignment.Left;
            e.Column.DataMap = new GridDataMap() { ItemsSource = Customer.GetCountries(), DisplayMemberPath = "Value", SelectedValuePath = "Key" };
        }
        else if (e.Property.Name == "OrderTotal" || e.Property.Name == "OrderAverage")
        {
            //Sets currency format the these columns
            e.Column.Format = "C";
        }
        //else if (e.Property.Name == "LastOrderDate")
        //{
        //    //Replaces the column so that the editor is a date-picker instead of an entry.
        //    e.Column = new GridDateTimeColumn(e.Property);
        //}
        else if (e.Property.Name == "Address")
        {
            e.Column.WordWrap = true;
        }
    }
}
