{"SerializedFilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\obj\\Debug\\net6.0\\project.razor.json","FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\TreeViewExplorer.Server.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"6.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":144143039,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.NavMenu","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.NavMenu"}},{"HashCode":-1864019496,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.NavMenu","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Shared.NavMenu"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.NavMenu","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":855496545,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.SurveyPrompt","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.SurveyPrompt"}},{"HashCode":1664156545,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.SurveyPrompt","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.PropertyName":"Title"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.SurveyPrompt","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1372148370,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.MainLayout","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.MainLayout"}},{"HashCode":1978213726,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Shared.MainLayout","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Body","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Shared.MainLayout","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1168097912,"Kind":"Components.ChildContent","Name":"TreeViewExplorer.Server.Shared.MainLayout.Body","AssemblyName":"TreeViewExplorer.Server","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"TreeViewExplorer.Server.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1410919462,"Kind":"Components.ChildContent","Name":"TreeViewExplorer.Server.Shared.MainLayout.Body","AssemblyName":"TreeViewExplorer.Server","Documentation":"\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"TreeViewExplorer.Server.Shared.MainLayout"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"TreeViewExplorer.Server.Shared.MainLayout.Body","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":71703138,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.DragAndDropBetweenTrees","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DragAndDropBetweenTrees"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDropBetweenTrees"}},{"HashCode":38167916,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.DragAndDropBetweenTrees","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDropBetweenTrees"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDropBetweenTrees","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1777601961,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.ShowCheckboxes","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ShowCheckboxes"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.ShowCheckboxes"}},{"HashCode":1388367511,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.ShowCheckboxes","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Nodes.ShowCheckboxes"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.ShowCheckboxes","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1137548529,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.Removing","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Removing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.Removing"}},{"HashCode":1650489840,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.Removing","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Nodes.Removing"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.Removing","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1863872870,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.DragAndDrop","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DragAndDrop"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDrop"}},{"HashCode":-1927920623,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.DragAndDrop","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDrop"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.DragAndDrop","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2034698298,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.Adding","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Adding"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.Adding"}},{"HashCode":-786694055,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Nodes.Adding","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Nodes.Adding"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Nodes.Adding","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-745362770,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Index","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Index"}},{"HashCode":824651081,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Index","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Index"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Index","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1435574451,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.CleanAccordion","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CleanAccordion"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.CleanAccordion"}},{"HashCode":-872776183,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.CleanAccordion","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Styling.CleanAccordion"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.CleanAccordion","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-171688071,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.Overview","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Overview"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.Overview"}},{"HashCode":15605374,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.Overview","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Styling.Overview"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.Overview","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-490862803,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.AccordionTrees","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccordionTrees"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.AccordionTrees"}},{"HashCode":-724104344,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.AccordionTrees","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Styling.AccordionTrees"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.AccordionTrees","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":200437537,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.NodeBorders","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NodeBorders"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.NodeBorders"}},{"HashCode":1379753404,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Styling.NodeBorders","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Styling.NodeBorders"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Styling.NodeBorders","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":625875346,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Behavior","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Behavior"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Behavior"}},{"HashCode":335159443,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Behavior","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Behavior"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Behavior","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1228845225,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.RightToLeft","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RightToLeft"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.RightToLeft"}},{"HashCode":-1335295984,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.RightToLeft","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.RightToLeft"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.RightToLeft","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1269234432,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.IconTemplate","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IconTemplate"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.IconTemplate"}},{"HashCode":-299459848,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.IconTemplate","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.IconTemplate"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.IconTemplate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1825792803,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.ItemTemplate","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.ItemTemplate"}},{"HashCode":-171456750,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.ItemTemplate","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.ItemTemplate"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.ItemTemplate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":539913268,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Unbound","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Unbound"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Unbound"}},{"HashCode":911733405,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Unbound","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Unbound"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Unbound","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1478828722,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Searching","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Searching"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Searching"}},{"HashCode":1523841380,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.Pages.Searching","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.Pages.Searching"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.Pages.Searching","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":660293478,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.App","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.App"}},{"HashCode":-240473457,"Kind":"Components.Component","Name":"TreeViewExplorer.Server.App","AssemblyName":"TreeViewExplorer.Server","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewExplorer.Server.App"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"TreeViewExplorer.Server.App","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-939804279,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm"}},{"HashCode":707216181,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"OnSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnValidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnInvalidSubmit","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-408043690,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1704917829,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1420558410,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":-1650507943,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":704578197,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True"}},{"HashCode":1915447523,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":328771901,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile"}},{"HashCode":-177543775,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":935534115,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True"}},{"HashCode":31892784,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":532414311,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True"}},{"HashCode":-1975191459,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1239896056,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True"}},{"HashCode":1248723515,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-5688087,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-647344956,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-978423627,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True"}},{"HashCode":1777691999,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1130157769,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-662414230,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-400466067,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":-624435841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1526645893,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":1278722841,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DisplayName"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":49922468,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True"}},{"HashCode":1343924420,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For","Components.GenericTyped":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1355226858,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}},{"HashCode":-1802879813,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1281797782,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}},{"HashCode":-1640124240,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Selector"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1462781705,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink"}},{"HashCode":1481322604,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Match"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-386477367,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":720148254,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1120317366,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent"}},{"HashCode":-764133860,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1567531839,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1208072112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1593959033,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}},{"HashCode":-34130624,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1765254677,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle"}},{"HashCode":1265492983,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":206629272,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":2057572728,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1524847289,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}},{"HashCode":-1295008868,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ErrorContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1991737880,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1669670115,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1533554184,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-941639418,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2100606566,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True"}},{"HashCode":-349097859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemContent","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Placeholder","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ItemsProvider","Components.DelegateSignature":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1013193740,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1003924632,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":153524432,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1557674147,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1302905679,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":945222623,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1871990747,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}},{"HashCode":1269318827,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1371580223,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-942676909,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":254469406,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":933735593,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1561818538,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}},{"HashCode":338228678,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotAuthorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorized","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Authorizing","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1411478404,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-624178974,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2050760822,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1941271305,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1142720739,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1301732458,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-209287632,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":650326898,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":514566703,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}},{"HashCode":-273549252,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-766584723,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":292603590,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1570376398,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}},{"HashCode":-1317134907,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":100075476,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True"}},{"HashCode":2058523097,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Common.PropertyName":"TValue","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"\n            <summary>\n            The value to be provided.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"IsFixed"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":909141050,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-700243708,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1980174088,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent"}},{"HashCode":-1268363715,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":47192083,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView"}},{"HashCode":171641290,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Layout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1879651112,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1403492109,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1044827811,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView"}},{"HashCode":-1365215869,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":646472149,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router"}},{"HashCode":-701282789,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"NotFound","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Found","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Navigating","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"OnNavigateAsync","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-806325141,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1984749400,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":377068835,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-879377312,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1895447004,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-2136429748,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":59345125,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewItem","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewItem\">\r\n    <summary>\r\n    The Tree-view DataSource object class\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.IsExpanded\">\r\n    <summary>\r\n    gets or set the node IsExpanded property\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.IsSelected\">\r\n    <summary>\r\n    gets or sets the node IsSelected property\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewItem"}},{"HashCode":707275587,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewItem","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewItem\">\r\n    <summary>\r\n    The Tree-view DataSource object class\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.TreeView.TreeViewItem"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.IsExpanded\">\r\n    <summary>\r\n    gets or set the node IsExpanded property\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.IsSelected\">\r\n    <summary>\r\n    gets or sets the node IsSelected property\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItem.Header\">\r\n    <summary>\r\n    gets or set the node header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewItem","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":270711731,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItem.ChildContent","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"TreeViewItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-919306710,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItem.ChildContent","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.TreeView.TreeViewItem"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItem.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1346737248,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.C1TreeView","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.C1TreeView\">\r\n    <summary>\r\n    Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnItemClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnItemClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnEnter\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnEnter","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEscape","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnEscape\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnEscape","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDragStart\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDragStart","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnDragOver","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDragOver\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDragOver","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnDrop","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDrop\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDrop","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ItemsSource\">\r\n    <summary>\r\n    Gets or sets tree-view  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"IsRTL","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.IsRTL\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsRTL"}},{"Kind":"Components.Component","Name":"AllowDragDrop","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.AllowDragDrop\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this <see cref=\"T:C1.Blazor.TreeView.C1TreeView\" /> allows drag-and-drop operations.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragDrop"}},{"Kind":"Components.Component","Name":"KeyboardNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.KeyboardNavigation\">\r\n    <summary>\r\n    Enables or disables the Keyboard navigation functionality of the C1TreeView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyboardNavigation"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection behavior for a C1TreeView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SelectionModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Core.C1SelectionMode>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectionModeChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.TreeView.C1TreeView.SelectionMode\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionModeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandOnClick\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the node is expanded when the users clicks in the C1TreeViewItem header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandOnClick"}},{"Kind":"Components.Component","Name":"CollapseOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapseOnClick\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the node is collapsed when the users clicks in the C1TreeViewItem header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseOnClick"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.TreeView.TreeViewExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandMode\">\r\n    <summary>\r\n    Gets or sets a value indicating the allowed number of expanded C1TreeViewItems.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ShowLines","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ShowLines\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the connecting lines are visible.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowLines"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ShowCheckboxes\">\r\n    <summary>\r\n    Gets or sets the treeview item has show checkbox or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"WholeWidthSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.WholeWidthSelection\">\r\n    <summary>\r\n    Gets or sets whether the selection item should take the whole width of the control or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WholeWidthSelection"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item expanded icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expanded/collapsed icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconStyle"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item collapsed icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DragSourceStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.DragSourceStyle\">\r\n    <summary>\r\n    Gets of sets the style of the drag source item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DragSourceStyle"}},{"Kind":"Components.Component","Name":"DragTargetStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.DragTargetStyle\">\r\n    <summary>\r\n    Gets of sets the style of the drag target item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DragTargetStyle"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBackground"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"IsSelectedPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"IsSelectedPath"}},{"Kind":"Components.Component","Name":"IsExpandedPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"IsExpandedPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.C1TreeView"}},{"HashCode":-417357144,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.C1TreeView","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.C1TreeView\">\r\n    <summary>\r\n    Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.TreeView.C1TreeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"OnItemClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnItemClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnItemClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEnter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnEnter\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnEnter","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnEscape","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnEscape\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnEscape","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnItemSelected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Metadata":{"Common.PropertyName":"OnItemSelected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnDragStart","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDragStart\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDragStart","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnDragOver","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDragOver\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDragOver","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"OnDrop","TypeName":"System.EventHandler<C1.Blazor.TreeView.EventArgs.TreeViewDragDropEventArgs>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.OnDrop\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnDrop","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ItemsSource\">\r\n    <summary>\r\n    Gets or sets tree-view  data source.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"Converter","TypeName":"C1.Blazor.Core.IValueConverter","Metadata":{"Common.PropertyName":"Converter"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"SelectedItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectedItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemStyle"}},{"Kind":"Components.Component","Name":"IsRTL","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.IsRTL\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsRTL"}},{"Kind":"Components.Component","Name":"AllowDragDrop","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.AllowDragDrop\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this <see cref=\"T:C1.Blazor.TreeView.C1TreeView\" /> allows drag-and-drop operations.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AllowDragDrop"}},{"Kind":"Components.Component","Name":"KeyboardNavigation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.KeyboardNavigation\">\r\n    <summary>\r\n    Enables or disables the Keyboard navigation functionality of the C1TreeView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyboardNavigation"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectionMode\">\r\n    <summary>\r\n    Gets or sets the selection behavior for a C1TreeView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SelectionModeChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Core.C1SelectionMode>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectionModeChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.TreeView.C1TreeView.SelectionMode\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionModeChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandOnClick\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the node is expanded when the users clicks in the C1TreeViewItem header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandOnClick"}},{"Kind":"Components.Component","Name":"CollapseOnClick","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapseOnClick\">\r\n    <summary>\r\n    Gets or sets a value indicating whether the node is collapsed when the users clicks in the C1TreeViewItem header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapseOnClick"}},{"Kind":"Components.Component","Name":"ExpandMode","TypeName":"C1.Blazor.TreeView.TreeViewExpandMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandMode\">\r\n    <summary>\r\n    Gets or sets a value indicating the allowed number of expanded C1TreeViewItems.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandMode"}},{"Kind":"Components.Component","Name":"ShowLines","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ShowLines\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the connecting lines are visible.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowLines"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ShowCheckboxes\">\r\n    <summary>\r\n    Gets or sets the treeview item has show checkbox or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"WholeWidthSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.WholeWidthSelection\">\r\n    <summary>\r\n    Gets or sets whether the selection item should take the whole width of the control or not.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"WholeWidthSelection"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item expanded icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expanded/collapsed icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconStyle"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item collapsed icon.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DragSourceStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.DragSourceStyle\">\r\n    <summary>\r\n    Gets of sets the style of the drag source item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DragSourceStyle"}},{"Kind":"Components.Component","Name":"DragTargetStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.DragTargetStyle\">\r\n    <summary>\r\n    Gets of sets the style of the drag target item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DragTargetStyle"}},{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"SelectedBackground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.SelectedBackground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedBackground"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildItemsPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"ChildItemsPaths"}},{"Kind":"Components.Component","Name":"DisplayMemberPaths","TypeName":"System.String","Metadata":{"Common.PropertyName":"DisplayMemberPaths"}},{"Kind":"Components.Component","Name":"IsSelectedPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"IsSelectedPath"}},{"Kind":"Components.Component","Name":"IsExpandedPath","TypeName":"System.String","Metadata":{"Common.PropertyName":"IsExpandedPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.C1TreeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1927775333,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ChildContent","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1TreeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1926730031,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ChildContent","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.TreeView.C1TreeView"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1156752182,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item expanded icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1941263596,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item expanded icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"C1.Blazor.TreeView.C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":192311985,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item collapsed icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":993567522,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate\">\r\n    <summary>\r\n    Content template for tree item collapsed icon.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"C1.Blazor.TreeView.C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":368200858,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ItemTemplate","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1789385458,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.C1TreeView.ItemTemplate","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.TreeView.C1TreeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.C1TreeView.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-343138226,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewItemView","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewItemView\">\r\n    <summary>\r\n    Implements a selectable item in a C1TreeView control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.TreeView.TreeViewItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnToggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnToggle\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnToggle","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnMouseDown\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate\">\r\n    <summary>\r\n    get or set ExpandedIconTemplate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand/collapse button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconStyle"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate\">\r\n    <summary>\r\n    gets or sets CollapsedIconTemplate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.Header\">\r\n    <summary>\r\n    gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"SelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.SelectedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedStyle"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.IsSelected\">\r\n    <summary>\r\n    Gets or sets whether a <see cref=\"T:C1.Blazor.TreeView.TreeViewItemView\" /> control is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.IsExpanded\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a <see cref=\"T:C1.Blazor.TreeView.TreeViewItemView\" /> is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView"}},{"HashCode":-1655552799,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewItemView","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewItemView\">\r\n    <summary>\r\n    Implements a selectable item in a C1TreeView control.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.TreeView.TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"C1.Blazor.TreeView.TreeViewItem","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnToggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnToggle\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnToggle","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.OnMouseDown\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate\">\r\n    <summary>\r\n    get or set ExpandedIconTemplate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ExpandedIconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconStyle\">\r\n    <summary>\r\n    Gets or sets the style applied to the expand/collapse button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedIconStyle"}},{"Kind":"Components.Component","Name":"CollapsedIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate\">\r\n    <summary>\r\n    gets or sets CollapsedIconTemplate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.Header\">\r\n    <summary>\r\n    gets or sets the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"SelectedStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.SelectedStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selected items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedStyle"}},{"Kind":"Components.Component","Name":"IsSelected","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.IsSelected\">\r\n    <summary>\r\n    Gets or sets whether a <see cref=\"T:C1.Blazor.TreeView.TreeViewItemView\" /> control is selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsSelected"}},{"Kind":"Components.Component","Name":"IsExpanded","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.IsExpanded\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a <see cref=\"T:C1.Blazor.TreeView.TreeViewItemView\" /> is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsExpanded"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1858594138,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate\">\r\n    <summary>\r\n    get or set ExpandedIconTemplate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1506750952,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate\">\r\n    <summary>\r\n    get or set ExpandedIconTemplate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedIconTemplate","ParentTag":"C1.Blazor.TreeView.TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.ExpandedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-43567671,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate\">\r\n    <summary>\r\n    gets or sets CollapsedIconTemplate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1791838495,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate\">\r\n    <summary>\r\n    gets or sets CollapsedIconTemplate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedIconTemplate","ParentTag":"C1.Blazor.TreeView.TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.CollapsedIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-622502346,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.ItemTemplate","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-620468921,"Kind":"Components.ChildContent","Name":"C1.Blazor.TreeView.TreeViewItemView.ItemTemplate","AssemblyName":"C1.Blazor.TreeView","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.TreeView.TreeViewItemView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.TreeView.TreeViewItemView.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":962459529,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewVirtualStackPanel","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewVirtualStackPanel\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TreeViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewVirtualStackPanel.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewVirtualStackPanel.OnMouseDown\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewVirtualStackPanel"}},{"HashCode":864175792,"Kind":"Components.Component","Name":"C1.Blazor.TreeView.TreeViewVirtualStackPanel","AssemblyName":"C1.Blazor.TreeView","Documentation":"<member name=\"T:C1.Blazor.TreeView.TreeViewVirtualStackPanel\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.TreeView.TreeViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnClick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewVirtualStackPanel.OnClick\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnClick","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.TreeView.TreeViewItem>","Documentation":"<member name=\"P:C1.Blazor.TreeView.TreeViewVirtualStackPanel.OnMouseDown\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically for binding feature.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.TreeView.TreeViewVirtualStackPanel","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-10973757,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Button","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Button\">\r\n    <summary>\r\n    Button with a built-in style matching the suite.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Button"}},{"HashCode":355552006,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Button","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Button\">\r\n    <summary>\r\n    Button with a built-in style matching the suite.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1Button"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"MouseOverBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.MouseOverBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the control when it has the mouse over.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MouseOverBrush"}},{"Kind":"Components.Component","Name":"PressedBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.PressedBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint a button when it is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PressedBrush"}},{"Kind":"Components.Component","Name":"FocusBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.FocusBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to highlight the focused control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FocusBrush"}},{"Kind":"Components.Component","Name":"BorderAlignment","TypeName":"C1.Blazor.Core.BorderAlignment","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1Button.BorderAlignment\">\r\n    <summary>\r\n    Gets or sets the alignment of the border relative to the control bounds.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderAlignment"}},{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Button","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-31568517,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1Button.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1414823959,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1Button.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1Button"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1Button.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":211719803,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PathIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PathIcon\">\r\n    <summary>\r\n    Represent an icon created from a path string.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1PathIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1PathIcon.Data\">\r\n    <summary>\r\n    Gets or sets the svg string describing the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PathIcon"}},{"HashCode":-358077699,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PathIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PathIcon\">\r\n    <summary>\r\n    Represent an icon created from a path string.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1PathIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Data","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1PathIcon.Data\">\r\n    <summary>\r\n    Gets or sets the svg string describing the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PathIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1305970224,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PolygonIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PolygonIcon\">\r\n    <summary>\r\n    Represents an icon created from a vector definition.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1PolygonIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Points","TypeName":"C1.Blazor.Core.C1Point[]","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.Points\">\r\n    <summary>\r\n    Gets the points that describe the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Points"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.IsClosed\">\r\n    <summary>\r\n    Gets whether the last point will connect with the first one.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PolygonIcon"}},{"HashCode":-229726843,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1PolygonIcon","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1PolygonIcon\">\r\n    <summary>\r\n    Represents an icon created from a vector definition.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1PolygonIcon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Points","TypeName":"C1.Blazor.Core.C1Point[]","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.Points\">\r\n    <summary>\r\n    Gets the points that describe the shape.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Points"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1PolygonIcon.IsClosed\">\r\n    <summary>\r\n    Gets whether the last point will connect with the first one.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"ViewBox","TypeName":"C1.Blazor.Core.C1Rect","Documentation":"<member name=\"P:C1.Blazor.Core.C1VectorIcon.ViewBox\">\r\n    <summary>\r\n    Gets or sets the rectangle (in the path coordinates) which will determine what part will be drawn.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewBox"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1PolygonIcon","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":48144533,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ItemsControl"}},{"HashCode":-1507949729,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ItemsControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-126633986,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-526941958,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1ItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1194955399,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1534772381,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Core.C1ItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1257438813,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items which have header and content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl"}},{"HashCode":-589302847,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedItemsControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedItemsControl\">\r\n    <summary>\r\n    Represents a control that can be used to present a collection of items which have header and content.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HeaderTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HeaderTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items that will be shown.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name or path of the property that is displayed for each data item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-614001080,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1505762932,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate\">\r\n    <summary>\r\n    Gets or sets the data template used to display the header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeaderTemplate","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'HeaderTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.HeaderTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1120281881,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1HeaderedItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1183029381,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the accordion.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1907885287,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-155679229,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ItemsControl.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template applied to all the items of the list.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Core.C1HeaderedItemsControl"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HeaderedItemsControl.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1862899229,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedContentControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedContentControl\">\r\n    <summary>\r\n    Provides the base implementation for all controls that contain single content and have a header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HeaderedContentControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedContentControl"}},{"HashCode":-969634505,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HeaderedContentControl","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HeaderedContentControl\">\r\n    <summary>\r\n    Provides the base implementation for all controls that contain single content and have a header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HeaderedContentControl"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HeaderedContentControl","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1975526379,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ScrollViewer","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ScrollViewer\">\r\n    <summary>\r\n    Represents a scrollable area that can contain other visible elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ScrollViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ViewportChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerViewChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ViewportChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the viewport changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewportChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerSizeChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.SizeChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the size changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SizeChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyDown","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyDown\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyDown","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyUp","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyUp\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyUp","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"System.Action<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.Input\">\r\n    <summary>\r\n    Gets or sets the callback that is called when input is received.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Input","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopLeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer"}},{"HashCode":633125199,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ScrollViewer","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ScrollViewer\">\r\n    <summary>\r\n    Represents a scrollable area that can contain other visible elements.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ScrollViewer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ViewportChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerViewChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ViewportChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the viewport changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ViewportChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<C1.Blazor.Core.C1ScrollViewerSizeChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.SizeChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the size changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SizeChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyDown","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyDown\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyDown","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"KeyUp","TypeName":"System.Action<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.KeyUp\">\r\n    <summary>\r\n    Gets or sets the callback that is called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyUp","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Input","TypeName":"System.Action<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.Input\">\r\n    <summary>\r\n    Gets or sets the callback that is called when input is received.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Input","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopLeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopLeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"TopHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TopHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"LeftHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LeftHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"HorizontalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.HorizontalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HorizontalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"VerticalScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.VerticalScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"VerticalScrollBarVisibility"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-732957624,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-815421735,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.ChildContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the scroll viewer.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1527831705,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopLeftHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1560613991,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopLeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top, left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopLeftHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopLeftHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2104335164,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-777093031,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.TopHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.TopHeader\">\r\n    <summary>\r\n    Gets or sets the content of the top header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TopHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.TopHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":966828538,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LeftHeader","ParentTag":"C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1122074000,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ScrollViewer.LeftHeader\">\r\n    <summary>\r\n    Gets or sets the content of the left header.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LeftHeader","ParentTag":"C1.Blazor.Core.C1ScrollViewer"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ScrollViewer.LeftHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1623867292,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ToggleButton\">\r\n    <summary>\r\n    Represents a button that a user can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ToggleButton"}},{"HashCode":-446196162,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ToggleButton\">\r\n    <summary>\r\n    Represents a button that a user can expand and collapse.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ToggleButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsCheckedChanged\">\r\n    <summary>\r\n    Gets or sets the callback called then it is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.OnMouseDown\">\r\n    <summary>\r\n    Gets or sets the callback called when mouse-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Core.C1ToggleButton\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsFocusable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IsFocusable\">\r\n    <summary>\r\n    Gets or sets whether the button can receive the focus.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFocusable"}},{"Kind":"Components.Component","Name":"CheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedText\">\r\n    <summary>\r\n    Gets or sets the text show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedText"}},{"Kind":"Components.Component","Name":"UncheckedText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedText\">\r\n    <summary>\r\n    Gets or sets the text shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedText"}},{"Kind":"Components.Component","Name":"CheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedImageSource"}},{"Kind":"Components.Component","Name":"UncheckedImageSource","TypeName":"System.Uri","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedImageSource\">\r\n    <summary>\r\n    Gets or sets the image shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedImageSource"}},{"Kind":"Components.Component","Name":"CheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"UncheckedContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UncheckedContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IndeterminateContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IndeterminateContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1286125037,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.CheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":17591161,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.CheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.CheckedContent\">\r\n    <summary>\r\n    Gets or sets the content show when the button is checked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CheckedContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.CheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":252385043,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1523975092,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.UncheckedContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is unchecked.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"UncheckedContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.UncheckedContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1900651819,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1637226871,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"P:C1.Blazor.Core.C1ToggleButton.IndeterminateContent\">\r\n    <summary>\r\n    Gets or sets the content shown when the button is indeterminate.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IndeterminateContent","ParentTag":"C1.Blazor.Core.C1ToggleButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1ToggleButton.IndeterminateContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1602108598,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ActivityIndicator","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ActivityIndicator\">\r\n    <summary>\r\n    A visual control used to indicate that something is ongoing.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ActivityIndicator"}},{"HashCode":-103055564,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1ActivityIndicator","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1ActivityIndicator\">\r\n    <summary>\r\n    A visual control used to indicate that something is ongoing.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ActivityIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1ActivityIndicator","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1334633758,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Border","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Border\">\r\n    <summary>\r\n    Basic control used to draw a border around another view.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Border"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Border"}},{"HashCode":13646310,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1Border","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1Border\">\r\n    <summary>\r\n    Basic control used to draw a border around another view.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1Border"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1Border","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1690084905,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HtmlButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HtmlButton\">\r\n    <summary>\r\n    Thin component wrapper over html button.\r\n    </summary>\r\n    <remarks>This components prevents event bubbling.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1HtmlButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HtmlButton"}},{"HashCode":-646473430,"Kind":"Components.Component","Name":"C1.Blazor.Core.C1HtmlButton","AssemblyName":"C1.Blazor.Core","Documentation":"<member name=\"T:C1.Blazor.Core.C1HtmlButton\">\r\n    <summary>\r\n    Thin component wrapper over html button.\r\n    </summary>\r\n    <remarks>This components prevents event bubbling.</remarks>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1HtmlButton"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Disabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Core.C1HtmlButton.Disabled\">\r\n    <summary>\r\n    The disabled attribute for the button.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Disabled"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Click","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Metadata":{"Common.PropertyName":"Click","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Core.C1HtmlButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1312716350,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HtmlButton.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1HtmlButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HtmlButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":550042534,"Kind":"Components.ChildContent","Name":"C1.Blazor.Core.C1HtmlButton.ChildContent","AssemblyName":"C1.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Core.C1HtmlButton"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Core.C1HtmlButton.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1348861414,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Tooltip","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Tooltip\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Target\">\r\n    <summary>\r\n    Gets or sets the id of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"TargetCss","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.TargetCss\">\r\n    <summary>\r\n    Gets or sets the Css class name of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetCss"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Position\">\r\n    <summary>\r\n    Gets or sets the PopupPosition where the tooltip should be displayed with respect to the owner element.\r\n    Default value is PopupPosition.Above\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Gap\">\r\n    <summary>\r\n    Gets or sets the distance between the tooltip and the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"HideDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.HideDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HideDelay"}},{"Kind":"Components.Component","Name":"ShowDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.ShowDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowDelay"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Tooltip"}},{"HashCode":758285475,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Tooltip","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Tooltip\">\r\n    <summary>\r\n    \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Tooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Target\">\r\n    <summary>\r\n    Gets or sets the id of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"TargetCss","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.TargetCss\">\r\n    <summary>\r\n    Gets or sets the Css class name of target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TargetCss"}},{"Kind":"Components.Component","Name":"Content","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Content","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Position\">\r\n    <summary>\r\n    Gets or sets the PopupPosition where the tooltip should be displayed with respect to the owner element.\r\n    Default value is PopupPosition.Above\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Gap\">\r\n    <summary>\r\n    Gets or sets the distance between the tooltip and the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"HideDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.HideDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HideDelay"}},{"Kind":"Components.Component","Name":"ShowDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.ShowDelay\">\r\n    <summary>\r\n    Gets or sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowDelay"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Tooltip","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1481067342,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Tooltip.Content","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"C1Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Tooltip.Content","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":171521345,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Tooltip.Content","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Tooltip.Content\">\r\n    <summary>\r\n    Gets or Sets the content of tooltip.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Content","ParentTag":"C1.Blazor.Input.C1Tooltip"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Tooltip.Content","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1373280922,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1NumericBox`1\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit numeric\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNumeric","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNumeric for the C1.Blazor.Input.C1NumericBox<TNumeric> component.","Metadata":{"Common.PropertyName":"TNumeric","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.Input.C1NumericBoxEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically if user is binding Value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Id\">\r\n    <summary>\r\n    Get or set the ID\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TNumeric","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Value\">\r\n    <summary>\r\n    Get or set value of numeric box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Placeholder\">\r\n    <summary>\r\n    Get or set placeholder\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Format\">\r\n    <summary>\r\n    Standard numeric format strings\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Step\">\r\n    <summary>\r\n    The value that the numeric box should take to add or dec current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Max\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Min\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsReadOnly\">\r\n    <summary>\r\n    Enable readonly mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsEnabled\">\r\n    <summary>\r\n    Enable disable mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"FinishEditingKeys","TypeName":"C1.Blazor.Input.NumericBoxFinishEditingKey[]","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.FinishEditingKeys\">\r\n    <summary>\r\n    Hit one of keys to finish editing\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishEditingKeys"}},{"Kind":"Components.Component","Name":"ButtonDisplayMode","TypeName":"C1.Blazor.Input.ButtonDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ButtonDisplayMode\">\r\n    <summary>\r\n    Set ButtonDisplayMode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonDisplayMode"}},{"Kind":"Components.Component","Name":"IncrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IncrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DecrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DecrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.GenericTyped":"True"}},{"HashCode":-580954874,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1NumericBox`1\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit numeric\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TNumeric","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TNumeric for the C1.Blazor.Input.C1NumericBox<TNumeric> component.","Metadata":{"Common.PropertyName":"TNumeric","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"OnValueChanged","TypeName":"System.EventHandler<C1.Blazor.Input.C1NumericBoxEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.OnValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the value is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ValueChanged\">\r\n    <summary>\r\n    This Callback will gets and sets by Blazor framework automatically if user is binding Value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Id\">\r\n    <summary>\r\n    Get or set the ID\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TNumeric","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Value\">\r\n    <summary>\r\n    Get or set value of numeric box\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Placeholder\">\r\n    <summary>\r\n    Get or set placeholder\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Format\">\r\n    <summary>\r\n    Standard numeric format strings\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Step","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Step\">\r\n    <summary>\r\n    The value that the numeric box should take to add or dec current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Max","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Max\">\r\n    <summary>\r\n    Maximum of value \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"Min","TypeName":"System.Double?","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.Min\">\r\n    <summary>\r\n    Minimum of value\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsReadOnly\">\r\n    <summary>\r\n    Enable readonly mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IsEnabled\">\r\n    <summary>\r\n    Enable disable mode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"FinishEditingKeys","TypeName":"C1.Blazor.Input.NumericBoxFinishEditingKey[]","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.FinishEditingKeys\">\r\n    <summary>\r\n    Hit one of keys to finish editing\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishEditingKeys"}},{"Kind":"Components.Component","Name":"ButtonDisplayMode","TypeName":"C1.Blazor.Input.ButtonDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.ButtonDisplayMode\">\r\n    <summary>\r\n    Set ButtonDisplayMode\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonDisplayMode"}},{"Kind":"Components.Component","Name":"IncrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IncrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"DecrementIconTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DecrementIconTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":906614304,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IncrementIconTemplate","ParentTag":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'IncrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-5204449,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.IncrementIconTemplate\">\r\n    <summary>\r\n    Increment IconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"IncrementIconTemplate","ParentTag":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'IncrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.IncrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1811092622,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DecrementIconTemplate","ParentTag":"C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DecrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1259569089,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1NumericBox`1.DecrementIconTemplate\">\r\n    <summary>\r\n    Decrement IconTemplate button content\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DecrementIconTemplate","ParentTag":"C1.Blazor.Input.C1NumericBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'DecrementIconTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>.DecrementIconTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":626380547,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoComplete`1\">\r\n    <summary>\r\n    The auto-complete control is an editable input control that shows completion suggestions automatically while the user is typing. The list of suggestions is displayed in a drop down menu from which the user.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1AutoComplete<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the matched text highlight style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.MinLength\">\r\n    <summary>\r\n     Gets or sets the minimum input length to trigger auto-complete suggestions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"System.EventHandler<C1.Blazor.Input.AutoCompleteFilteringEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.Filtering\">\r\n    <summary>\r\n    Event raised when the control is about to apply a filter to the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filtering","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.GenericTyped":"True"}},{"HashCode":-123727344,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoComplete`1\">\r\n    <summary>\r\n    The auto-complete control is an editable input control that shows completion suggestions automatically while the user is typing. The list of suggestions is displayed in a drop down menu from which the user.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1AutoComplete<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.HighlightStyle\">\r\n    <summary>\r\n    Gets or sets the matched text highlight style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"MinLength","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.MinLength\">\r\n    <summary>\r\n     Gets or sets the minimum input length to trigger auto-complete suggestions.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MinLength"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"Filtering","TypeName":"System.EventHandler<C1.Blazor.Input.AutoCompleteFilteringEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoComplete`1.Filtering\">\r\n    <summary>\r\n    Event raised when the control is about to apply a filter to the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Filtering","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-949778522,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1406583137,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":918285099,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":505530459,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":719631967,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1705961452,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1617710139,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1050770075,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1334841754,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1193955343,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":789549753,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1723677690,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1AutoComplete"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1640510783,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Slider\">\r\n    <summary>\r\n    Slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Value\">\r\n    <summary>\r\n    Gets or sets the current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1Slider.Value\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"ThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ThumbStyle\">\r\n    <summary>\r\n    Thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.SliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how the thumb will be moved when a pointer click will be performed outside the area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Slider"}},{"HashCode":1378347289,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1Slider\">\r\n    <summary>\r\n    Slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Slider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.Value\">\r\n    <summary>\r\n    Gets or sets the current value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1Slider.Value\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"ThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ThumbStyle\">\r\n    <summary>\r\n    Thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.SliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Slider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how the thumb will be moved when a pointer click will be performed outside the area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-705165495,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Popup","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Popup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the popup open in full screen \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Position\">\r\n    <summary>\r\n     Gets or sets the position display the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before close the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsPosUpdated","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPosUpdated\">\r\n    <summary>\r\n    Gets or sets to whether popup updates the position when its parent change position by scrolling\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPosUpdated"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Popup"}},{"HashCode":1810836135,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Popup","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Popup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the popup open in full screen \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Position\">\r\n    <summary>\r\n     Gets or sets the position display the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before close the Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsPosUpdated","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPosUpdated\">\r\n    <summary>\r\n    Gets or sets to whether popup updates the position when its parent change position by scrolling\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPosUpdated"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Popup","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1949653912,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Popup.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1Popup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Popup.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1514010993,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Popup.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Popup.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1.Blazor.Input.C1Popup"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Popup.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1850737269,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1DropDown\">\r\n    <summary>\r\n    C1DropDown provides a generic drop-down control with a Header property that determines what the user sees when the drop-down part of the control is closed, and a Content property that determines what goes into the drop-down section.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1DropDown"}},{"HashCode":1998593167,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1DropDown\">\r\n    <summary>\r\n    C1DropDown provides a generic drop-down control with a Header property that determines what the user sees when the drop-down part of the control is closed, and a Content property that determines what goes into the drop-down section.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpen\">\r\n    <summary>\r\n    Gets or sets whether the drop-down is open.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1DropDown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1406036540,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":976057068,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":717679522,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-615101916,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-36778868,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1419756921,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1DropDown"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1730857670,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-116840079,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-632451506,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":859382321,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1DropDown"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1DropDown.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":696778218,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Window","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Window"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PopupHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupFooter","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupFooter","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the window display in full screen .\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsDialog","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDialog\">\r\n    <summary>\r\n    Gets or sets to determine whether Popup is dialog result.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDialog"}},{"Kind":"Components.Component","Name":"DialogType","TypeName":"C1.Blazor.Input.DialogType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.DialogType\">\r\n    <summary>\r\n    Gets or sets dialog result type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DialogType"}},{"Kind":"Components.Component","Name":"OkText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OkText\">\r\n    <summary>\r\n    Gets or sets OkText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OkText"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CancelText\">\r\n    <summary>\r\n    Gets or sets CancelText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CancelText"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Position\">\r\n    <summary>\r\n     Gets or sets the position that display the window.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Window"}},{"HashCode":-511518101,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1Window","AssemblyName":"C1.Blazor.Input","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Window"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"PopupHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"PopupFooter","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PopupFooter","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDarkOverlay","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDarkOverlay\">\r\n    <summary>\r\n    Gets or sets whether the overlay is dark themed. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDarkOverlay"}},{"Kind":"Components.Component","Name":"IsModeless","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsModeless\">\r\n    <summary>\r\n    Gets or sets whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n    if true: there will be no overlay (isDarkOverlay is ignored)\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsModeless"}},{"Kind":"Components.Component","Name":"IsFullScreen","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsFullScreen\">\r\n    <summary>\r\n    Gets or sets to make the window display in full screen .\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsFullScreen"}},{"Kind":"Components.Component","Name":"IsDraggable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDraggable\">\r\n    <summary>\r\n    Gets or sets to make the popup draggable \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDraggable"}},{"Kind":"Components.Component","Name":"IsResizable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsResizable\">\r\n    <summary>\r\n    Gets or sets to make the popup is resizable\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsResizable"}},{"Kind":"Components.Component","Name":"IsDialog","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsDialog\">\r\n    <summary>\r\n    Gets or sets to determine whether Popup is dialog result.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDialog"}},{"Kind":"Components.Component","Name":"DialogType","TypeName":"C1.Blazor.Input.DialogType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.DialogType\">\r\n    <summary>\r\n    Gets or sets dialog result type.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DialogType"}},{"Kind":"Components.Component","Name":"OkText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OkText\">\r\n    <summary>\r\n    Gets or sets OkText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OkText"}},{"Kind":"Components.Component","Name":"CancelText","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CancelText\">\r\n    <summary>\r\n    Gets or sets CancelText.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CancelText"}},{"Kind":"Components.Component","Name":"Target","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Target\">\r\n    <summary>\r\n     Gets or sets the element id that owns this Popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Target"}},{"Kind":"Components.Component","Name":"CloseTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseTrigger"}},{"Kind":"Components.Component","Name":"OpenTrigger","TypeName":"C1.Blazor.Input.PopupTrigger","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenTrigger\">\r\n    <summary>\r\n     Gets or sets actions that trigger opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenTrigger"}},{"Kind":"Components.Component","Name":"Position","TypeName":"C1.Blazor.Input.PopupPosition","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Position\">\r\n    <summary>\r\n     Gets or sets the position that display the window.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"OpenDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.OpenDelay\">\r\n    <summary>\r\n     Gets or sets delay time before opening Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OpenDelay"}},{"Kind":"Components.Component","Name":"CloseDelay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.CloseDelay\">\r\n    <summary>\r\n     Gets or sets delay time before closing Popup controls.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CloseDelay"}},{"Kind":"Components.Component","Name":"Gap","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.Gap\">\r\n    <summary>\r\n     Gets or sets space between owner and popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Gap"}},{"Kind":"Components.Component","Name":"IsPopupOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.IsPopupOpenChanged\">\r\n    <summary>\r\n    This callback is called when the popup is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsPopupOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1Window","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":131970388,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupHeader","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1723465614,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupHeader\">\r\n    <summary>\r\n    Gets or sets the header of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupHeader","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1606373285,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":493415417,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupContent\">\r\n    <summary>\r\n    Gets or sets the content of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupContent","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2090409841,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupFooter","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupFooter","ParentTag":"C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupFooter","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":421872923,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1Window.PopupFooter","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1Window.PopupFooter\">\r\n    <summary>\r\n    Gets or sets the footer of the popup.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PopupFooter","ParentTag":"C1.Blazor.Input.C1Window"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1Window.PopupFooter","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1630481787,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1CheckBox\">\r\n    <summary>\r\n    Represents a control that a user can select and clear.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1CheckBox"}},{"HashCode":53272971,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1CheckBox\">\r\n    <summary>\r\n    Represents a control that a user can select and clear.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1CheckBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsCheckedChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Metadata":{"Common.PropertyName":"IsCheckedChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMouseDown","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Metadata":{"Common.PropertyName":"OnMouseDown","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Checked","TypeName":"System.EventHandler","Metadata":{"Common.PropertyName":"Checked","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"IsChecked","TypeName":"System.Boolean?","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsChecked\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is checked.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsChecked"}},{"Kind":"Components.Component","Name":"IsThreeState","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsThreeState\">\r\n    <summary>\r\n    Gets or sets whether <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> supports indeterminate state.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsThreeState"}},{"Kind":"Components.Component","Name":"IsReadOnly","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1CheckBox.IsReadOnly\">\r\n    <summary>\r\n    Gets or sets whether the <see cref=\"T:C1.Blazor.Input.C1CheckBox\" /> is read only.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsReadOnly"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1753226209,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1MaskedTextBox\">\r\n    <summary>\r\n    The C1MaskedTextEditor control allows you to validate and format user input as it is entered, preventing users from entering invalid data.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\">\r\n    <summary>\r\n    Gets or sets the input mask.\r\n    </summary>\r\n    <remarks>\r\n    <para>The mask consists of a string that determines what class of character is acceptable\r\n    at each input position.</para>\r\n    <para>Valid mask characters are:</para>\r\n    <para>\r\n    <b>0</b>    Digit (0-9)</para>\r\n    <para>\r\n    <b>9</b>    Digit or space</para>\r\n    <para>\r\n    <b>#</b>    Digit, space, or sign (+/-)</para>\r\n    <para>\r\n    <b>L</b>    Letter</para>\r\n    <para>\r\n    <b>?</b>    Letter or space</para>\r\n    <para>\r\n    <b>A</b>    Letter or digit</para>\r\n    <para>\r\n    <b>a</b>    Letter, digit, or space</para>\r\n    <para>\r\n    <b>&amp;</b>    Any character</para>\r\n    <para>\r\n    <b>.</b>    Localized decimal symbol</para>\r\n    <para>\r\n    <b>,</b>    Localized thousand separator</para>\r\n    <para>\r\n    <b>:</b>    Localized time separator</para>\r\n    <para>\r\n    <b>/</b>    Localized date separator</para>\r\n    <para>Other characters are treated as literals. They are displayed in the control but cannot\r\n    be edited.</para>\r\n    <para>For example, the mask \"000-0000\" causes the control to accept only digits at every\r\n    position except the third, which always contains a dash.</para>\r\n    \r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.PromptChar\">\r\n    <summary>\r\n     Gets or set the PromptChar value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"MaskFormat","TypeName":"C1.Blazor.Input.MaskFormat","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\">\r\n    <summary>\r\n     Gets or set the MaskFormat value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskFormat"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"C1.Blazor.Input.MaskDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.DisplayMode\">\r\n    <summary>\r\n    Gets or set the DisplayMode value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"TabBehavior","TypeName":"C1.Blazor.Input.TabBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.TabBehavior\">\r\n    <summary>\r\n    Define the tab behavior if set.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabBehavior"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnMaskInputRejected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskInputRejectedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskInputRejected\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskInputRejected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMaskFormatChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskFormatChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskFormatChanged\">\r\n    <summary>\r\n    /// Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\"/> changes.\r\n    Gets or sets the callback called when the MaskFormat is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskFormatChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MaskedTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskedTextChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\">\r\n    <summary>\r\n    Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/> changes in the text box.\r\n    </summary>\r\n    <remarks>\r\n    Just after the Text property has beed changed via user input or code, \r\n    the <see cref=\"T:C1.Blazor.Input.C1MaskedTextBox\"/> updates the text again in order to make it consistent with\r\n    the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>. As a result, the TextChanged event can be triggered twice on each user\r\n    input. In contrast to this, the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\"/> is triggered only when Text is\r\n    updated with a value that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskedTextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox"}},{"HashCode":2094614926,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1MaskedTextBox\">\r\n    <summary>\r\n    The C1MaskedTextEditor control allows you to validate and format user input as it is entered, preventing users from entering invalid data.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1MaskedTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mask","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\">\r\n    <summary>\r\n    Gets or sets the input mask.\r\n    </summary>\r\n    <remarks>\r\n    <para>The mask consists of a string that determines what class of character is acceptable\r\n    at each input position.</para>\r\n    <para>Valid mask characters are:</para>\r\n    <para>\r\n    <b>0</b>    Digit (0-9)</para>\r\n    <para>\r\n    <b>9</b>    Digit or space</para>\r\n    <para>\r\n    <b>#</b>    Digit, space, or sign (+/-)</para>\r\n    <para>\r\n    <b>L</b>    Letter</para>\r\n    <para>\r\n    <b>?</b>    Letter or space</para>\r\n    <para>\r\n    <b>A</b>    Letter or digit</para>\r\n    <para>\r\n    <b>a</b>    Letter, digit, or space</para>\r\n    <para>\r\n    <b>&amp;</b>    Any character</para>\r\n    <para>\r\n    <b>.</b>    Localized decimal symbol</para>\r\n    <para>\r\n    <b>,</b>    Localized thousand separator</para>\r\n    <para>\r\n    <b>:</b>    Localized time separator</para>\r\n    <para>\r\n    <b>/</b>    Localized date separator</para>\r\n    <para>Other characters are treated as literals. They are displayed in the control but cannot\r\n    be edited.</para>\r\n    <para>For example, the mask \"000-0000\" causes the control to accept only digits at every\r\n    position except the third, which always contains a dash.</para>\r\n    \r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Mask"}},{"Kind":"Components.Component","Name":"PromptChar","TypeName":"System.Char","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.PromptChar\">\r\n    <summary>\r\n     Gets or set the PromptChar value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"PromptChar"}},{"Kind":"Components.Component","Name":"MaskFormat","TypeName":"C1.Blazor.Input.MaskFormat","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\">\r\n    <summary>\r\n     Gets or set the MaskFormat value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskFormat"}},{"Kind":"Components.Component","Name":"DisplayMode","TypeName":"C1.Blazor.Input.MaskDisplayMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.DisplayMode\">\r\n    <summary>\r\n    Gets or set the DisplayMode value.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMode"}},{"Kind":"Components.Component","Name":"TabBehavior","TypeName":"C1.Blazor.Input.TabBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.TabBehavior\">\r\n    <summary>\r\n    Define the tab behavior if set.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabBehavior"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnMaskInputRejected","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskInputRejectedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskInputRejected\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskInputRejected","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"OnMaskFormatChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskFormatChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.OnMaskFormatChanged\">\r\n    <summary>\r\n    /// Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskFormat\"/> changes.\r\n    Gets or sets the callback called when the MaskFormat is changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"OnMaskFormatChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"MaskedTextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Input.MaskedTextChangedEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\">\r\n    <summary>\r\n    Occurs when consistent content that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/> changes in the text box.\r\n    </summary>\r\n    <remarks>\r\n    Just after the Text property has beed changed via user input or code, \r\n    the <see cref=\"T:C1.Blazor.Input.C1MaskedTextBox\"/> updates the text again in order to make it consistent with\r\n    the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>. As a result, the TextChanged event can be triggered twice on each user\r\n    input. In contrast to this, the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.MaskedTextChanged\"/> is triggered only when Text is\r\n    updated with a value that conforms to the <see cref=\"P:C1.Blazor.Input.C1MaskedTextBox.Mask\"/>.\r\n    </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaskedTextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":134992919,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1TextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1TextBox"}},{"HashCode":1777936291,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1TextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1TextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1TextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-112993901,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoCompleteTextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoCompleteTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.AutoComplete\">\r\n    <summary>\r\n    Gets or sets the callback used to provide the auto-completion text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the text changed event.\r\n    </summary>\r\n    <remarks>\r\n        Setting this delay to something bigger than zero allows skipping unnecessary events when the text box is used in filtering scenarios.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox"}},{"HashCode":1992482375,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1AutoCompleteTextBox\">\r\n    <summary>\r\n    Represents a control that can be used to display and edit plain text,\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoCompleteTextBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.EventHandler<C1.Blazor.Input.TextBoxAutoCompleteEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.AutoComplete\">\r\n    <summary>\r\n    Gets or sets the callback used to provide the auto-completion text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1AutoCompleteTextBox.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the text changed event.\r\n    </summary>\r\n    <remarks>\r\n        Setting this delay to something bigger than zero allows skipping unnecessary events when the text box is used in filtering scenarios.\r\n        </remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"StopOnClickPropagation","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.StopOnClickPropagation\">\r\n    <summary>\r\n    Stop the onclick event from outside\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"StopOnClickPropagation"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Text\">\r\n    <summary>\r\n    Gets or sets the text displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"Type","TypeName":"C1.Blazor.Input.TextBoxType","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Type\">\r\n    <summary>\r\n    Gets or sets the type of text to be entered.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Step","TypeName":"C1.Blazor.Input.TextBoxStep?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Step\">\r\n    <summary>\r\n    Gets or sets the kind of step accepted by the text box when the <see cref=\"P:C1.Blazor.Input.C1TextBox.Type\"/> is numeric.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Step"}},{"Kind":"Components.Component","Name":"Min","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Min\">\r\n    <summary>\r\n    Gets or sets the min value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Min"}},{"Kind":"Components.Component","Name":"Max","TypeName":"C1.Blazor.Input.TextBoxMinMax?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.Max\">\r\n    <summary>\r\n    Gets or sets the max value accepted in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Max"}},{"Kind":"Components.Component","Name":"MaxLength","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.MaxLength\">\r\n    <summary>\r\n    Gets or sets the maximum number of characters allowed in the text box.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"MaxLength"}},{"Kind":"Components.Component","Name":"BrowserAutocomplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.BrowserAutocomplete\">\r\n    <summary>\r\n    Gets or sets whether the browser will show suggestions based on previous entered texts.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BrowserAutocomplete"}},{"Kind":"Components.Component","Name":"TextChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.TextChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changed.\r\n    </summary>\r\n    <remarks>This event is used by Blazor to allow setting @bind-Text</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TextChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"FinishedTextChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.FinishedTextChange\">\r\n    <summary>\r\n    Gets or sets the callback called when the text changing is finished.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FinishedTextChange","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"KeyPressed","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"<member name=\"P:C1.Blazor.Input.C1TextBox.KeyPressed\">\r\n    <summary>\r\n    Gets or sets the callback called when a key is pressed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"KeyPressed","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1280782958,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1RangeSlider\">\r\n    <summary>\r\n    Range slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"LowerValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"UpperValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"RangeTrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.RangeTrackStyle\">\r\n    <summary>\r\n    Range track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RangeTrackStyle"}},{"Kind":"Components.Component","Name":"LowerThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerThumbStyle\">\r\n    <summary>\r\n    Lower thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerThumbStyle"}},{"Kind":"Components.Component","Name":"UpperThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperThumbStyle\">\r\n    <summary>\r\n    Upper thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.RangeSliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how thumbs will be moved when a pointer click will be performed outside the selected area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ValueChanged\">\r\n    <summary>\r\n    Fires when any of the properties: <see cref=\"!:LowerValue\" /> or <see cref=\"!:UpperValue\" /> changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":1634253890,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1RangeSlider\">\r\n    <summary>\r\n    Range slider.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsEnabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.IsEnabled\">\r\n    <summary>\r\n    Gets or sets a value indicating whether this element is enabled in the user interface (UI).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEnabled"}},{"Kind":"Components.Component","Name":"Orientation","TypeName":"C1.Blazor.Input.SliderOrientation","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Orientation\">\r\n    <summary>\r\n    Orientation of the slider.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Orientation"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Minimum\">\r\n    <summary>\r\n    The lowest value in the range of permitted values. This value must be less than or equal to the value of the <see cref=\"!:Maximum\" /> parameter. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.Maximum\">\r\n    <summary>\r\n    The greatest value in the range of permitted values. This value must be greater than or equal to the value of the <see cref=\"!:Minimum\" /> parameter.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"LowerValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\">\r\n    <summary>\r\n    Gets or sets the current lower magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValue"}},{"Kind":"Components.Component","Name":"LowerValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.LowerValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"UpperValue","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\">\r\n    <summary>\r\n    Gets or sets the current upper magnitude of the range control. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValue"}},{"Kind":"Components.Component","Name":"UpperValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperValueChanged\">\r\n    <summary>\r\n    Gets or sets the callback called when the <see cref=\"P:C1.Blazor.Input.C1RangeSlider.UpperValue\"/> property has changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperValueChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"TrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.TrackStyle\">\r\n    <summary>\r\n    Track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TrackStyle"}},{"Kind":"Components.Component","Name":"RangeTrackStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.RangeTrackStyle\">\r\n    <summary>\r\n    Range track style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"RangeTrackStyle"}},{"Kind":"Components.Component","Name":"LowerThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.LowerThumbStyle\">\r\n    <summary>\r\n    Lower thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LowerThumbStyle"}},{"Kind":"Components.Component","Name":"UpperThumbStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.UpperThumbStyle\">\r\n    <summary>\r\n    Upper thumb style.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"UpperThumbStyle"}},{"Kind":"Components.Component","Name":"ScrollBehavior","TypeName":"C1.Blazor.Input.RangeSliderScrollBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ScrollBehavior\">\r\n    <summary>\r\n    Gets or sets how thumbs will be moved when a pointer click will be performed outside the selected area.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBehavior"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"System.EventHandler","Documentation":"<member name=\"P:C1.Blazor.Input.C1RangeSlider.ValueChanged\">\r\n    <summary>\r\n    Fires when any of the properties: <see cref=\"!:LowerValue\" /> or <see cref=\"!:UpperValue\" /> changes.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChanged","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"SmallValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.SmallValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a keyboard./>.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SmallValueChange"}},{"Kind":"Components.Component","Name":"ValueChange","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.ValueChange\">\r\n    <summary>\r\n    Gets or sets a value to be added to or subtracted from the thumb's value using a pointer outside of the thumb.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueChange"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Delay\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, buttons (at the left of the thumb and at the right of the thumb) wait when they are pressed before they start repeating the click action.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.SliderBase.Interval\">\r\n    <summary>\r\n    Gets or sets the time, in milliseconds, between repetitions of the click action, as soon as repeating starts (for buttons at the left of the thumb and at the right of the thumb).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1026596140,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1ComboBox`1\">\r\n    <summary>\r\n    C1ComboBox is an extension of DropDown that contains an editable textbox in the header and a listview in the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1ComboBox<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.GenericTyped":"True"}},{"HashCode":-1723414264,"Kind":"Components.Component","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"T:C1.Blazor.Input.C1ComboBox`1\">\r\n    <summary>\r\n    C1ComboBox is an extension of DropDown that contains an editable textbox in the header and a listview in the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.Input.C1ComboBox<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"IsDropDownOpen","TypeName":"System.Boolean","Metadata":{"Common.PropertyName":"IsDropDownOpen"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the source collection that contains the items to select from.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the name of the property to use as the visual representation of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"ValueMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ValueMemberPath\">\r\n    <summary>\r\n    Gets or sets the path that is used to get the value from the item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ValueMemberPath"}},{"Kind":"Components.Component","Name":"SelectedIndex","TypeName":"System.Int32","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndex\">\r\n    <summary>\r\n     Gets or sets the index of the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndex"}},{"Kind":"Components.Component","Name":"SelectedItem","TypeName":"T","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItem\">\r\n    <summary>\r\n    Gets or sets the current selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItem","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Text\">\r\n    <summary>\r\n    Gets or sets the text of the control.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"AutoComplete","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.AutoComplete\">\r\n    <summary>\r\n    Gets or sets whether the control should try to automatically complete entries using the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AutoComplete"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Placeholder\">\r\n    <summary>\r\n    Gets or sets the placeholder displayed when there is no entered text.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"EditorStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.EditorStyle\">\r\n    <summary>\r\n    Gets or sets the style of the editor used to edit the selected item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditorStyle"}},{"Kind":"Components.Component","Name":"ListStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListStyle\">\r\n    <summary>\r\n    Gets or sets the style of the list of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListStyle"}},{"Kind":"Components.Component","Name":"ListItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ListItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items of the list.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ListItemStyle"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.TimeSpan","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.Delay\">\r\n    <summary>\r\n     Gets or sets the delay that occurs between the key strokes and the auto-complete.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"SelectedIndexChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedIndexChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected index changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedIndexChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"SelectedItemChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.SelectedItemChanged\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the selected item changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectedItemChanged","Components.EventCallback":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ChildContent","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"Header","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Header","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"EditableHeader","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"EditableHeader","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsEditable","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsEditable\">\r\n    <summary>\r\n    Gets or sets whether it is editable.\r\n    </summary>\r\n    <remarks>When this property is <code>true</code>, the <see cref=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\"/> will be used. If the drop-down is full-screen, the editor will be shown in the popup, otherwise it will be shown inline and will replace <see cref=\"P:C1.Blazor.Input.C1DropDown.Header\"/>.</remarks>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsEditable"}},{"Kind":"Components.Component","Name":"ButtonStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ButtonStyle\">\r\n    <summary>\r\n    Gets or sets the style of the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ButtonStyle"}},{"Kind":"Components.Component","Name":"IconStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IconStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the icon that is placed inside the button used to toggle the drop-down.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IconStyle"}},{"Kind":"Components.Component","Name":"DropDownStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownStyle\">\r\n    <summary>\r\n    Gets or sets the sytle of the drop-down popup.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownStyle"}},{"Kind":"Components.Component","Name":"DropDownBehavior","TypeName":"C1.Blazor.Input.DropDownBehavior","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownBehavior\">\r\n    <summary>\r\n    Gets or sets the drop-down behavior. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownBehavior"}},{"Kind":"Components.Component","Name":"DropDownMode","TypeName":"C1.Blazor.Input.DropDownMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.DropDownMode\">\r\n    <summary>\r\n    Gets or sets the mode that the DropDown uses to display the DropDownView.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DropDownMode"}},{"Kind":"Components.Component","Name":"ShowButton","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ShowButton\">\r\n    <summary>\r\n    Gets or sets a value that indicates whether the control should display a dropdown button. \r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowButton"}},{"Kind":"Components.Component","Name":"ExpandedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ExpandedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"CollapsedButtonIcon","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.Blazor.Core.C1Style>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CollapsedButtonIcon","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"IsDropDownOpenChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.IsDropDownOpenChanged\">\r\n    <summary>\r\n    This callback is called when the drop-down is opened or closed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"IsDropDownOpenChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1294627171,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1086728569,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1ComboBox`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the item template.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1781859126,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":803118767,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ChildContent\">\r\n    <summary>\r\n    Gets or sets the content of the drop-down.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ChildContent","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1351875850,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.Header","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-766256634,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.Header","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.Header\">\r\n    <summary>\r\n    Gets or sets the header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Header","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.Header","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":780369416,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":901830814,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.EditableHeader\">\r\n    <summary>\r\n    Gets or sets the editable header. \r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditableHeader","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.EditableHeader","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":459284671,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1552567651,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.ExpandedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is expanded.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ExpandedButtonIcon","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ExpandedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.ExpandedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-657379509,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-437745328,"Kind":"Components.ChildContent","Name":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","AssemblyName":"C1.Blazor.Input","Documentation":"<member name=\"P:C1.Blazor.Input.C1DropDown.CollapsedButtonIcon\">\r\n    <summary>\r\n    Gets or sets the icon used when the drop-down is collapsed.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CollapsedButtonIcon","ParentTag":"C1.Blazor.Input.C1ComboBox"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'CollapsedButtonIcon' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>.CollapsedButtonIcon","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1759589817,"Kind":"Components.Component","Name":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.ListViewVirtualStackPanel`1\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"TItem\">The type of the item.</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ListViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.ListView.ListViewVirtualStackPanel<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","Components.GenericTyped":"True"}},{"HashCode":1760956166,"Kind":"Components.Component","Name":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.ListViewVirtualStackPanel`1\">\r\n    <summary>\r\n    Component used to render a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"TItem\">The type of the item.</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.ListViewVirtualStackPanel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the C1.Blazor.ListView.ListViewVirtualStackPanel<TItem> component.","Metadata":{"Common.PropertyName":"TItem","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.ListViewVirtualStackPanel<TItem>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-795459621,"Kind":"Components.Component","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.C1ListView`1\">\r\n    <summary>\r\n    The ListView controls display a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"T\">The type of the items</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.ListView.C1ListView<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"LoadingItem","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewItemStyleEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.LoadingItem\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the items are being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LoadingItem","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the property name or path of the item that will be used to extract the text that will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.DataCollection.IDataCollectionGroup<System.Object, System.Object>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SeparatorWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SeparatorWidth\">\r\n    <summary>\r\n    Gets or sets the width of the line separating items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorWidth"}},{"Kind":"Components.Component","Name":"ScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets visibility of the vertical scrollbar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemBackgroundColor"}},{"Kind":"Components.Component","Name":"ItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTextColor"}},{"Kind":"Components.Component","Name":"AlternatingItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemBackgroundColor"}},{"Kind":"Components.Component","Name":"AlternatingItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemTextColor"}},{"Kind":"Components.Component","Name":"GroupBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupBackgroundColor"}},{"Kind":"Components.Component","Name":"GroupTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the group items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTextColor"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"C1.Blazor.Core.C1OrderedSet","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.Selection\">\r\n    <summary>\r\n    Gets or sets the ListView selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ShowCheckboxes\">\r\n    <summary>\r\n    Sets the name of the property used to control checkboxes placed next to each item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemDoubleTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.GenericTyped":"True"}},{"HashCode":-1105105169,"Kind":"Components.Component","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"T:C1.Blazor.ListView.C1ListView`1\">\r\n    <summary>\r\n    The ListView controls display a virtualized list of items.\r\n    </summary>\r\n    <typeparam name=\"T\">The type of the items</typeparam>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"T","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter T for the C1.Blazor.ListView.C1ListView<T> component.","Metadata":{"Common.PropertyName":"T","Components.TypeParameter":"True","Components.TypeParameterIsCascading":"False"}},{"Kind":"Components.Component","Name":"ItemTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<T>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTemplate","Components.ChildContent":"True","Components.GenericTyped":"True"}},{"Kind":"Components.Component","Name":"LoadingItem","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewItemStyleEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.LoadingItem\">\r\n    <summary>\r\n    Gets or sets the callback that is called when the items are being loaded.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"LoadingItem","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"DisplayMemberPath","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.DisplayMemberPath\">\r\n    <summary>\r\n    Gets or sets the property name or path of the item that will be used to extract the text that will be displayed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"DisplayMemberPath"}},{"Kind":"Components.Component","Name":"GroupTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<C1.DataCollection.IDataCollectionGroup<System.Object, System.Object>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTemplate","Components.ChildContent":"True"}},{"Kind":"Components.Component","Name":"ItemsSource","TypeName":"System.Collections.IEnumerable","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemsSource\">\r\n    <summary>\r\n    Gets or sets the collection of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemsSource"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"C1.Blazor.Core.C1SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionMode\">\r\n    <summary>\r\n    Gets or sets how the cells or rows are selected.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SeparatorWidth","TypeName":"System.Double","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SeparatorWidth\">\r\n    <summary>\r\n    Gets or sets the width of the line separating items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SeparatorWidth"}},{"Kind":"Components.Component","Name":"ScrollBarVisibility","TypeName":"C1.Blazor.Core.ScrollBarVisibility","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ScrollBarVisibility\">\r\n    <summary>\r\n    Gets or sets visibility of the vertical scrollbar.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ScrollBarVisibility"}},{"Kind":"Components.Component","Name":"ItemStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemStyle\">\r\n    <summary>\r\n    Gets or sets the style of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemStyle"}},{"Kind":"Components.Component","Name":"ItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemBackgroundColor"}},{"Kind":"Components.Component","Name":"ItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTextColor"}},{"Kind":"Components.Component","Name":"AlternatingItemBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemBackgroundColor"}},{"Kind":"Components.Component","Name":"AlternatingItemTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.AlternatingItemTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the odd items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"AlternatingItemTextColor"}},{"Kind":"Components.Component","Name":"GroupBackgroundColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupBackgroundColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> that is used to paint the background of the groups.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupBackgroundColor"}},{"Kind":"Components.Component","Name":"GroupTextColor","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTextColor\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\"/> of the group items.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"GroupTextColor"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionStyle\">\r\n    <summary>\r\n    Gets or sets the style of the selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"Selection","TypeName":"C1.Blazor.Core.C1OrderedSet","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.Selection\">\r\n    <summary>\r\n    Gets or sets the ListView selection.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Selection"}},{"Kind":"Components.Component","Name":"ShowCheckboxes","TypeName":"System.Boolean","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ShowCheckboxes\">\r\n    <summary>\r\n    Sets the name of the property used to control checkboxes placed next to each item.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ShowCheckboxes"}},{"Kind":"Components.Component","Name":"SelectionChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.SelectionChanged\">\r\n    <summary>\r\n    Occurs after selection changed.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"SelectionChanged","Components.EventCallback":"True"}},{"Kind":"Components.Component","Name":"ItemTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"ItemDoubleTapped","TypeName":"System.EventHandler<C1.Blazor.ListView.ListViewInputEventArgs>","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemDoubleTapped\">\r\n    <summary>\r\n    Gets or sets the callback that will be called when an item is double tapped.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"ItemDoubleTapped","Components.DelegateSignature":"True"}},{"Kind":"Components.Component","Name":"Style","TypeName":"C1.Blazor.Core.C1Style","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Style\">\r\n    <summary>\r\n    Gets or sets the style applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Class\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Int32?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.TabIndex\">\r\n    <summary>\r\n    Gets or sets the CSS class applied to the component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Tag","TypeName":"System.Object","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Tag\">\r\n    <summary>\r\n    Gets or sets an arbitrary object that can be used to identify a specific component.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Tag"}},{"Kind":"Components.Component","Name":"Background","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Background\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the background.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Foreground","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Foreground\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the foreground (text and icons).\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Foreground"}},{"Kind":"Components.Component","Name":"BorderBrush","TypeName":"C1.Blazor.Core.C1Color","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderBrush\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Color\" /> used to paint the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderBrush"}},{"Kind":"Components.Component","Name":"BorderThickness","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.BorderThickness\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1Thickness\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"BorderThickness"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"C1.Blazor.Core.C1Thickness","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.Padding\">\r\n    <summary>\r\n    Gets or sets the padding of the <see cref=\"P:Content\" />.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"C1.Blazor.Core.C1CornerRadius","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.CornerRadius\">\r\n    <summary>\r\n    Gets or sets the <see cref=\"T:C1.Blazor.Core.C1CornerRadius\" /> of the border.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"FlowDirection","TypeName":"C1.Blazor.Core.FlowDirection","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FlowDirection\">\r\n    <summary>\r\n    Gets or sets the flow direction.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FlowDirection"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"C1.Blazor.Core.C1StyleFontSize?","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontSize\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontFamily\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"C1.Blazor.Core.C1StyleFontWeight","Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontWeight\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"C1.Blazor.Core.C1StyleFontStyle","IsEnum":true,"Documentation":"<member name=\"P:C1.Blazor.Core.C1View.FontStyle\">\r\n    <summary>\r\n    Gets or sets the font applied to the view.\r\n    </summary>\r\n</member>\r\n","Metadata":{"Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.IComponent","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.GenericTyped":"True","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-410034024,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":1483878191,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.ItemTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to render the items.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemTemplate","ParentTag":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.ItemTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1539592843,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent"}},{"HashCode":-1973554070,"Kind":"Components.ChildContent","Name":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","AssemblyName":"C1.Blazor.ListView","Documentation":"<member name=\"P:C1.Blazor.ListView.C1ListView`1.GroupTemplate\">\r\n    <summary>\r\n    Gets or sets the template used to display groups.\r\n    </summary>\r\n</member>\r\n","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GroupTemplate","ParentTag":"C1.Blazor.ListView.C1ListView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GroupTemplate' child content expression.","Metadata":{"Components.ChildContentParameterName":"True","Common.PropertyName":"Context"}}],"Metadata":{"Runtime.Name":"Components.None","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>.GroupTemplate","Components.IsSpecialKind":"Components.ChildContent","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":469224975,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":636009819,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":546575177,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2114769399,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1550772779,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":612198687,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2060463747,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1326584478,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-395655512,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1580936022,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-543923158,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":660330704,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-834393148,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":320548796,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74517637,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":879601327,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-318285175,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1419540319,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":409020797,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1324656409,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1401153931,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1104389462,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":120046139,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":240557118,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-798535488,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-148825719,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1657218375,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1575359467,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1832139381,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":314395922,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":466631769,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-620654161,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395294726,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-196963757,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":133350078,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1632911159,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1992045051,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":434043723,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":772720459,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1330823382,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":817317830,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-438970647,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1779680239,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1488654964,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1871753312,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":583309410,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":751792818,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-699986234,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":52762667,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-2132332790,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1915518260,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1632728403,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1007967319,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":326400237,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1538588348,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":481427772,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1941393997,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":145174147,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1616493707,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2049924970,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-499411268,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-467955947,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-646455659,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1318909817,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-566190700,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1370031643,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1396958713,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-584687426,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1507174455,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1480061990,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":395230637,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":749652276,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1279740321,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2011637847,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-921956754,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1440136766,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":257822301,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1058047039,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":104249782,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-386211422,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":832686668,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-279644017,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":891414409,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":2123884659,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-463806918,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-884469555,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":671319647,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":74752683,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1986906860,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":738238011,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1984892155,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":-1259166588,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers"}},{"HashCode":1270112777,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.PropertyName":"Attributes","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes"}},{"HashCode":-1132855933,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper"}},{"HashCode":-458149748,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"\n            <summary>\n            The host name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL fragment name.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper"}},{"HashCode":-222274357,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper"}},{"HashCode":-710024730,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            Gets or sets values for component parameters.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"\n            <summary>\n            Gets or sets the component type. This value is required.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper"}},{"HashCode":5888046,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper"}},{"HashCode":-98134858,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper"}},{"HashCode":-1374103696,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper"}},{"HashCode":-1261220325,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the action method.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the controller.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the area.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the page handler.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper"}},{"HashCode":-1709777796,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper"}},{"HashCode":1006186794,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"\n            <summary>\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper"}},{"HashCode":-334796707,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper"}},{"HashCode":74756029,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper"}},{"HashCode":394668654,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper"}},{"HashCode":2096572700,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            Renders a partial view.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located.\n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper"}},{"HashCode":300760378,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"\n            <summary>\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper"}},{"HashCode":1581530153,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper"}},{"HashCode":1854126375,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper"}},{"HashCode":628075759,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper"}},{"HashCode":1381111830,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper"}},{"HashCode":536842639,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper"}},{"HashCode":999350350,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.Fallback":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Bind"}},{"HashCode":-1874581601,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":688756199,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1525564843,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"checkbox","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-2050403530,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"text","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1758301023,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":2003827684,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":null,"Components.Bind.TypeAttribute":"number","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-259225247,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-570582221,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-dd","Components.Bind.TypeAttribute":"date","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":564364738,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1169474289,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Components.Bind.TypeAttribute":"datetime-local","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":871231720,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1515522350,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"yyyy-MM","Components.Bind.TypeAttribute":"month","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1647736512,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1296198824,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"True","Components.Bind.Format":"HH:mm:ss","Components.Bind.TypeAttribute":"time","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-1488907878,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":-596367609,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.ChangeAttribute":"onchange","Components.Bind.IsInvariantCulture":"False","Components.Bind.Format":null,"Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes"}},{"HashCode":1864122447,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}},{"HashCode":490191036,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":877686389,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"}},{"HashCode":899488481,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-543982663,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"}},{"HashCode":184745786,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":2088536480,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"}},{"HashCode":622693140,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-796020349,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"}},{"HashCode":646250911,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1614905710,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText"}},{"HashCode":789494904,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":282414888,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}},{"HashCode":-1742066353,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1376467328,"Kind":"Components.Bind","Name":"C1.Blazor.TreeView.C1TreeView","AssemblyName":"C1.Blazor.TreeView","Documentation":"Binds the provided expression to the 'SelectionMode' property and a change event delegate to the 'SelectionModeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TreeView","Attributes":[{"Name":"@bind-SelectionMode","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectionMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Core.C1SelectionMode>","IsEnum":true,"Documentation":"Binds the provided expression to the 'SelectionMode' property and a change event delegate to the 'SelectionModeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectionMode"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectionMode","Components.Bind.ChangeAttribute":"SelectionModeChanged","Common.TypeName":"C1.Blazor.TreeView.C1TreeView"}},{"HashCode":1792366763,"Kind":"Components.Bind","Name":"C1.Blazor.TreeView.C1TreeView","AssemblyName":"C1.Blazor.TreeView","Documentation":"Binds the provided expression to the 'SelectionMode' property and a change event delegate to the 'SelectionModeChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.TreeView.C1TreeView","Attributes":[{"Name":"@bind-SelectionMode","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectionMode","TypeName":"Microsoft.AspNetCore.Components.EventCallback<C1.Blazor.Core.C1SelectionMode>","IsEnum":true,"Documentation":"Binds the provided expression to the 'SelectionMode' property and a change event delegate to the 'SelectionModeChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectionMode"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectionMode","Components.Bind.ChangeAttribute":"SelectionModeChanged","Common.TypeName":"C1.Blazor.TreeView.C1TreeView","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-831168770,"Kind":"Components.Bind","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ToggleButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Core.C1ToggleButton"}},{"HashCode":-1427995675,"Kind":"Components.Bind","Name":"C1.Blazor.Core.C1ToggleButton","AssemblyName":"C1.Blazor.Core","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Core.C1ToggleButton","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Core.C1ToggleButton","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":80651079,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1NumericBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>"}},{"HashCode":-711217307,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1NumericBox<TNumeric>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1NumericBox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TNumeric>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1NumericBox<TNumeric>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1813547511,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":-1048670285,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":515511647,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoComplete","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>"}},{"HashCode":-1934099472,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":707113656,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1772338923,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoComplete<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoComplete","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1AutoComplete<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-963699282,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1Slider"}},{"HashCode":-484711453,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1Slider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1Slider","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Value","Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeName":"C1.Blazor.Input.C1Slider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1331937085,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1DropDown","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1DropDown"}},{"HashCode":918585838,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1DropDown","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1DropDown","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1DropDown","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1699451013,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Input.C1CheckBox"}},{"HashCode":-1368003747,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1CheckBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1CheckBox","Attributes":[{"Name":"@bind-IsChecked","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsChecked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean?>","Documentation":"Binds the provided expression to the 'IsChecked' property and a change event delegate to the 'IsCheckedChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsChecked"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsChecked","Components.Bind.ChangeAttribute":"IsCheckedChanged","Common.TypeName":"C1.Blazor.Input.C1CheckBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":626465528,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1MaskedTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox"}},{"HashCode":-53198939,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1MaskedTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1MaskedTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1MaskedTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1351542173,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1TextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1TextBox"}},{"HashCode":-1514770866,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1TextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1TextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1TextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2027897820,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1AutoCompleteTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox"}},{"HashCode":1998543949,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1AutoCompleteTextBox","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1AutoCompleteTextBox","Attributes":[{"Name":"@bind-Text","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Text","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Text' property and a change event delegate to the 'TextChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Text"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Text","Components.Bind.ChangeAttribute":"TextChanged","Common.TypeName":"C1.Blazor.Input.C1AutoCompleteTextBox","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1148660011,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider","Attributes":[{"Name":"@bind-LowerValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-LowerValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"LowerValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"LowerValue","Components.Bind.ChangeAttribute":"LowerValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":860848520,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1RangeSlider","Attributes":[{"Name":"@bind-UpperValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-UpperValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"UpperValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"UpperValue","Components.Bind.ChangeAttribute":"UpperValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider"}},{"HashCode":-1903183937,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider","Attributes":[{"Name":"@bind-LowerValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-LowerValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'LowerValue' property and a change event delegate to the 'LowerValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"LowerValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"LowerValue","Components.Bind.ChangeAttribute":"LowerValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-2105493487,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1RangeSlider","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1RangeSlider","Attributes":[{"Name":"@bind-UpperValue","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-UpperValue","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Double>","Documentation":"Binds the provided expression to the 'UpperValue' property and a change event delegate to the 'UpperValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"UpperValue"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"UpperValue","Components.Bind.ChangeAttribute":"UpperValueChanged","Common.TypeName":"C1.Blazor.Input.C1RangeSlider","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":638571913,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-335454170,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-2031382188,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ComboBox","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>"}},{"HashCode":-1828536194,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-SelectedIndex","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedIndex","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Int32>","Documentation":"Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedIndex"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedIndex","Components.Bind.ChangeAttribute":"SelectedIndexChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-729243584,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-SelectedItem","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-SelectedItem","TypeName":"Microsoft.AspNetCore.Components.EventCallback<T>","Documentation":"Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"SelectedItem"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"SelectedItem","Components.Bind.ChangeAttribute":"SelectedItemChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":1173213879,"Kind":"Components.Bind","Name":"C1.Blazor.Input.C1ComboBox<T>","AssemblyName":"C1.Blazor.Input","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.Input.C1ComboBox","Attributes":[{"Name":"@bind-IsDropDownOpen","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-IsDropDownOpen","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'IsDropDownOpen' property and a change event delegate to the 'IsDropDownOpenChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"IsDropDownOpen"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"IsDropDownOpen","Components.Bind.ChangeAttribute":"IsDropDownOpenChanged","Common.TypeName":"C1.Blazor.Input.C1ComboBox<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":-1863380340,"Kind":"Components.Bind","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1ListView","Attributes":[{"Name":"@bind-Selection","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selection"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selection","Components.Bind.ChangeAttribute":"SelectionChanged","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>"}},{"HashCode":-764081119,"Kind":"Components.Bind","Name":"C1.Blazor.ListView.C1ListView<T>","AssemblyName":"C1.Blazor.ListView","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"C1.Blazor.ListView.C1ListView","Attributes":[{"Name":"@bind-Selection","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Selection","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Int32>>","Documentation":"Binds the provided expression to the 'Selection' property and a change event delegate to the 'SelectionChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Selection"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ValueAttribute":"Selection","Components.Bind.ChangeAttribute":"SelectionChanged","Common.TypeName":"C1.Blazor.ListView.C1ListView<T>","Components.NameMatch":"Components.FullyQualifiedNameMatch"}},{"HashCode":93715084,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.PropertyName":"Ref","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Ref"}},{"HashCode":-115576540,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.PropertyName":"Key","Common.DirectiveAttribute":"True"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.ClassifyAttributesOnly":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Key"}}],"CSharpLanguageVersion":1000},"RootNamespace":"TreeViewExplorer.Server","Documents":[{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Styling\\CleanAccordion.razor","TargetPath":"Pages\\Styling\\CleanAccordion.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Nodes\\Adding.razor","TargetPath":"Pages\\Nodes\\Adding.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Nodes\\DragAndDrop.razor","TargetPath":"Pages\\Nodes\\DragAndDrop.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Behavior.razor","TargetPath":"Pages\\Behavior.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\IconTemplate.razor","TargetPath":"Pages\\IconTemplate.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Styling\\AccordionTrees.razor","TargetPath":"Pages\\Styling\\AccordionTrees.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Styling\\NodeBorders.razor","TargetPath":"Pages\\Styling\\NodeBorders.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\ItemTemplate.razor","TargetPath":"Pages\\ItemTemplate.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Error.cshtml","TargetPath":"Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Nodes\\DragAndDropBetweenTrees.razor","TargetPath":"Pages\\Nodes\\DragAndDropBetweenTrees.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\RightToLeft.razor","TargetPath":"Pages\\RightToLeft.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Nodes\\ShowCheckboxes.razor","TargetPath":"Pages\\Nodes\\ShowCheckboxes.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Nodes\\Removing.razor","TargetPath":"Pages\\Nodes\\Removing.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Unbound.razor","TargetPath":"Pages\\Unbound.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Searching.razor","TargetPath":"Pages\\Searching.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\Pages\\Styling\\Overview.razor","TargetPath":"Pages\\Styling\\Overview.razor","FileKind":"component"},{"FilePath":"C:\\Git\\c1-netcore\\Blazor\\Samples\\TreeView\\TreeViewExplorer.Server\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"}],"SerializationFormat":"0.3"}