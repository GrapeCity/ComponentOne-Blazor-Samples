//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace C1ListViewExplorer.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("C1ListViewExplorer.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type here to filter.
        /// </summary>
        public static string Filter_TextFilter_Placeholder {
            get {
                return ResourceManager.GetString("Filter_TextFilter_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable asynchronous, full-text filtering on the C1ListView control through the C1DataCollection..
        /// </summary>
        public static string FilterDescription {
            get {
                return ResourceManager.GetString("FilterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows how to filter a list or item just by tying in a text box.
        /// </summary>
        public static string FilterSummary {
            get {
                return ResourceManager.GetString("FilterSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter.
        /// </summary>
        public static string FilterTitle {
            get {
                return ResourceManager.GetString("FilterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Started.
        /// </summary>
        public static string GettingStarted {
            get {
                return ResourceManager.GetString("GettingStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display list items under grouped headings by grouping the C1ListView control through the C1DataCollection..
        /// </summary>
        public static string GroupingDescription {
            get {
                return ResourceManager.GetString("GroupingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display a grouped list of items.
        /// </summary>
        public static string GroupingSummary {
            get {
                return ResourceManager.GetString("GroupingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grouping.
        /// </summary>
        public static string GroupingTitle {
            get {
                return ResourceManager.GetString("GroupingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter here to search for videos on YouTube.
        /// </summary>
        public static string OnDemand_TextSearch_PlaceHolder {
            get {
                return ResourceManager.GetString("OnDemand_TextSearch_PlaceHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With on-demand loading, C1ListView loads items as the user scrolls. Since the list does not know the total number of rows, the scroll bar size and position changes as more data is loaded into view. This virtualization technique is supported by the help of C1DataCollection..
        /// </summary>
        public static string OnDemandDescription {
            get {
                return ResourceManager.GetString("OnDemandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display a list of items that support bringing more pages as the user scrolls down.
        /// </summary>
        public static string OnDemandSummary {
            get {
                return ResourceManager.GetString("OnDemandSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On Demand.
        /// </summary>
        public static string OnDemandTitle {
            get {
                return ResourceManager.GetString("OnDemandTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The C1ListView control for Blazor provides asynchronous sorting, filtering, grouping and on-demand loading of items in a basic list by the help of the C1DataCollection component..
        /// </summary>
        public static string OverviewDescription {
            get {
                return ResourceManager.GetString("OverviewDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string OverviewTitle {
            get {
                return ResourceManager.GetString("OverviewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get a ListView with paging using C1ListView, C1DataPager and C1DataCollection. Like the virtual mode and on-demand loading, paging is supported in C1ListView by the help of C1DataCollection..
        /// </summary>
        public static string PagingDescription {
            get {
                return ResourceManager.GetString("PagingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paging allows displayaing a big source by spliting it in pages which are navigable through a DataPager control.
        /// </summary>
        public static string PagingSummary {
            get {
                return ResourceManager.GetString("PagingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paging.
        /// </summary>
        public static string PagingTitle {
            get {
                return ResourceManager.GetString("PagingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage how items are selected by setting the selection mode. C1ListView supports single item and ranges when the user holds the SHIFT key. The selected items data can then be easily retrieved through the control’s Selection property..
        /// </summary>
        public static string SelectionModesDescription {
            get {
                return ResourceManager.GetString("SelectionModesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the various selection modes..
        /// </summary>
        public static string SelectionModesSummary {
            get {
                return ResourceManager.GetString("SelectionModesSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection Modes.
        /// </summary>
        public static string SelectionModesTitle {
            get {
                return ResourceManager.GetString("SelectionModesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort ascendingly.
        /// </summary>
        public static string SortAscendingly {
            get {
                return ResourceManager.GetString("SortAscendingly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort descendingly.
        /// </summary>
        public static string SortDescendingly {
            get {
                return ResourceManager.GetString("SortDescendingly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can easily sort the C1ListView asynchronously in either direction through the C1DataCollection..
        /// </summary>
        public static string SortingDescription {
            get {
                return ResourceManager.GetString("SortingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows how to sort the displayed source of items.
        /// </summary>
        public static string SortingSummary {
            get {
                return ResourceManager.GetString("SortingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting.
        /// </summary>
        public static string SortingTitle {
            get {
                return ResourceManager.GetString("SortingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1ListView supports data virtualization for loading large data sets in chunks or pages as the user scrolls. The list knows the total number of rows but only loads and displays those that are visible to the user. This virtualization technique is supported by the help of C1DataCollection..
        /// </summary>
        public static string VirtualModeDescription {
            get {
                return ResourceManager.GetString("VirtualModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a virtualized list of items..
        /// </summary>
        public static string VirtualModeSummary {
            get {
                return ResourceManager.GetString("VirtualModeSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Mode.
        /// </summary>
        public static string VirtualModeTitle {
            get {
                return ResourceManager.GetString("VirtualModeTitle", resourceCulture);
            }
        }
    }
}
