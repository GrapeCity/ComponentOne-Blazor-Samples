@page "/filter"
@using C1.Blazor.Core
@using C1.Blazor.Input
@using C1.Blazor.ListView
@using C1.DataCollection
@using Resources

<h1>@AppResources.FilterTitle</h1>
<p>@AppResources.FilterDescription</p>

<C1TextBox TextChanged="OnTextChanged" Placeholder="Type here to filter" Style="@("width:500px;margin-bottom:8px")" />
<C1ListView @ref="list" ItemsSource="products" T="Customer" DisplayMemberPath="Name" ItemBackgroundColor="@("#5f6fa4")" ItemTextColor="C1Color.White" AlternatingItemBackgroundColor="C1Color.White" AlternatingItemTextColor="@("#5f6fa4")" SeparatorWidth="0" Style="@("max-height:50vh")" />
@code
{
    string currentFilterValue;
    C1ListView<Customer> list;
    IEnumerable<Customer> products;
    System.Threading.SemaphoreSlim filterSemaphore;

    protected override void OnInitialized()
    {
        filterSemaphore = new System.Threading.SemaphoreSlim(1);
        products = Customer.GetCustomerList(100);
    }

    private async Task OnTextChanged(string value)
    {
        Console.WriteLine($"OnTextChanged({value})");
        try
        {
            var filter = value;
            currentFilterValue = filter;
            await Task.Delay(400);
            await filterSemaphore.WaitAsync();
            if (currentFilterValue == filter)
            {
                Console.WriteLine("FilterAsync");
                await list.DataCollection.FilterAsync("Name", FilterOperation.Contains, filter);
            }
        }
        finally
        {
            filterSemaphore.Release();
        }
    }
}
