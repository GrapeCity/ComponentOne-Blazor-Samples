@page "/FlexChart/Marker"
@using Localization
@using C1.Chart;
@using C1.Blazor.Chart;
@using C1.Blazor.Chart.Interaction;
@using C1.Blazor.Input;

<FlexChart Class="chart" ChartType="ChartType.Line" BindingX="Date" ItemsSource="Data" Tooltip="">
    <AxisCollection>
        <Axis AxisType="AxisType.X" Position="Position.Bottom" LabelAngle="45" Format="MMM-dd" />
    </AxisCollection>
    <SeriesCollection>
        <Series Binding="Price" />
    </SeriesCollection>
    <MarkerCollection>
        <LineMarker Lines="LineMarkerLines.Both" LineStyle="stroke:gray;stroke-width:0.5" 
                    Content=@content HorizontalPosition="0.5" VerticalPosition="0.5"
                    Interaction="action ?? LineMarkerInteraction.None" />
    </MarkerCollection>
</FlexChart>

<_Sections>
    <Title>@FlexChartRes.MarkerTitle</Title>
    <Settings>
        Interaction <C1ComboBox ItemsSource="actions" @bind-SelectedItem="action" Class="filled-drop-down" Style="@("margin:8px 8px 8px 0px")" />
    </Settings>
    <Summary>@FlexChartRes.MarkerSummary</Summary>
    <Description>@FlexChartRes.MarkerDescription</Description>
</_Sections>

@code {
    LineMarkerInteraction[] actions = new LineMarkerInteraction[] { LineMarkerInteraction.None, LineMarkerInteraction.Move, LineMarkerInteraction.Drag };
    LineMarkerInteraction? action = LineMarkerInteraction.Move;

    string content = "<div style='padding:6px;border:1px solid darkgrey;background:#f0f0f0;'><b>{x:MMM-dd}</b><br>${y}</div>";

    List<DataSource.PriceData> Data { get; set; }

    static Random rnd = new Random();

    protected override void OnInitialized()
    {
        Data = DataSource.GetData();
    }

    public class DataSource
    {
        private static Random rnd = new Random();

        public class PriceData
        {
            public DateTime Date { get; set; }
            public double Price { get; set; }
        }

        public static List<PriceData> GetData(int rangeMin = 100, int rangeMax = 1000)
        {
            var data = new List<PriceData>();
            for (int i = 0; i < 100; i++)
            {
                var country = new PriceData
                {
                    Date = DateTime.Today.AddDays(i - 100),
                    Price = 100 + Math.Round(rnd.NextDouble() * 10 - 4, 1)
                };
            data.Add(country);
        }
            return data;
        }
}
}
