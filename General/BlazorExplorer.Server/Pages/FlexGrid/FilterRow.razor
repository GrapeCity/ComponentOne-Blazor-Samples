@page "/FlexGrid/FilterRow"
@using Localization
@using System.Collections.ObjectModel;
@using C1.Blazor.Grid
<FlexGrid AutoGenerateColumns="false" ItemsSource="_customers" HeadersVisibility="GridHeadersVisibility.All" FrozenRows="1" Style="@("max-height:50vh")">
    <FlexGridRows>
        <GridFilterRow Placeholder="@FlexGridRes.FilterPlaceholderText" AutoComplete="true" />
    </FlexGridRows>

    <FlexGridColumns>
       <GridColumn Header="Active" Binding="Active" />
       <GridColumn Header="First Name" Binding="FirstName"/>
       <GridColumn Header="Last Name" Binding="LastName" />
       <GridColumn Header="Country" Binding="CountryId" DataMap="@_countryDataMap"  />
       <GridColumn Header="City" Binding="City" FilterLoading="@CityOnFilterLoading"/>
       <GridColumn Header="OrderCount" Binding="OrderCount"/>
       <GridColumn Header="LastOrderDate" Binding="LastOrderDate" />
    </FlexGridColumns>
</FlexGrid>

<_Sections>
    <Title>@FlexGridRes.FilterRowTitle</Title>
    <Summary>@FlexGridRes.FilterRowSummary</Summary>
    <Description>@FlexGridRes.FilterRowDescription</Description>
</_Sections>

@code {
    ObservableCollection<Customer> _customers;
    GridDataMap _countryDataMap;
    protected override void OnInitialized()
    {
        _customers = Customer.GetCustomerList(100);
        _countryDataMap = new GridDataMap { ItemsSource = Customer.GetCountries(), SelectedValuePath = "Key", DisplayMemberPath = "Value" };
    }

    void CityOnFilterLoading(object sender, GridColumnFilterLoadingEventArgs e)
    {
        e.ShowApplyButton = true;
        e.ShowClearButton = true;
    }
}
