@page "/DataFilter/FiltersSummary"
@using Localization
@using C1.Blazor.DataFilter
@using C1.Blazor.Grid
@using C1.Blazor.Accordion

<section class="sampleDataFilterSection">
    <div class="filtersSection">
        <C1DataFilter ItemsSource="@data" FilterAutoGenerating="@FilterAutoGenerating" Style="@("max-height: inherit")" ExpandMode="@ExpandMode.One">

        </C1DataFilter>
    </div>
    <div class="dataSection">
        <FlexGrid AutoGeneratingColumn="OnAutoGeneratingColumn" ItemsSource="@data" HeadersVisibility="GridHeadersVisibility.All" Style="@("max-height: inherit")">

        </FlexGrid>
    </div>
</section>

<_Sections>
    <Title>@DataFilterRes.FilterSummaryTitle</Title>
    <Description>@DataFilterRes.FilterSummaryDescription</Description>
</_Sections>

@code{

    C1.DataCollection.C1DataCollection<Car> data { get; set; }


    protected override void OnInitialized()
    {
        var carsTable = DataProvider.GetCarTable();
        data = new C1.DataCollection.C1DataCollection<Car>(DataProvider.GetCarDataCollection(carsTable));
    }
    
    void OnAutoGeneratingColumn(object sender, GridAutoGeneratingColumnEventArgs args)
    {
        if (args.Property.Name == nameof(Car.Picture))
        {
            args.Column.CellTemplate = target => builder =>
            {
                builder.OpenElement(0, "img");
                builder.AddAttribute(1, "style", "max-height: 35px");
                builder.AddAttribute(2, "src", $"data:image/bmp;base64, {((Lazy<string>)target).Value}");
                builder.CloseElement();
            };
        }
    }

    void FilterAutoGenerating(object sender, FilterAutoGeneratingEventArgs e)
    {
        if (e.Property.Name == nameof(Car.Brand))
        {
            var filter = e.Filter as ChecklistFilter;
            filter.FilterSummary.PropertyName = nameof(Car.Brand);
            filter.FilterSummary.Label = "Models:";
            filter.FilterSummary.AggregateType = AggregateType.Count;
            filter.ShowSearchBox = true;
        }
        else if (e.Property.Name == nameof(Car.Model))
        {
            var modelFilter = e.Filter as ChecklistFilter;
            modelFilter.FilterSummary.AggregateType = AggregateType.Max;
            modelFilter.FilterSummary.CustomFormat = "C0";
            modelFilter.FilterSummary.Label = "Max price: ";
            modelFilter.FilterSummary.PropertyName = nameof(Car.Price);
        }
        else if (e.Property.Name == nameof(Car.TransmissAutomatic))
        {
            var filter = e.Filter as ChecklistFilter;
            var unset = filter.Items.FirstOrDefault(i => string.IsNullOrEmpty(i.DisplayValue));
            if (unset != null)
            {
                unset.DisplayValue = C1.Blazor.DataFilter.Resources.Resource.Null;
            }
        }

    }
}
