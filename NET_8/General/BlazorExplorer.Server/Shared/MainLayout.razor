@inherits LayoutComponentBase
@implements IDisposable
@using Localization
@using Models

<div class="hide">
    <_SiteNav IsNarrowScreen="true"></_SiteNav>
    @if (allGroups != null)
    {
        <ul class="narrow-screen task-bar-nav">
            @foreach (var group in allGroups)
            {
                <_ControlGroup Model="group"></_ControlGroup>
            }
        </ul>
    }
</div>

<header>
    <div class="hamburger-nav-btn narrow-screen"><a class="glyphicon glyphicon-home" href=""></a><!--<a href="/"><span class="icon-bars"></span></a>--></div>
    <a class="logo-container" href="@(Resource.Layout_ProductUrl)" target="_blank">
        <img src="Content/images/componentone-logo.svg"
             alt="ComponentOne logo"
             style="padding: 2px 1px;"
             width="46"
             height="46" />
        @_App.HtmlRaw(Resource.Layout_ComponentOne)
    </a>

    <div class="task-bar">
        <span class="semi-bold">@_App.HtmlRaw(Resource.Layout_LongTitle)</span>
        <_SiteNav IsNarrowScreen="false"></_SiteNav>
    </div>
    <_BreadcrumbNav Path="@_App.RelativeUri"></_BreadcrumbNav>
</header>

<div class="main-content">
    @Body
</div>

<footer>
    <a href="@(Resource.Layout_GrapeCityUrl)">
        <img src="Content/images/logo.svg"
             alt="log"
             height="44"
             />
    </a>
    <p>
        © @DateTime.Now.Year @Resource.Layout_License1<br />
        @Resource.Layout_License2
    </p>
</footer>


@code {
    List<ControlGroup> allGroups = null;
    private Action<object> _updateUI;

    protected override void OnInitialized()
    {
         _updateUI = new Action<object>((e) => { base.InvokeAsync(this.StateHasChanged); });
        _App.ViewBagSrv.AddObserveAction(_updateUI);
        var allGroups = new List<ControlGroup>();
        allGroups.Add(ControlPages.NewGroup);
        allGroups.Add(ControlPages.PopularGroup);
        allGroups.AddRange(ControlPages.ControlGroups);
    }

    public void Dispose()
    {
        _App.ViewBagSrv.RemoveObserveAction(_updateUI);
    }
}





