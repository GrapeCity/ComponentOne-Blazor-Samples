@page "/conditionalformatting"
@using Resources
@using C1.Blazor.Core
@using C1.Blazor.Input
@using C1.Blazor.Grid
@using System.Collections.ObjectModel;

<h1>@AppResources.ConditionalFormattingTitle</h1>
<p>@AppResources.ConditionalFormattingDescription</p>

<FlexGrid CellFactory="@cellFactory" AutoGenerateColumns="false" ItemsSource="customers" Style="@("max-height:50vh")">
    <FlexGridColumns>
        <GridColumn Binding="FirstName" />
        <GridColumn Binding="LastName" />
        <GridColumn Binding="OrderTotal" Format="C2" InputType="C1HtmlInputType.Number" />
        <GridColumn Binding="OrderCount" Format="N1" InputType="C1HtmlInputType.Number" />
        <GridDateTimeColumn Binding="LastOrderDate" Format="d" Mode="GridDateTimeColumnMode.Date" />
        <GridDateTimeColumn Binding="LastOrderDate" AllowFiltering="false" Header="Last Order Time" Format="t" Mode="GridDateTimeColumnMode.Time" />
    </FlexGridColumns>
</FlexGrid>

@code {
    ObservableCollection<Customer> customers;
    GridCellFactory cellFactory = new MyCellFactory();

    protected override void OnInitialized()
    {
        customers = Customer.GetCustomerList(100);
    }

    public class MyCellFactory : GridCellFactory
    {
        public override void PrepareCellStyle(GridCellType cellType, GridCellRange range, C1Style style, C1Thickness internalBorders)
        {
            base.PrepareCellStyle(cellType, range, style, internalBorders);
            var orderTotalColumn = Grid.Columns["OrderTotal"];
            var orderCountColumn = Grid.Columns["OrderCount"];
            if (cellType == GridCellType.Cell && range.Column == orderTotalColumn.Index)
            {
                var cellValue = Grid[range.Row, range.Column] as double?;
                if (cellValue.HasValue)
                {
                    style.Color = cellValue < 5000.0 ? C1Color.Red : C1Color.Green;
                }
            }
            if (cellType == GridCellType.Cell && range.Column == orderCountColumn.Index)
            {
                var cellValue = Grid[range.Row, range.Column] as int?;
                if (cellValue.HasValue)
                {
                    style.BackgroundColor = cellValue < 50.0 ? C1Color.FromArgb(0xFF, 0xFF, 0x70, 0x70) : C1Color.FromArgb(0xFF, 0x8E, 0xE9, 0x8E);
                    style.Color = C1Color.Black;
                }
            }
        }
    }
}
